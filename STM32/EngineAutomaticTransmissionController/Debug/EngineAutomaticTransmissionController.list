
EngineAutomaticTransmissionController.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000130  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0000873c  08000130  08000130  00010130  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000d10  08008870  08008870  00018870  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08009580  08009580  00020200  2**0
                  CONTENTS
  4 .ARM          00000000  08009580  08009580  00020200  2**0
                  CONTENTS
  5 .preinit_array 00000000  08009580  08009580  00020200  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08009580  08009580  00019580  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  08009584  08009584  00019584  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         00000200  20000000  08009588  00020000  2**3
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00000254  20000200  08009788  00020200  2**3
                  ALLOC
 10 ._user_heap_stack 00000604  20000454  08009788  00020454  2**0
                  ALLOC
 11 .ARM.attributes 00000029  00000000  00000000  00020200  2**0
                  CONTENTS, READONLY
 12 .comment      00000043  00000000  00000000  00020229  2**0
                  CONTENTS, READONLY
 13 .debug_info   00002d11  00000000  00000000  0002026c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 00001001  00000000  00000000  00022f7d  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 00000340  00000000  00000000  00023f80  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_rnglists 00000230  00000000  00000000  000242c0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  00003da9  00000000  00000000  000244f0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   00004fc2  00000000  00000000  00028299  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    0000baf0  00000000  00000000  0002d25b  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_frame  000022e4  00000000  00000000  00038d4c  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 0000008c  00000000  00000000  0003b030  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000130 <__do_global_dtors_aux>:
 8000130:	b510      	push	{r4, lr}
 8000132:	4c05      	ldr	r4, [pc, #20]	; (8000148 <__do_global_dtors_aux+0x18>)
 8000134:	7823      	ldrb	r3, [r4, #0]
 8000136:	b933      	cbnz	r3, 8000146 <__do_global_dtors_aux+0x16>
 8000138:	4b04      	ldr	r3, [pc, #16]	; (800014c <__do_global_dtors_aux+0x1c>)
 800013a:	b113      	cbz	r3, 8000142 <__do_global_dtors_aux+0x12>
 800013c:	4804      	ldr	r0, [pc, #16]	; (8000150 <__do_global_dtors_aux+0x20>)
 800013e:	f3af 8000 	nop.w
 8000142:	2301      	movs	r3, #1
 8000144:	7023      	strb	r3, [r4, #0]
 8000146:	bd10      	pop	{r4, pc}
 8000148:	20000200 	.word	0x20000200
 800014c:	00000000 	.word	0x00000000
 8000150:	08008854 	.word	0x08008854

08000154 <frame_dummy>:
 8000154:	b508      	push	{r3, lr}
 8000156:	4b03      	ldr	r3, [pc, #12]	; (8000164 <frame_dummy+0x10>)
 8000158:	b11b      	cbz	r3, 8000162 <frame_dummy+0xe>
 800015a:	4903      	ldr	r1, [pc, #12]	; (8000168 <frame_dummy+0x14>)
 800015c:	4803      	ldr	r0, [pc, #12]	; (800016c <frame_dummy+0x18>)
 800015e:	f3af 8000 	nop.w
 8000162:	bd08      	pop	{r3, pc}
 8000164:	00000000 	.word	0x00000000
 8000168:	20000204 	.word	0x20000204
 800016c:	08008854 	.word	0x08008854

08000170 <strlen>:
 8000170:	4603      	mov	r3, r0
 8000172:	f813 2b01 	ldrb.w	r2, [r3], #1
 8000176:	2a00      	cmp	r2, #0
 8000178:	d1fb      	bne.n	8000172 <strlen+0x2>
 800017a:	1a18      	subs	r0, r3, r0
 800017c:	3801      	subs	r0, #1
 800017e:	4770      	bx	lr

08000180 <__aeabi_drsub>:
 8000180:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
 8000184:	e002      	b.n	800018c <__adddf3>
 8000186:	bf00      	nop

08000188 <__aeabi_dsub>:
 8000188:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

0800018c <__adddf3>:
 800018c:	b530      	push	{r4, r5, lr}
 800018e:	ea4f 0441 	mov.w	r4, r1, lsl #1
 8000192:	ea4f 0543 	mov.w	r5, r3, lsl #1
 8000196:	ea94 0f05 	teq	r4, r5
 800019a:	bf08      	it	eq
 800019c:	ea90 0f02 	teqeq	r0, r2
 80001a0:	bf1f      	itttt	ne
 80001a2:	ea54 0c00 	orrsne.w	ip, r4, r0
 80001a6:	ea55 0c02 	orrsne.w	ip, r5, r2
 80001aa:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 80001ae:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80001b2:	f000 80e2 	beq.w	800037a <__adddf3+0x1ee>
 80001b6:	ea4f 5454 	mov.w	r4, r4, lsr #21
 80001ba:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 80001be:	bfb8      	it	lt
 80001c0:	426d      	neglt	r5, r5
 80001c2:	dd0c      	ble.n	80001de <__adddf3+0x52>
 80001c4:	442c      	add	r4, r5
 80001c6:	ea80 0202 	eor.w	r2, r0, r2
 80001ca:	ea81 0303 	eor.w	r3, r1, r3
 80001ce:	ea82 0000 	eor.w	r0, r2, r0
 80001d2:	ea83 0101 	eor.w	r1, r3, r1
 80001d6:	ea80 0202 	eor.w	r2, r0, r2
 80001da:	ea81 0303 	eor.w	r3, r1, r3
 80001de:	2d36      	cmp	r5, #54	; 0x36
 80001e0:	bf88      	it	hi
 80001e2:	bd30      	pophi	{r4, r5, pc}
 80001e4:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 80001e8:	ea4f 3101 	mov.w	r1, r1, lsl #12
 80001ec:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
 80001f0:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 80001f4:	d002      	beq.n	80001fc <__adddf3+0x70>
 80001f6:	4240      	negs	r0, r0
 80001f8:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80001fc:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
 8000200:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000204:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 8000208:	d002      	beq.n	8000210 <__adddf3+0x84>
 800020a:	4252      	negs	r2, r2
 800020c:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000210:	ea94 0f05 	teq	r4, r5
 8000214:	f000 80a7 	beq.w	8000366 <__adddf3+0x1da>
 8000218:	f1a4 0401 	sub.w	r4, r4, #1
 800021c:	f1d5 0e20 	rsbs	lr, r5, #32
 8000220:	db0d      	blt.n	800023e <__adddf3+0xb2>
 8000222:	fa02 fc0e 	lsl.w	ip, r2, lr
 8000226:	fa22 f205 	lsr.w	r2, r2, r5
 800022a:	1880      	adds	r0, r0, r2
 800022c:	f141 0100 	adc.w	r1, r1, #0
 8000230:	fa03 f20e 	lsl.w	r2, r3, lr
 8000234:	1880      	adds	r0, r0, r2
 8000236:	fa43 f305 	asr.w	r3, r3, r5
 800023a:	4159      	adcs	r1, r3
 800023c:	e00e      	b.n	800025c <__adddf3+0xd0>
 800023e:	f1a5 0520 	sub.w	r5, r5, #32
 8000242:	f10e 0e20 	add.w	lr, lr, #32
 8000246:	2a01      	cmp	r2, #1
 8000248:	fa03 fc0e 	lsl.w	ip, r3, lr
 800024c:	bf28      	it	cs
 800024e:	f04c 0c02 	orrcs.w	ip, ip, #2
 8000252:	fa43 f305 	asr.w	r3, r3, r5
 8000256:	18c0      	adds	r0, r0, r3
 8000258:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 800025c:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8000260:	d507      	bpl.n	8000272 <__adddf3+0xe6>
 8000262:	f04f 0e00 	mov.w	lr, #0
 8000266:	f1dc 0c00 	rsbs	ip, ip, #0
 800026a:	eb7e 0000 	sbcs.w	r0, lr, r0
 800026e:	eb6e 0101 	sbc.w	r1, lr, r1
 8000272:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
 8000276:	d31b      	bcc.n	80002b0 <__adddf3+0x124>
 8000278:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
 800027c:	d30c      	bcc.n	8000298 <__adddf3+0x10c>
 800027e:	0849      	lsrs	r1, r1, #1
 8000280:	ea5f 0030 	movs.w	r0, r0, rrx
 8000284:	ea4f 0c3c 	mov.w	ip, ip, rrx
 8000288:	f104 0401 	add.w	r4, r4, #1
 800028c:	ea4f 5244 	mov.w	r2, r4, lsl #21
 8000290:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
 8000294:	f080 809a 	bcs.w	80003cc <__adddf3+0x240>
 8000298:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 800029c:	bf08      	it	eq
 800029e:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80002a2:	f150 0000 	adcs.w	r0, r0, #0
 80002a6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80002aa:	ea41 0105 	orr.w	r1, r1, r5
 80002ae:	bd30      	pop	{r4, r5, pc}
 80002b0:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 80002b4:	4140      	adcs	r0, r0
 80002b6:	eb41 0101 	adc.w	r1, r1, r1
 80002ba:	3c01      	subs	r4, #1
 80002bc:	bf28      	it	cs
 80002be:	f5b1 1f80 	cmpcs.w	r1, #1048576	; 0x100000
 80002c2:	d2e9      	bcs.n	8000298 <__adddf3+0x10c>
 80002c4:	f091 0f00 	teq	r1, #0
 80002c8:	bf04      	itt	eq
 80002ca:	4601      	moveq	r1, r0
 80002cc:	2000      	moveq	r0, #0
 80002ce:	fab1 f381 	clz	r3, r1
 80002d2:	bf08      	it	eq
 80002d4:	3320      	addeq	r3, #32
 80002d6:	f1a3 030b 	sub.w	r3, r3, #11
 80002da:	f1b3 0220 	subs.w	r2, r3, #32
 80002de:	da0c      	bge.n	80002fa <__adddf3+0x16e>
 80002e0:	320c      	adds	r2, #12
 80002e2:	dd08      	ble.n	80002f6 <__adddf3+0x16a>
 80002e4:	f102 0c14 	add.w	ip, r2, #20
 80002e8:	f1c2 020c 	rsb	r2, r2, #12
 80002ec:	fa01 f00c 	lsl.w	r0, r1, ip
 80002f0:	fa21 f102 	lsr.w	r1, r1, r2
 80002f4:	e00c      	b.n	8000310 <__adddf3+0x184>
 80002f6:	f102 0214 	add.w	r2, r2, #20
 80002fa:	bfd8      	it	le
 80002fc:	f1c2 0c20 	rsble	ip, r2, #32
 8000300:	fa01 f102 	lsl.w	r1, r1, r2
 8000304:	fa20 fc0c 	lsr.w	ip, r0, ip
 8000308:	bfdc      	itt	le
 800030a:	ea41 010c 	orrle.w	r1, r1, ip
 800030e:	4090      	lslle	r0, r2
 8000310:	1ae4      	subs	r4, r4, r3
 8000312:	bfa2      	ittt	ge
 8000314:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 8000318:	4329      	orrge	r1, r5
 800031a:	bd30      	popge	{r4, r5, pc}
 800031c:	ea6f 0404 	mvn.w	r4, r4
 8000320:	3c1f      	subs	r4, #31
 8000322:	da1c      	bge.n	800035e <__adddf3+0x1d2>
 8000324:	340c      	adds	r4, #12
 8000326:	dc0e      	bgt.n	8000346 <__adddf3+0x1ba>
 8000328:	f104 0414 	add.w	r4, r4, #20
 800032c:	f1c4 0220 	rsb	r2, r4, #32
 8000330:	fa20 f004 	lsr.w	r0, r0, r4
 8000334:	fa01 f302 	lsl.w	r3, r1, r2
 8000338:	ea40 0003 	orr.w	r0, r0, r3
 800033c:	fa21 f304 	lsr.w	r3, r1, r4
 8000340:	ea45 0103 	orr.w	r1, r5, r3
 8000344:	bd30      	pop	{r4, r5, pc}
 8000346:	f1c4 040c 	rsb	r4, r4, #12
 800034a:	f1c4 0220 	rsb	r2, r4, #32
 800034e:	fa20 f002 	lsr.w	r0, r0, r2
 8000352:	fa01 f304 	lsl.w	r3, r1, r4
 8000356:	ea40 0003 	orr.w	r0, r0, r3
 800035a:	4629      	mov	r1, r5
 800035c:	bd30      	pop	{r4, r5, pc}
 800035e:	fa21 f004 	lsr.w	r0, r1, r4
 8000362:	4629      	mov	r1, r5
 8000364:	bd30      	pop	{r4, r5, pc}
 8000366:	f094 0f00 	teq	r4, #0
 800036a:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
 800036e:	bf06      	itte	eq
 8000370:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
 8000374:	3401      	addeq	r4, #1
 8000376:	3d01      	subne	r5, #1
 8000378:	e74e      	b.n	8000218 <__adddf3+0x8c>
 800037a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 800037e:	bf18      	it	ne
 8000380:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 8000384:	d029      	beq.n	80003da <__adddf3+0x24e>
 8000386:	ea94 0f05 	teq	r4, r5
 800038a:	bf08      	it	eq
 800038c:	ea90 0f02 	teqeq	r0, r2
 8000390:	d005      	beq.n	800039e <__adddf3+0x212>
 8000392:	ea54 0c00 	orrs.w	ip, r4, r0
 8000396:	bf04      	itt	eq
 8000398:	4619      	moveq	r1, r3
 800039a:	4610      	moveq	r0, r2
 800039c:	bd30      	pop	{r4, r5, pc}
 800039e:	ea91 0f03 	teq	r1, r3
 80003a2:	bf1e      	ittt	ne
 80003a4:	2100      	movne	r1, #0
 80003a6:	2000      	movne	r0, #0
 80003a8:	bd30      	popne	{r4, r5, pc}
 80003aa:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 80003ae:	d105      	bne.n	80003bc <__adddf3+0x230>
 80003b0:	0040      	lsls	r0, r0, #1
 80003b2:	4149      	adcs	r1, r1
 80003b4:	bf28      	it	cs
 80003b6:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
 80003ba:	bd30      	pop	{r4, r5, pc}
 80003bc:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
 80003c0:	bf3c      	itt	cc
 80003c2:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
 80003c6:	bd30      	popcc	{r4, r5, pc}
 80003c8:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80003cc:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
 80003d0:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 80003d4:	f04f 0000 	mov.w	r0, #0
 80003d8:	bd30      	pop	{r4, r5, pc}
 80003da:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80003de:	bf1a      	itte	ne
 80003e0:	4619      	movne	r1, r3
 80003e2:	4610      	movne	r0, r2
 80003e4:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 80003e8:	bf1c      	itt	ne
 80003ea:	460b      	movne	r3, r1
 80003ec:	4602      	movne	r2, r0
 80003ee:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 80003f2:	bf06      	itte	eq
 80003f4:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 80003f8:	ea91 0f03 	teqeq	r1, r3
 80003fc:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
 8000400:	bd30      	pop	{r4, r5, pc}
 8000402:	bf00      	nop

08000404 <__aeabi_ui2d>:
 8000404:	f090 0f00 	teq	r0, #0
 8000408:	bf04      	itt	eq
 800040a:	2100      	moveq	r1, #0
 800040c:	4770      	bxeq	lr
 800040e:	b530      	push	{r4, r5, lr}
 8000410:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000414:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000418:	f04f 0500 	mov.w	r5, #0
 800041c:	f04f 0100 	mov.w	r1, #0
 8000420:	e750      	b.n	80002c4 <__adddf3+0x138>
 8000422:	bf00      	nop

08000424 <__aeabi_i2d>:
 8000424:	f090 0f00 	teq	r0, #0
 8000428:	bf04      	itt	eq
 800042a:	2100      	moveq	r1, #0
 800042c:	4770      	bxeq	lr
 800042e:	b530      	push	{r4, r5, lr}
 8000430:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000434:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000438:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
 800043c:	bf48      	it	mi
 800043e:	4240      	negmi	r0, r0
 8000440:	f04f 0100 	mov.w	r1, #0
 8000444:	e73e      	b.n	80002c4 <__adddf3+0x138>
 8000446:	bf00      	nop

08000448 <__aeabi_f2d>:
 8000448:	0042      	lsls	r2, r0, #1
 800044a:	ea4f 01e2 	mov.w	r1, r2, asr #3
 800044e:	ea4f 0131 	mov.w	r1, r1, rrx
 8000452:	ea4f 7002 	mov.w	r0, r2, lsl #28
 8000456:	bf1f      	itttt	ne
 8000458:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
 800045c:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
 8000460:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
 8000464:	4770      	bxne	lr
 8000466:	f032 427f 	bics.w	r2, r2, #4278190080	; 0xff000000
 800046a:	bf08      	it	eq
 800046c:	4770      	bxeq	lr
 800046e:	f093 4f7f 	teq	r3, #4278190080	; 0xff000000
 8000472:	bf04      	itt	eq
 8000474:	f441 2100 	orreq.w	r1, r1, #524288	; 0x80000
 8000478:	4770      	bxeq	lr
 800047a:	b530      	push	{r4, r5, lr}
 800047c:	f44f 7460 	mov.w	r4, #896	; 0x380
 8000480:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8000484:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 8000488:	e71c      	b.n	80002c4 <__adddf3+0x138>
 800048a:	bf00      	nop

0800048c <__aeabi_ul2d>:
 800048c:	ea50 0201 	orrs.w	r2, r0, r1
 8000490:	bf08      	it	eq
 8000492:	4770      	bxeq	lr
 8000494:	b530      	push	{r4, r5, lr}
 8000496:	f04f 0500 	mov.w	r5, #0
 800049a:	e00a      	b.n	80004b2 <__aeabi_l2d+0x16>

0800049c <__aeabi_l2d>:
 800049c:	ea50 0201 	orrs.w	r2, r0, r1
 80004a0:	bf08      	it	eq
 80004a2:	4770      	bxeq	lr
 80004a4:	b530      	push	{r4, r5, lr}
 80004a6:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
 80004aa:	d502      	bpl.n	80004b2 <__aeabi_l2d+0x16>
 80004ac:	4240      	negs	r0, r0
 80004ae:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80004b2:	f44f 6480 	mov.w	r4, #1024	; 0x400
 80004b6:	f104 0432 	add.w	r4, r4, #50	; 0x32
 80004ba:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 80004be:	f43f aed8 	beq.w	8000272 <__adddf3+0xe6>
 80004c2:	f04f 0203 	mov.w	r2, #3
 80004c6:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80004ca:	bf18      	it	ne
 80004cc:	3203      	addne	r2, #3
 80004ce:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80004d2:	bf18      	it	ne
 80004d4:	3203      	addne	r2, #3
 80004d6:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 80004da:	f1c2 0320 	rsb	r3, r2, #32
 80004de:	fa00 fc03 	lsl.w	ip, r0, r3
 80004e2:	fa20 f002 	lsr.w	r0, r0, r2
 80004e6:	fa01 fe03 	lsl.w	lr, r1, r3
 80004ea:	ea40 000e 	orr.w	r0, r0, lr
 80004ee:	fa21 f102 	lsr.w	r1, r1, r2
 80004f2:	4414      	add	r4, r2
 80004f4:	e6bd      	b.n	8000272 <__adddf3+0xe6>
 80004f6:	bf00      	nop

080004f8 <__aeabi_dmul>:
 80004f8:	b570      	push	{r4, r5, r6, lr}
 80004fa:	f04f 0cff 	mov.w	ip, #255	; 0xff
 80004fe:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 8000502:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 8000506:	bf1d      	ittte	ne
 8000508:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 800050c:	ea94 0f0c 	teqne	r4, ip
 8000510:	ea95 0f0c 	teqne	r5, ip
 8000514:	f000 f8de 	bleq	80006d4 <__aeabi_dmul+0x1dc>
 8000518:	442c      	add	r4, r5
 800051a:	ea81 0603 	eor.w	r6, r1, r3
 800051e:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 8000522:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 8000526:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 800052a:	bf18      	it	ne
 800052c:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 8000530:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000534:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8000538:	d038      	beq.n	80005ac <__aeabi_dmul+0xb4>
 800053a:	fba0 ce02 	umull	ip, lr, r0, r2
 800053e:	f04f 0500 	mov.w	r5, #0
 8000542:	fbe1 e502 	umlal	lr, r5, r1, r2
 8000546:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
 800054a:	fbe0 e503 	umlal	lr, r5, r0, r3
 800054e:	f04f 0600 	mov.w	r6, #0
 8000552:	fbe1 5603 	umlal	r5, r6, r1, r3
 8000556:	f09c 0f00 	teq	ip, #0
 800055a:	bf18      	it	ne
 800055c:	f04e 0e01 	orrne.w	lr, lr, #1
 8000560:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
 8000564:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
 8000568:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
 800056c:	d204      	bcs.n	8000578 <__aeabi_dmul+0x80>
 800056e:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 8000572:	416d      	adcs	r5, r5
 8000574:	eb46 0606 	adc.w	r6, r6, r6
 8000578:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 800057c:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 8000580:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 8000584:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 8000588:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 800058c:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 8000590:	bf88      	it	hi
 8000592:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 8000596:	d81e      	bhi.n	80005d6 <__aeabi_dmul+0xde>
 8000598:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
 800059c:	bf08      	it	eq
 800059e:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 80005a2:	f150 0000 	adcs.w	r0, r0, #0
 80005a6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80005aa:	bd70      	pop	{r4, r5, r6, pc}
 80005ac:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
 80005b0:	ea46 0101 	orr.w	r1, r6, r1
 80005b4:	ea40 0002 	orr.w	r0, r0, r2
 80005b8:	ea81 0103 	eor.w	r1, r1, r3
 80005bc:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 80005c0:	bfc2      	ittt	gt
 80005c2:	ebd4 050c 	rsbsgt	r5, r4, ip
 80005c6:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80005ca:	bd70      	popgt	{r4, r5, r6, pc}
 80005cc:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 80005d0:	f04f 0e00 	mov.w	lr, #0
 80005d4:	3c01      	subs	r4, #1
 80005d6:	f300 80ab 	bgt.w	8000730 <__aeabi_dmul+0x238>
 80005da:	f114 0f36 	cmn.w	r4, #54	; 0x36
 80005de:	bfde      	ittt	le
 80005e0:	2000      	movle	r0, #0
 80005e2:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
 80005e6:	bd70      	pople	{r4, r5, r6, pc}
 80005e8:	f1c4 0400 	rsb	r4, r4, #0
 80005ec:	3c20      	subs	r4, #32
 80005ee:	da35      	bge.n	800065c <__aeabi_dmul+0x164>
 80005f0:	340c      	adds	r4, #12
 80005f2:	dc1b      	bgt.n	800062c <__aeabi_dmul+0x134>
 80005f4:	f104 0414 	add.w	r4, r4, #20
 80005f8:	f1c4 0520 	rsb	r5, r4, #32
 80005fc:	fa00 f305 	lsl.w	r3, r0, r5
 8000600:	fa20 f004 	lsr.w	r0, r0, r4
 8000604:	fa01 f205 	lsl.w	r2, r1, r5
 8000608:	ea40 0002 	orr.w	r0, r0, r2
 800060c:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
 8000610:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 8000614:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 8000618:	fa21 f604 	lsr.w	r6, r1, r4
 800061c:	eb42 0106 	adc.w	r1, r2, r6
 8000620:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000624:	bf08      	it	eq
 8000626:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800062a:	bd70      	pop	{r4, r5, r6, pc}
 800062c:	f1c4 040c 	rsb	r4, r4, #12
 8000630:	f1c4 0520 	rsb	r5, r4, #32
 8000634:	fa00 f304 	lsl.w	r3, r0, r4
 8000638:	fa20 f005 	lsr.w	r0, r0, r5
 800063c:	fa01 f204 	lsl.w	r2, r1, r4
 8000640:	ea40 0002 	orr.w	r0, r0, r2
 8000644:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000648:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 800064c:	f141 0100 	adc.w	r1, r1, #0
 8000650:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000654:	bf08      	it	eq
 8000656:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800065a:	bd70      	pop	{r4, r5, r6, pc}
 800065c:	f1c4 0520 	rsb	r5, r4, #32
 8000660:	fa00 f205 	lsl.w	r2, r0, r5
 8000664:	ea4e 0e02 	orr.w	lr, lr, r2
 8000668:	fa20 f304 	lsr.w	r3, r0, r4
 800066c:	fa01 f205 	lsl.w	r2, r1, r5
 8000670:	ea43 0302 	orr.w	r3, r3, r2
 8000674:	fa21 f004 	lsr.w	r0, r1, r4
 8000678:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 800067c:	fa21 f204 	lsr.w	r2, r1, r4
 8000680:	ea20 0002 	bic.w	r0, r0, r2
 8000684:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 8000688:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 800068c:	bf08      	it	eq
 800068e:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 8000692:	bd70      	pop	{r4, r5, r6, pc}
 8000694:	f094 0f00 	teq	r4, #0
 8000698:	d10f      	bne.n	80006ba <__aeabi_dmul+0x1c2>
 800069a:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
 800069e:	0040      	lsls	r0, r0, #1
 80006a0:	eb41 0101 	adc.w	r1, r1, r1
 80006a4:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 80006a8:	bf08      	it	eq
 80006aa:	3c01      	subeq	r4, #1
 80006ac:	d0f7      	beq.n	800069e <__aeabi_dmul+0x1a6>
 80006ae:	ea41 0106 	orr.w	r1, r1, r6
 80006b2:	f095 0f00 	teq	r5, #0
 80006b6:	bf18      	it	ne
 80006b8:	4770      	bxne	lr
 80006ba:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
 80006be:	0052      	lsls	r2, r2, #1
 80006c0:	eb43 0303 	adc.w	r3, r3, r3
 80006c4:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
 80006c8:	bf08      	it	eq
 80006ca:	3d01      	subeq	r5, #1
 80006cc:	d0f7      	beq.n	80006be <__aeabi_dmul+0x1c6>
 80006ce:	ea43 0306 	orr.w	r3, r3, r6
 80006d2:	4770      	bx	lr
 80006d4:	ea94 0f0c 	teq	r4, ip
 80006d8:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80006dc:	bf18      	it	ne
 80006de:	ea95 0f0c 	teqne	r5, ip
 80006e2:	d00c      	beq.n	80006fe <__aeabi_dmul+0x206>
 80006e4:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 80006e8:	bf18      	it	ne
 80006ea:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 80006ee:	d1d1      	bne.n	8000694 <__aeabi_dmul+0x19c>
 80006f0:	ea81 0103 	eor.w	r1, r1, r3
 80006f4:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 80006f8:	f04f 0000 	mov.w	r0, #0
 80006fc:	bd70      	pop	{r4, r5, r6, pc}
 80006fe:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000702:	bf06      	itte	eq
 8000704:	4610      	moveq	r0, r2
 8000706:	4619      	moveq	r1, r3
 8000708:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 800070c:	d019      	beq.n	8000742 <__aeabi_dmul+0x24a>
 800070e:	ea94 0f0c 	teq	r4, ip
 8000712:	d102      	bne.n	800071a <__aeabi_dmul+0x222>
 8000714:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 8000718:	d113      	bne.n	8000742 <__aeabi_dmul+0x24a>
 800071a:	ea95 0f0c 	teq	r5, ip
 800071e:	d105      	bne.n	800072c <__aeabi_dmul+0x234>
 8000720:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 8000724:	bf1c      	itt	ne
 8000726:	4610      	movne	r0, r2
 8000728:	4619      	movne	r1, r3
 800072a:	d10a      	bne.n	8000742 <__aeabi_dmul+0x24a>
 800072c:	ea81 0103 	eor.w	r1, r1, r3
 8000730:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000734:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8000738:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 800073c:	f04f 0000 	mov.w	r0, #0
 8000740:	bd70      	pop	{r4, r5, r6, pc}
 8000742:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8000746:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
 800074a:	bd70      	pop	{r4, r5, r6, pc}

0800074c <__aeabi_ddiv>:
 800074c:	b570      	push	{r4, r5, r6, lr}
 800074e:	f04f 0cff 	mov.w	ip, #255	; 0xff
 8000752:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 8000756:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 800075a:	bf1d      	ittte	ne
 800075c:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 8000760:	ea94 0f0c 	teqne	r4, ip
 8000764:	ea95 0f0c 	teqne	r5, ip
 8000768:	f000 f8a7 	bleq	80008ba <__aeabi_ddiv+0x16e>
 800076c:	eba4 0405 	sub.w	r4, r4, r5
 8000770:	ea81 0e03 	eor.w	lr, r1, r3
 8000774:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000778:	ea4f 3101 	mov.w	r1, r1, lsl #12
 800077c:	f000 8088 	beq.w	8000890 <__aeabi_ddiv+0x144>
 8000780:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000784:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
 8000788:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
 800078c:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
 8000790:	ea4f 2202 	mov.w	r2, r2, lsl #8
 8000794:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
 8000798:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
 800079c:	ea4f 2600 	mov.w	r6, r0, lsl #8
 80007a0:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
 80007a4:	429d      	cmp	r5, r3
 80007a6:	bf08      	it	eq
 80007a8:	4296      	cmpeq	r6, r2
 80007aa:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
 80007ae:	f504 7440 	add.w	r4, r4, #768	; 0x300
 80007b2:	d202      	bcs.n	80007ba <__aeabi_ddiv+0x6e>
 80007b4:	085b      	lsrs	r3, r3, #1
 80007b6:	ea4f 0232 	mov.w	r2, r2, rrx
 80007ba:	1ab6      	subs	r6, r6, r2
 80007bc:	eb65 0503 	sbc.w	r5, r5, r3
 80007c0:	085b      	lsrs	r3, r3, #1
 80007c2:	ea4f 0232 	mov.w	r2, r2, rrx
 80007c6:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
 80007ca:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
 80007ce:	ebb6 0e02 	subs.w	lr, r6, r2
 80007d2:	eb75 0e03 	sbcs.w	lr, r5, r3
 80007d6:	bf22      	ittt	cs
 80007d8:	1ab6      	subcs	r6, r6, r2
 80007da:	4675      	movcs	r5, lr
 80007dc:	ea40 000c 	orrcs.w	r0, r0, ip
 80007e0:	085b      	lsrs	r3, r3, #1
 80007e2:	ea4f 0232 	mov.w	r2, r2, rrx
 80007e6:	ebb6 0e02 	subs.w	lr, r6, r2
 80007ea:	eb75 0e03 	sbcs.w	lr, r5, r3
 80007ee:	bf22      	ittt	cs
 80007f0:	1ab6      	subcs	r6, r6, r2
 80007f2:	4675      	movcs	r5, lr
 80007f4:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 80007f8:	085b      	lsrs	r3, r3, #1
 80007fa:	ea4f 0232 	mov.w	r2, r2, rrx
 80007fe:	ebb6 0e02 	subs.w	lr, r6, r2
 8000802:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000806:	bf22      	ittt	cs
 8000808:	1ab6      	subcs	r6, r6, r2
 800080a:	4675      	movcs	r5, lr
 800080c:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 8000810:	085b      	lsrs	r3, r3, #1
 8000812:	ea4f 0232 	mov.w	r2, r2, rrx
 8000816:	ebb6 0e02 	subs.w	lr, r6, r2
 800081a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800081e:	bf22      	ittt	cs
 8000820:	1ab6      	subcs	r6, r6, r2
 8000822:	4675      	movcs	r5, lr
 8000824:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 8000828:	ea55 0e06 	orrs.w	lr, r5, r6
 800082c:	d018      	beq.n	8000860 <__aeabi_ddiv+0x114>
 800082e:	ea4f 1505 	mov.w	r5, r5, lsl #4
 8000832:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
 8000836:	ea4f 1606 	mov.w	r6, r6, lsl #4
 800083a:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 800083e:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
 8000842:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8000846:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
 800084a:	d1c0      	bne.n	80007ce <__aeabi_ddiv+0x82>
 800084c:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000850:	d10b      	bne.n	800086a <__aeabi_ddiv+0x11e>
 8000852:	ea41 0100 	orr.w	r1, r1, r0
 8000856:	f04f 0000 	mov.w	r0, #0
 800085a:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
 800085e:	e7b6      	b.n	80007ce <__aeabi_ddiv+0x82>
 8000860:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000864:	bf04      	itt	eq
 8000866:	4301      	orreq	r1, r0
 8000868:	2000      	moveq	r0, #0
 800086a:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 800086e:	bf88      	it	hi
 8000870:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 8000874:	f63f aeaf 	bhi.w	80005d6 <__aeabi_dmul+0xde>
 8000878:	ebb5 0c03 	subs.w	ip, r5, r3
 800087c:	bf04      	itt	eq
 800087e:	ebb6 0c02 	subseq.w	ip, r6, r2
 8000882:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 8000886:	f150 0000 	adcs.w	r0, r0, #0
 800088a:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 800088e:	bd70      	pop	{r4, r5, r6, pc}
 8000890:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
 8000894:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
 8000898:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
 800089c:	bfc2      	ittt	gt
 800089e:	ebd4 050c 	rsbsgt	r5, r4, ip
 80008a2:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80008a6:	bd70      	popgt	{r4, r5, r6, pc}
 80008a8:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 80008ac:	f04f 0e00 	mov.w	lr, #0
 80008b0:	3c01      	subs	r4, #1
 80008b2:	e690      	b.n	80005d6 <__aeabi_dmul+0xde>
 80008b4:	ea45 0e06 	orr.w	lr, r5, r6
 80008b8:	e68d      	b.n	80005d6 <__aeabi_dmul+0xde>
 80008ba:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80008be:	ea94 0f0c 	teq	r4, ip
 80008c2:	bf08      	it	eq
 80008c4:	ea95 0f0c 	teqeq	r5, ip
 80008c8:	f43f af3b 	beq.w	8000742 <__aeabi_dmul+0x24a>
 80008cc:	ea94 0f0c 	teq	r4, ip
 80008d0:	d10a      	bne.n	80008e8 <__aeabi_ddiv+0x19c>
 80008d2:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 80008d6:	f47f af34 	bne.w	8000742 <__aeabi_dmul+0x24a>
 80008da:	ea95 0f0c 	teq	r5, ip
 80008de:	f47f af25 	bne.w	800072c <__aeabi_dmul+0x234>
 80008e2:	4610      	mov	r0, r2
 80008e4:	4619      	mov	r1, r3
 80008e6:	e72c      	b.n	8000742 <__aeabi_dmul+0x24a>
 80008e8:	ea95 0f0c 	teq	r5, ip
 80008ec:	d106      	bne.n	80008fc <__aeabi_ddiv+0x1b0>
 80008ee:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 80008f2:	f43f aefd 	beq.w	80006f0 <__aeabi_dmul+0x1f8>
 80008f6:	4610      	mov	r0, r2
 80008f8:	4619      	mov	r1, r3
 80008fa:	e722      	b.n	8000742 <__aeabi_dmul+0x24a>
 80008fc:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000900:	bf18      	it	ne
 8000902:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000906:	f47f aec5 	bne.w	8000694 <__aeabi_dmul+0x19c>
 800090a:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
 800090e:	f47f af0d 	bne.w	800072c <__aeabi_dmul+0x234>
 8000912:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
 8000916:	f47f aeeb 	bne.w	80006f0 <__aeabi_dmul+0x1f8>
 800091a:	e712      	b.n	8000742 <__aeabi_dmul+0x24a>

0800091c <__gedf2>:
 800091c:	f04f 3cff 	mov.w	ip, #4294967295
 8000920:	e006      	b.n	8000930 <__cmpdf2+0x4>
 8000922:	bf00      	nop

08000924 <__ledf2>:
 8000924:	f04f 0c01 	mov.w	ip, #1
 8000928:	e002      	b.n	8000930 <__cmpdf2+0x4>
 800092a:	bf00      	nop

0800092c <__cmpdf2>:
 800092c:	f04f 0c01 	mov.w	ip, #1
 8000930:	f84d cd04 	str.w	ip, [sp, #-4]!
 8000934:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000938:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 800093c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000940:	bf18      	it	ne
 8000942:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
 8000946:	d01b      	beq.n	8000980 <__cmpdf2+0x54>
 8000948:	b001      	add	sp, #4
 800094a:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
 800094e:	bf0c      	ite	eq
 8000950:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
 8000954:	ea91 0f03 	teqne	r1, r3
 8000958:	bf02      	ittt	eq
 800095a:	ea90 0f02 	teqeq	r0, r2
 800095e:	2000      	moveq	r0, #0
 8000960:	4770      	bxeq	lr
 8000962:	f110 0f00 	cmn.w	r0, #0
 8000966:	ea91 0f03 	teq	r1, r3
 800096a:	bf58      	it	pl
 800096c:	4299      	cmppl	r1, r3
 800096e:	bf08      	it	eq
 8000970:	4290      	cmpeq	r0, r2
 8000972:	bf2c      	ite	cs
 8000974:	17d8      	asrcs	r0, r3, #31
 8000976:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
 800097a:	f040 0001 	orr.w	r0, r0, #1
 800097e:	4770      	bx	lr
 8000980:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000984:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000988:	d102      	bne.n	8000990 <__cmpdf2+0x64>
 800098a:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 800098e:	d107      	bne.n	80009a0 <__cmpdf2+0x74>
 8000990:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000994:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000998:	d1d6      	bne.n	8000948 <__cmpdf2+0x1c>
 800099a:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 800099e:	d0d3      	beq.n	8000948 <__cmpdf2+0x1c>
 80009a0:	f85d 0b04 	ldr.w	r0, [sp], #4
 80009a4:	4770      	bx	lr
 80009a6:	bf00      	nop

080009a8 <__aeabi_cdrcmple>:
 80009a8:	4684      	mov	ip, r0
 80009aa:	4610      	mov	r0, r2
 80009ac:	4662      	mov	r2, ip
 80009ae:	468c      	mov	ip, r1
 80009b0:	4619      	mov	r1, r3
 80009b2:	4663      	mov	r3, ip
 80009b4:	e000      	b.n	80009b8 <__aeabi_cdcmpeq>
 80009b6:	bf00      	nop

080009b8 <__aeabi_cdcmpeq>:
 80009b8:	b501      	push	{r0, lr}
 80009ba:	f7ff ffb7 	bl	800092c <__cmpdf2>
 80009be:	2800      	cmp	r0, #0
 80009c0:	bf48      	it	mi
 80009c2:	f110 0f00 	cmnmi.w	r0, #0
 80009c6:	bd01      	pop	{r0, pc}

080009c8 <__aeabi_dcmpeq>:
 80009c8:	f84d ed08 	str.w	lr, [sp, #-8]!
 80009cc:	f7ff fff4 	bl	80009b8 <__aeabi_cdcmpeq>
 80009d0:	bf0c      	ite	eq
 80009d2:	2001      	moveq	r0, #1
 80009d4:	2000      	movne	r0, #0
 80009d6:	f85d fb08 	ldr.w	pc, [sp], #8
 80009da:	bf00      	nop

080009dc <__aeabi_dcmplt>:
 80009dc:	f84d ed08 	str.w	lr, [sp, #-8]!
 80009e0:	f7ff ffea 	bl	80009b8 <__aeabi_cdcmpeq>
 80009e4:	bf34      	ite	cc
 80009e6:	2001      	movcc	r0, #1
 80009e8:	2000      	movcs	r0, #0
 80009ea:	f85d fb08 	ldr.w	pc, [sp], #8
 80009ee:	bf00      	nop

080009f0 <__aeabi_dcmple>:
 80009f0:	f84d ed08 	str.w	lr, [sp, #-8]!
 80009f4:	f7ff ffe0 	bl	80009b8 <__aeabi_cdcmpeq>
 80009f8:	bf94      	ite	ls
 80009fa:	2001      	movls	r0, #1
 80009fc:	2000      	movhi	r0, #0
 80009fe:	f85d fb08 	ldr.w	pc, [sp], #8
 8000a02:	bf00      	nop

08000a04 <__aeabi_dcmpge>:
 8000a04:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000a08:	f7ff ffce 	bl	80009a8 <__aeabi_cdrcmple>
 8000a0c:	bf94      	ite	ls
 8000a0e:	2001      	movls	r0, #1
 8000a10:	2000      	movhi	r0, #0
 8000a12:	f85d fb08 	ldr.w	pc, [sp], #8
 8000a16:	bf00      	nop

08000a18 <__aeabi_dcmpgt>:
 8000a18:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000a1c:	f7ff ffc4 	bl	80009a8 <__aeabi_cdrcmple>
 8000a20:	bf34      	ite	cc
 8000a22:	2001      	movcc	r0, #1
 8000a24:	2000      	movcs	r0, #0
 8000a26:	f85d fb08 	ldr.w	pc, [sp], #8
 8000a2a:	bf00      	nop

08000a2c <__aeabi_dcmpun>:
 8000a2c:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a30:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a34:	d102      	bne.n	8000a3c <__aeabi_dcmpun+0x10>
 8000a36:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000a3a:	d10a      	bne.n	8000a52 <__aeabi_dcmpun+0x26>
 8000a3c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000a40:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a44:	d102      	bne.n	8000a4c <__aeabi_dcmpun+0x20>
 8000a46:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000a4a:	d102      	bne.n	8000a52 <__aeabi_dcmpun+0x26>
 8000a4c:	f04f 0000 	mov.w	r0, #0
 8000a50:	4770      	bx	lr
 8000a52:	f04f 0001 	mov.w	r0, #1
 8000a56:	4770      	bx	lr

08000a58 <__aeabi_d2iz>:
 8000a58:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000a5c:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
 8000a60:	d215      	bcs.n	8000a8e <__aeabi_d2iz+0x36>
 8000a62:	d511      	bpl.n	8000a88 <__aeabi_d2iz+0x30>
 8000a64:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
 8000a68:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000a6c:	d912      	bls.n	8000a94 <__aeabi_d2iz+0x3c>
 8000a6e:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000a72:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8000a76:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000a7a:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8000a7e:	fa23 f002 	lsr.w	r0, r3, r2
 8000a82:	bf18      	it	ne
 8000a84:	4240      	negne	r0, r0
 8000a86:	4770      	bx	lr
 8000a88:	f04f 0000 	mov.w	r0, #0
 8000a8c:	4770      	bx	lr
 8000a8e:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000a92:	d105      	bne.n	8000aa0 <__aeabi_d2iz+0x48>
 8000a94:	f011 4000 	ands.w	r0, r1, #2147483648	; 0x80000000
 8000a98:	bf08      	it	eq
 8000a9a:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
 8000a9e:	4770      	bx	lr
 8000aa0:	f04f 0000 	mov.w	r0, #0
 8000aa4:	4770      	bx	lr
 8000aa6:	bf00      	nop

08000aa8 <__aeabi_d2uiz>:
 8000aa8:	004a      	lsls	r2, r1, #1
 8000aaa:	d211      	bcs.n	8000ad0 <__aeabi_d2uiz+0x28>
 8000aac:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
 8000ab0:	d211      	bcs.n	8000ad6 <__aeabi_d2uiz+0x2e>
 8000ab2:	d50d      	bpl.n	8000ad0 <__aeabi_d2uiz+0x28>
 8000ab4:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
 8000ab8:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000abc:	d40e      	bmi.n	8000adc <__aeabi_d2uiz+0x34>
 8000abe:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000ac2:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8000ac6:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000aca:	fa23 f002 	lsr.w	r0, r3, r2
 8000ace:	4770      	bx	lr
 8000ad0:	f04f 0000 	mov.w	r0, #0
 8000ad4:	4770      	bx	lr
 8000ad6:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000ada:	d102      	bne.n	8000ae2 <__aeabi_d2uiz+0x3a>
 8000adc:	f04f 30ff 	mov.w	r0, #4294967295
 8000ae0:	4770      	bx	lr
 8000ae2:	f04f 0000 	mov.w	r0, #0
 8000ae6:	4770      	bx	lr

08000ae8 <__aeabi_d2f>:
 8000ae8:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000aec:	f1b2 43e0 	subs.w	r3, r2, #1879048192	; 0x70000000
 8000af0:	bf24      	itt	cs
 8000af2:	f5b3 1c00 	subscs.w	ip, r3, #2097152	; 0x200000
 8000af6:	f1dc 5cfe 	rsbscs	ip, ip, #532676608	; 0x1fc00000
 8000afa:	d90d      	bls.n	8000b18 <__aeabi_d2f+0x30>
 8000afc:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
 8000b00:	ea4f 02c0 	mov.w	r2, r0, lsl #3
 8000b04:	ea4c 7050 	orr.w	r0, ip, r0, lsr #29
 8000b08:	f1b2 4f00 	cmp.w	r2, #2147483648	; 0x80000000
 8000b0c:	eb40 0083 	adc.w	r0, r0, r3, lsl #2
 8000b10:	bf08      	it	eq
 8000b12:	f020 0001 	biceq.w	r0, r0, #1
 8000b16:	4770      	bx	lr
 8000b18:	f011 4f80 	tst.w	r1, #1073741824	; 0x40000000
 8000b1c:	d121      	bne.n	8000b62 <__aeabi_d2f+0x7a>
 8000b1e:	f113 7238 	adds.w	r2, r3, #48234496	; 0x2e00000
 8000b22:	bfbc      	itt	lt
 8000b24:	f001 4000 	andlt.w	r0, r1, #2147483648	; 0x80000000
 8000b28:	4770      	bxlt	lr
 8000b2a:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000b2e:	ea4f 5252 	mov.w	r2, r2, lsr #21
 8000b32:	f1c2 0218 	rsb	r2, r2, #24
 8000b36:	f1c2 0c20 	rsb	ip, r2, #32
 8000b3a:	fa10 f30c 	lsls.w	r3, r0, ip
 8000b3e:	fa20 f002 	lsr.w	r0, r0, r2
 8000b42:	bf18      	it	ne
 8000b44:	f040 0001 	orrne.w	r0, r0, #1
 8000b48:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000b4c:	ea4f 23d3 	mov.w	r3, r3, lsr #11
 8000b50:	fa03 fc0c 	lsl.w	ip, r3, ip
 8000b54:	ea40 000c 	orr.w	r0, r0, ip
 8000b58:	fa23 f302 	lsr.w	r3, r3, r2
 8000b5c:	ea4f 0343 	mov.w	r3, r3, lsl #1
 8000b60:	e7cc      	b.n	8000afc <__aeabi_d2f+0x14>
 8000b62:	ea7f 5362 	mvns.w	r3, r2, asr #21
 8000b66:	d107      	bne.n	8000b78 <__aeabi_d2f+0x90>
 8000b68:	ea50 3301 	orrs.w	r3, r0, r1, lsl #12
 8000b6c:	bf1e      	ittt	ne
 8000b6e:	f04f 40fe 	movne.w	r0, #2130706432	; 0x7f000000
 8000b72:	f440 0040 	orrne.w	r0, r0, #12582912	; 0xc00000
 8000b76:	4770      	bxne	lr
 8000b78:	f001 4000 	and.w	r0, r1, #2147483648	; 0x80000000
 8000b7c:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
 8000b80:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8000b84:	4770      	bx	lr
 8000b86:	bf00      	nop

08000b88 <__aeabi_frsub>:
 8000b88:	f080 4000 	eor.w	r0, r0, #2147483648	; 0x80000000
 8000b8c:	e002      	b.n	8000b94 <__addsf3>
 8000b8e:	bf00      	nop

08000b90 <__aeabi_fsub>:
 8000b90:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000

08000b94 <__addsf3>:
 8000b94:	0042      	lsls	r2, r0, #1
 8000b96:	bf1f      	itttt	ne
 8000b98:	ea5f 0341 	movsne.w	r3, r1, lsl #1
 8000b9c:	ea92 0f03 	teqne	r2, r3
 8000ba0:	ea7f 6c22 	mvnsne.w	ip, r2, asr #24
 8000ba4:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
 8000ba8:	d06a      	beq.n	8000c80 <__addsf3+0xec>
 8000baa:	ea4f 6212 	mov.w	r2, r2, lsr #24
 8000bae:	ebd2 6313 	rsbs	r3, r2, r3, lsr #24
 8000bb2:	bfc1      	itttt	gt
 8000bb4:	18d2      	addgt	r2, r2, r3
 8000bb6:	4041      	eorgt	r1, r0
 8000bb8:	4048      	eorgt	r0, r1
 8000bba:	4041      	eorgt	r1, r0
 8000bbc:	bfb8      	it	lt
 8000bbe:	425b      	neglt	r3, r3
 8000bc0:	2b19      	cmp	r3, #25
 8000bc2:	bf88      	it	hi
 8000bc4:	4770      	bxhi	lr
 8000bc6:	f010 4f00 	tst.w	r0, #2147483648	; 0x80000000
 8000bca:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8000bce:	f020 407f 	bic.w	r0, r0, #4278190080	; 0xff000000
 8000bd2:	bf18      	it	ne
 8000bd4:	4240      	negne	r0, r0
 8000bd6:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8000bda:	f441 0100 	orr.w	r1, r1, #8388608	; 0x800000
 8000bde:	f021 417f 	bic.w	r1, r1, #4278190080	; 0xff000000
 8000be2:	bf18      	it	ne
 8000be4:	4249      	negne	r1, r1
 8000be6:	ea92 0f03 	teq	r2, r3
 8000bea:	d03f      	beq.n	8000c6c <__addsf3+0xd8>
 8000bec:	f1a2 0201 	sub.w	r2, r2, #1
 8000bf0:	fa41 fc03 	asr.w	ip, r1, r3
 8000bf4:	eb10 000c 	adds.w	r0, r0, ip
 8000bf8:	f1c3 0320 	rsb	r3, r3, #32
 8000bfc:	fa01 f103 	lsl.w	r1, r1, r3
 8000c00:	f000 4300 	and.w	r3, r0, #2147483648	; 0x80000000
 8000c04:	d502      	bpl.n	8000c0c <__addsf3+0x78>
 8000c06:	4249      	negs	r1, r1
 8000c08:	eb60 0040 	sbc.w	r0, r0, r0, lsl #1
 8000c0c:	f5b0 0f00 	cmp.w	r0, #8388608	; 0x800000
 8000c10:	d313      	bcc.n	8000c3a <__addsf3+0xa6>
 8000c12:	f1b0 7f80 	cmp.w	r0, #16777216	; 0x1000000
 8000c16:	d306      	bcc.n	8000c26 <__addsf3+0x92>
 8000c18:	0840      	lsrs	r0, r0, #1
 8000c1a:	ea4f 0131 	mov.w	r1, r1, rrx
 8000c1e:	f102 0201 	add.w	r2, r2, #1
 8000c22:	2afe      	cmp	r2, #254	; 0xfe
 8000c24:	d251      	bcs.n	8000cca <__addsf3+0x136>
 8000c26:	f1b1 4f00 	cmp.w	r1, #2147483648	; 0x80000000
 8000c2a:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
 8000c2e:	bf08      	it	eq
 8000c30:	f020 0001 	biceq.w	r0, r0, #1
 8000c34:	ea40 0003 	orr.w	r0, r0, r3
 8000c38:	4770      	bx	lr
 8000c3a:	0049      	lsls	r1, r1, #1
 8000c3c:	eb40 0000 	adc.w	r0, r0, r0
 8000c40:	3a01      	subs	r2, #1
 8000c42:	bf28      	it	cs
 8000c44:	f5b0 0f00 	cmpcs.w	r0, #8388608	; 0x800000
 8000c48:	d2ed      	bcs.n	8000c26 <__addsf3+0x92>
 8000c4a:	fab0 fc80 	clz	ip, r0
 8000c4e:	f1ac 0c08 	sub.w	ip, ip, #8
 8000c52:	ebb2 020c 	subs.w	r2, r2, ip
 8000c56:	fa00 f00c 	lsl.w	r0, r0, ip
 8000c5a:	bfaa      	itet	ge
 8000c5c:	eb00 50c2 	addge.w	r0, r0, r2, lsl #23
 8000c60:	4252      	neglt	r2, r2
 8000c62:	4318      	orrge	r0, r3
 8000c64:	bfbc      	itt	lt
 8000c66:	40d0      	lsrlt	r0, r2
 8000c68:	4318      	orrlt	r0, r3
 8000c6a:	4770      	bx	lr
 8000c6c:	f092 0f00 	teq	r2, #0
 8000c70:	f481 0100 	eor.w	r1, r1, #8388608	; 0x800000
 8000c74:	bf06      	itte	eq
 8000c76:	f480 0000 	eoreq.w	r0, r0, #8388608	; 0x800000
 8000c7a:	3201      	addeq	r2, #1
 8000c7c:	3b01      	subne	r3, #1
 8000c7e:	e7b5      	b.n	8000bec <__addsf3+0x58>
 8000c80:	ea4f 0341 	mov.w	r3, r1, lsl #1
 8000c84:	ea7f 6c22 	mvns.w	ip, r2, asr #24
 8000c88:	bf18      	it	ne
 8000c8a:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
 8000c8e:	d021      	beq.n	8000cd4 <__addsf3+0x140>
 8000c90:	ea92 0f03 	teq	r2, r3
 8000c94:	d004      	beq.n	8000ca0 <__addsf3+0x10c>
 8000c96:	f092 0f00 	teq	r2, #0
 8000c9a:	bf08      	it	eq
 8000c9c:	4608      	moveq	r0, r1
 8000c9e:	4770      	bx	lr
 8000ca0:	ea90 0f01 	teq	r0, r1
 8000ca4:	bf1c      	itt	ne
 8000ca6:	2000      	movne	r0, #0
 8000ca8:	4770      	bxne	lr
 8000caa:	f012 4f7f 	tst.w	r2, #4278190080	; 0xff000000
 8000cae:	d104      	bne.n	8000cba <__addsf3+0x126>
 8000cb0:	0040      	lsls	r0, r0, #1
 8000cb2:	bf28      	it	cs
 8000cb4:	f040 4000 	orrcs.w	r0, r0, #2147483648	; 0x80000000
 8000cb8:	4770      	bx	lr
 8000cba:	f112 7200 	adds.w	r2, r2, #33554432	; 0x2000000
 8000cbe:	bf3c      	itt	cc
 8000cc0:	f500 0000 	addcc.w	r0, r0, #8388608	; 0x800000
 8000cc4:	4770      	bxcc	lr
 8000cc6:	f000 4300 	and.w	r3, r0, #2147483648	; 0x80000000
 8000cca:	f043 40fe 	orr.w	r0, r3, #2130706432	; 0x7f000000
 8000cce:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8000cd2:	4770      	bx	lr
 8000cd4:	ea7f 6222 	mvns.w	r2, r2, asr #24
 8000cd8:	bf16      	itet	ne
 8000cda:	4608      	movne	r0, r1
 8000cdc:	ea7f 6323 	mvnseq.w	r3, r3, asr #24
 8000ce0:	4601      	movne	r1, r0
 8000ce2:	0242      	lsls	r2, r0, #9
 8000ce4:	bf06      	itte	eq
 8000ce6:	ea5f 2341 	movseq.w	r3, r1, lsl #9
 8000cea:	ea90 0f01 	teqeq	r0, r1
 8000cee:	f440 0080 	orrne.w	r0, r0, #4194304	; 0x400000
 8000cf2:	4770      	bx	lr

08000cf4 <__aeabi_ui2f>:
 8000cf4:	f04f 0300 	mov.w	r3, #0
 8000cf8:	e004      	b.n	8000d04 <__aeabi_i2f+0x8>
 8000cfa:	bf00      	nop

08000cfc <__aeabi_i2f>:
 8000cfc:	f010 4300 	ands.w	r3, r0, #2147483648	; 0x80000000
 8000d00:	bf48      	it	mi
 8000d02:	4240      	negmi	r0, r0
 8000d04:	ea5f 0c00 	movs.w	ip, r0
 8000d08:	bf08      	it	eq
 8000d0a:	4770      	bxeq	lr
 8000d0c:	f043 4396 	orr.w	r3, r3, #1258291200	; 0x4b000000
 8000d10:	4601      	mov	r1, r0
 8000d12:	f04f 0000 	mov.w	r0, #0
 8000d16:	e01c      	b.n	8000d52 <__aeabi_l2f+0x2a>

08000d18 <__aeabi_ul2f>:
 8000d18:	ea50 0201 	orrs.w	r2, r0, r1
 8000d1c:	bf08      	it	eq
 8000d1e:	4770      	bxeq	lr
 8000d20:	f04f 0300 	mov.w	r3, #0
 8000d24:	e00a      	b.n	8000d3c <__aeabi_l2f+0x14>
 8000d26:	bf00      	nop

08000d28 <__aeabi_l2f>:
 8000d28:	ea50 0201 	orrs.w	r2, r0, r1
 8000d2c:	bf08      	it	eq
 8000d2e:	4770      	bxeq	lr
 8000d30:	f011 4300 	ands.w	r3, r1, #2147483648	; 0x80000000
 8000d34:	d502      	bpl.n	8000d3c <__aeabi_l2f+0x14>
 8000d36:	4240      	negs	r0, r0
 8000d38:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000d3c:	ea5f 0c01 	movs.w	ip, r1
 8000d40:	bf02      	ittt	eq
 8000d42:	4684      	moveq	ip, r0
 8000d44:	4601      	moveq	r1, r0
 8000d46:	2000      	moveq	r0, #0
 8000d48:	f043 43b6 	orr.w	r3, r3, #1526726656	; 0x5b000000
 8000d4c:	bf08      	it	eq
 8000d4e:	f1a3 5380 	subeq.w	r3, r3, #268435456	; 0x10000000
 8000d52:	f5a3 0300 	sub.w	r3, r3, #8388608	; 0x800000
 8000d56:	fabc f28c 	clz	r2, ip
 8000d5a:	3a08      	subs	r2, #8
 8000d5c:	eba3 53c2 	sub.w	r3, r3, r2, lsl #23
 8000d60:	db10      	blt.n	8000d84 <__aeabi_l2f+0x5c>
 8000d62:	fa01 fc02 	lsl.w	ip, r1, r2
 8000d66:	4463      	add	r3, ip
 8000d68:	fa00 fc02 	lsl.w	ip, r0, r2
 8000d6c:	f1c2 0220 	rsb	r2, r2, #32
 8000d70:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 8000d74:	fa20 f202 	lsr.w	r2, r0, r2
 8000d78:	eb43 0002 	adc.w	r0, r3, r2
 8000d7c:	bf08      	it	eq
 8000d7e:	f020 0001 	biceq.w	r0, r0, #1
 8000d82:	4770      	bx	lr
 8000d84:	f102 0220 	add.w	r2, r2, #32
 8000d88:	fa01 fc02 	lsl.w	ip, r1, r2
 8000d8c:	f1c2 0220 	rsb	r2, r2, #32
 8000d90:	ea50 004c 	orrs.w	r0, r0, ip, lsl #1
 8000d94:	fa21 f202 	lsr.w	r2, r1, r2
 8000d98:	eb43 0002 	adc.w	r0, r3, r2
 8000d9c:	bf08      	it	eq
 8000d9e:	ea20 70dc 	biceq.w	r0, r0, ip, lsr #31
 8000da2:	4770      	bx	lr

08000da4 <__aeabi_fmul>:
 8000da4:	f04f 0cff 	mov.w	ip, #255	; 0xff
 8000da8:	ea1c 52d0 	ands.w	r2, ip, r0, lsr #23
 8000dac:	bf1e      	ittt	ne
 8000dae:	ea1c 53d1 	andsne.w	r3, ip, r1, lsr #23
 8000db2:	ea92 0f0c 	teqne	r2, ip
 8000db6:	ea93 0f0c 	teqne	r3, ip
 8000dba:	d06f      	beq.n	8000e9c <__aeabi_fmul+0xf8>
 8000dbc:	441a      	add	r2, r3
 8000dbe:	ea80 0c01 	eor.w	ip, r0, r1
 8000dc2:	0240      	lsls	r0, r0, #9
 8000dc4:	bf18      	it	ne
 8000dc6:	ea5f 2141 	movsne.w	r1, r1, lsl #9
 8000dca:	d01e      	beq.n	8000e0a <__aeabi_fmul+0x66>
 8000dcc:	f04f 6300 	mov.w	r3, #134217728	; 0x8000000
 8000dd0:	ea43 1050 	orr.w	r0, r3, r0, lsr #5
 8000dd4:	ea43 1151 	orr.w	r1, r3, r1, lsr #5
 8000dd8:	fba0 3101 	umull	r3, r1, r0, r1
 8000ddc:	f00c 4000 	and.w	r0, ip, #2147483648	; 0x80000000
 8000de0:	f5b1 0f00 	cmp.w	r1, #8388608	; 0x800000
 8000de4:	bf3e      	ittt	cc
 8000de6:	0049      	lslcc	r1, r1, #1
 8000de8:	ea41 71d3 	orrcc.w	r1, r1, r3, lsr #31
 8000dec:	005b      	lslcc	r3, r3, #1
 8000dee:	ea40 0001 	orr.w	r0, r0, r1
 8000df2:	f162 027f 	sbc.w	r2, r2, #127	; 0x7f
 8000df6:	2afd      	cmp	r2, #253	; 0xfd
 8000df8:	d81d      	bhi.n	8000e36 <__aeabi_fmul+0x92>
 8000dfa:	f1b3 4f00 	cmp.w	r3, #2147483648	; 0x80000000
 8000dfe:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
 8000e02:	bf08      	it	eq
 8000e04:	f020 0001 	biceq.w	r0, r0, #1
 8000e08:	4770      	bx	lr
 8000e0a:	f090 0f00 	teq	r0, #0
 8000e0e:	f00c 4c00 	and.w	ip, ip, #2147483648	; 0x80000000
 8000e12:	bf08      	it	eq
 8000e14:	0249      	lsleq	r1, r1, #9
 8000e16:	ea4c 2050 	orr.w	r0, ip, r0, lsr #9
 8000e1a:	ea40 2051 	orr.w	r0, r0, r1, lsr #9
 8000e1e:	3a7f      	subs	r2, #127	; 0x7f
 8000e20:	bfc2      	ittt	gt
 8000e22:	f1d2 03ff 	rsbsgt	r3, r2, #255	; 0xff
 8000e26:	ea40 50c2 	orrgt.w	r0, r0, r2, lsl #23
 8000e2a:	4770      	bxgt	lr
 8000e2c:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8000e30:	f04f 0300 	mov.w	r3, #0
 8000e34:	3a01      	subs	r2, #1
 8000e36:	dc5d      	bgt.n	8000ef4 <__aeabi_fmul+0x150>
 8000e38:	f112 0f19 	cmn.w	r2, #25
 8000e3c:	bfdc      	itt	le
 8000e3e:	f000 4000 	andle.w	r0, r0, #2147483648	; 0x80000000
 8000e42:	4770      	bxle	lr
 8000e44:	f1c2 0200 	rsb	r2, r2, #0
 8000e48:	0041      	lsls	r1, r0, #1
 8000e4a:	fa21 f102 	lsr.w	r1, r1, r2
 8000e4e:	f1c2 0220 	rsb	r2, r2, #32
 8000e52:	fa00 fc02 	lsl.w	ip, r0, r2
 8000e56:	ea5f 0031 	movs.w	r0, r1, rrx
 8000e5a:	f140 0000 	adc.w	r0, r0, #0
 8000e5e:	ea53 034c 	orrs.w	r3, r3, ip, lsl #1
 8000e62:	bf08      	it	eq
 8000e64:	ea20 70dc 	biceq.w	r0, r0, ip, lsr #31
 8000e68:	4770      	bx	lr
 8000e6a:	f092 0f00 	teq	r2, #0
 8000e6e:	f000 4c00 	and.w	ip, r0, #2147483648	; 0x80000000
 8000e72:	bf02      	ittt	eq
 8000e74:	0040      	lsleq	r0, r0, #1
 8000e76:	f410 0f00 	tsteq.w	r0, #8388608	; 0x800000
 8000e7a:	3a01      	subeq	r2, #1
 8000e7c:	d0f9      	beq.n	8000e72 <__aeabi_fmul+0xce>
 8000e7e:	ea40 000c 	orr.w	r0, r0, ip
 8000e82:	f093 0f00 	teq	r3, #0
 8000e86:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
 8000e8a:	bf02      	ittt	eq
 8000e8c:	0049      	lsleq	r1, r1, #1
 8000e8e:	f411 0f00 	tsteq.w	r1, #8388608	; 0x800000
 8000e92:	3b01      	subeq	r3, #1
 8000e94:	d0f9      	beq.n	8000e8a <__aeabi_fmul+0xe6>
 8000e96:	ea41 010c 	orr.w	r1, r1, ip
 8000e9a:	e78f      	b.n	8000dbc <__aeabi_fmul+0x18>
 8000e9c:	ea0c 53d1 	and.w	r3, ip, r1, lsr #23
 8000ea0:	ea92 0f0c 	teq	r2, ip
 8000ea4:	bf18      	it	ne
 8000ea6:	ea93 0f0c 	teqne	r3, ip
 8000eaa:	d00a      	beq.n	8000ec2 <__aeabi_fmul+0x11e>
 8000eac:	f030 4c00 	bics.w	ip, r0, #2147483648	; 0x80000000
 8000eb0:	bf18      	it	ne
 8000eb2:	f031 4c00 	bicsne.w	ip, r1, #2147483648	; 0x80000000
 8000eb6:	d1d8      	bne.n	8000e6a <__aeabi_fmul+0xc6>
 8000eb8:	ea80 0001 	eor.w	r0, r0, r1
 8000ebc:	f000 4000 	and.w	r0, r0, #2147483648	; 0x80000000
 8000ec0:	4770      	bx	lr
 8000ec2:	f090 0f00 	teq	r0, #0
 8000ec6:	bf17      	itett	ne
 8000ec8:	f090 4f00 	teqne	r0, #2147483648	; 0x80000000
 8000ecc:	4608      	moveq	r0, r1
 8000ece:	f091 0f00 	teqne	r1, #0
 8000ed2:	f091 4f00 	teqne	r1, #2147483648	; 0x80000000
 8000ed6:	d014      	beq.n	8000f02 <__aeabi_fmul+0x15e>
 8000ed8:	ea92 0f0c 	teq	r2, ip
 8000edc:	d101      	bne.n	8000ee2 <__aeabi_fmul+0x13e>
 8000ede:	0242      	lsls	r2, r0, #9
 8000ee0:	d10f      	bne.n	8000f02 <__aeabi_fmul+0x15e>
 8000ee2:	ea93 0f0c 	teq	r3, ip
 8000ee6:	d103      	bne.n	8000ef0 <__aeabi_fmul+0x14c>
 8000ee8:	024b      	lsls	r3, r1, #9
 8000eea:	bf18      	it	ne
 8000eec:	4608      	movne	r0, r1
 8000eee:	d108      	bne.n	8000f02 <__aeabi_fmul+0x15e>
 8000ef0:	ea80 0001 	eor.w	r0, r0, r1
 8000ef4:	f000 4000 	and.w	r0, r0, #2147483648	; 0x80000000
 8000ef8:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
 8000efc:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8000f00:	4770      	bx	lr
 8000f02:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
 8000f06:	f440 0040 	orr.w	r0, r0, #12582912	; 0xc00000
 8000f0a:	4770      	bx	lr

08000f0c <__aeabi_fdiv>:
 8000f0c:	f04f 0cff 	mov.w	ip, #255	; 0xff
 8000f10:	ea1c 52d0 	ands.w	r2, ip, r0, lsr #23
 8000f14:	bf1e      	ittt	ne
 8000f16:	ea1c 53d1 	andsne.w	r3, ip, r1, lsr #23
 8000f1a:	ea92 0f0c 	teqne	r2, ip
 8000f1e:	ea93 0f0c 	teqne	r3, ip
 8000f22:	d069      	beq.n	8000ff8 <__aeabi_fdiv+0xec>
 8000f24:	eba2 0203 	sub.w	r2, r2, r3
 8000f28:	ea80 0c01 	eor.w	ip, r0, r1
 8000f2c:	0249      	lsls	r1, r1, #9
 8000f2e:	ea4f 2040 	mov.w	r0, r0, lsl #9
 8000f32:	d037      	beq.n	8000fa4 <__aeabi_fdiv+0x98>
 8000f34:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
 8000f38:	ea43 1111 	orr.w	r1, r3, r1, lsr #4
 8000f3c:	ea43 1310 	orr.w	r3, r3, r0, lsr #4
 8000f40:	f00c 4000 	and.w	r0, ip, #2147483648	; 0x80000000
 8000f44:	428b      	cmp	r3, r1
 8000f46:	bf38      	it	cc
 8000f48:	005b      	lslcc	r3, r3, #1
 8000f4a:	f142 027d 	adc.w	r2, r2, #125	; 0x7d
 8000f4e:	f44f 0c00 	mov.w	ip, #8388608	; 0x800000
 8000f52:	428b      	cmp	r3, r1
 8000f54:	bf24      	itt	cs
 8000f56:	1a5b      	subcs	r3, r3, r1
 8000f58:	ea40 000c 	orrcs.w	r0, r0, ip
 8000f5c:	ebb3 0f51 	cmp.w	r3, r1, lsr #1
 8000f60:	bf24      	itt	cs
 8000f62:	eba3 0351 	subcs.w	r3, r3, r1, lsr #1
 8000f66:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 8000f6a:	ebb3 0f91 	cmp.w	r3, r1, lsr #2
 8000f6e:	bf24      	itt	cs
 8000f70:	eba3 0391 	subcs.w	r3, r3, r1, lsr #2
 8000f74:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 8000f78:	ebb3 0fd1 	cmp.w	r3, r1, lsr #3
 8000f7c:	bf24      	itt	cs
 8000f7e:	eba3 03d1 	subcs.w	r3, r3, r1, lsr #3
 8000f82:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 8000f86:	011b      	lsls	r3, r3, #4
 8000f88:	bf18      	it	ne
 8000f8a:	ea5f 1c1c 	movsne.w	ip, ip, lsr #4
 8000f8e:	d1e0      	bne.n	8000f52 <__aeabi_fdiv+0x46>
 8000f90:	2afd      	cmp	r2, #253	; 0xfd
 8000f92:	f63f af50 	bhi.w	8000e36 <__aeabi_fmul+0x92>
 8000f96:	428b      	cmp	r3, r1
 8000f98:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
 8000f9c:	bf08      	it	eq
 8000f9e:	f020 0001 	biceq.w	r0, r0, #1
 8000fa2:	4770      	bx	lr
 8000fa4:	f00c 4c00 	and.w	ip, ip, #2147483648	; 0x80000000
 8000fa8:	ea4c 2050 	orr.w	r0, ip, r0, lsr #9
 8000fac:	327f      	adds	r2, #127	; 0x7f
 8000fae:	bfc2      	ittt	gt
 8000fb0:	f1d2 03ff 	rsbsgt	r3, r2, #255	; 0xff
 8000fb4:	ea40 50c2 	orrgt.w	r0, r0, r2, lsl #23
 8000fb8:	4770      	bxgt	lr
 8000fba:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8000fbe:	f04f 0300 	mov.w	r3, #0
 8000fc2:	3a01      	subs	r2, #1
 8000fc4:	e737      	b.n	8000e36 <__aeabi_fmul+0x92>
 8000fc6:	f092 0f00 	teq	r2, #0
 8000fca:	f000 4c00 	and.w	ip, r0, #2147483648	; 0x80000000
 8000fce:	bf02      	ittt	eq
 8000fd0:	0040      	lsleq	r0, r0, #1
 8000fd2:	f410 0f00 	tsteq.w	r0, #8388608	; 0x800000
 8000fd6:	3a01      	subeq	r2, #1
 8000fd8:	d0f9      	beq.n	8000fce <__aeabi_fdiv+0xc2>
 8000fda:	ea40 000c 	orr.w	r0, r0, ip
 8000fde:	f093 0f00 	teq	r3, #0
 8000fe2:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
 8000fe6:	bf02      	ittt	eq
 8000fe8:	0049      	lsleq	r1, r1, #1
 8000fea:	f411 0f00 	tsteq.w	r1, #8388608	; 0x800000
 8000fee:	3b01      	subeq	r3, #1
 8000ff0:	d0f9      	beq.n	8000fe6 <__aeabi_fdiv+0xda>
 8000ff2:	ea41 010c 	orr.w	r1, r1, ip
 8000ff6:	e795      	b.n	8000f24 <__aeabi_fdiv+0x18>
 8000ff8:	ea0c 53d1 	and.w	r3, ip, r1, lsr #23
 8000ffc:	ea92 0f0c 	teq	r2, ip
 8001000:	d108      	bne.n	8001014 <__aeabi_fdiv+0x108>
 8001002:	0242      	lsls	r2, r0, #9
 8001004:	f47f af7d 	bne.w	8000f02 <__aeabi_fmul+0x15e>
 8001008:	ea93 0f0c 	teq	r3, ip
 800100c:	f47f af70 	bne.w	8000ef0 <__aeabi_fmul+0x14c>
 8001010:	4608      	mov	r0, r1
 8001012:	e776      	b.n	8000f02 <__aeabi_fmul+0x15e>
 8001014:	ea93 0f0c 	teq	r3, ip
 8001018:	d104      	bne.n	8001024 <__aeabi_fdiv+0x118>
 800101a:	024b      	lsls	r3, r1, #9
 800101c:	f43f af4c 	beq.w	8000eb8 <__aeabi_fmul+0x114>
 8001020:	4608      	mov	r0, r1
 8001022:	e76e      	b.n	8000f02 <__aeabi_fmul+0x15e>
 8001024:	f030 4c00 	bics.w	ip, r0, #2147483648	; 0x80000000
 8001028:	bf18      	it	ne
 800102a:	f031 4c00 	bicsne.w	ip, r1, #2147483648	; 0x80000000
 800102e:	d1ca      	bne.n	8000fc6 <__aeabi_fdiv+0xba>
 8001030:	f030 4200 	bics.w	r2, r0, #2147483648	; 0x80000000
 8001034:	f47f af5c 	bne.w	8000ef0 <__aeabi_fmul+0x14c>
 8001038:	f031 4300 	bics.w	r3, r1, #2147483648	; 0x80000000
 800103c:	f47f af3c 	bne.w	8000eb8 <__aeabi_fmul+0x114>
 8001040:	e75f      	b.n	8000f02 <__aeabi_fmul+0x15e>
 8001042:	bf00      	nop

08001044 <__aeabi_d2lz>:
 8001044:	b538      	push	{r3, r4, r5, lr}
 8001046:	4605      	mov	r5, r0
 8001048:	460c      	mov	r4, r1
 800104a:	2200      	movs	r2, #0
 800104c:	2300      	movs	r3, #0
 800104e:	4628      	mov	r0, r5
 8001050:	4621      	mov	r1, r4
 8001052:	f7ff fcc3 	bl	80009dc <__aeabi_dcmplt>
 8001056:	b928      	cbnz	r0, 8001064 <__aeabi_d2lz+0x20>
 8001058:	4628      	mov	r0, r5
 800105a:	4621      	mov	r1, r4
 800105c:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8001060:	f000 b80a 	b.w	8001078 <__aeabi_d2ulz>
 8001064:	4628      	mov	r0, r5
 8001066:	f104 4100 	add.w	r1, r4, #2147483648	; 0x80000000
 800106a:	f000 f805 	bl	8001078 <__aeabi_d2ulz>
 800106e:	4240      	negs	r0, r0
 8001070:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8001074:	bd38      	pop	{r3, r4, r5, pc}
 8001076:	bf00      	nop

08001078 <__aeabi_d2ulz>:
 8001078:	b5d0      	push	{r4, r6, r7, lr}
 800107a:	2200      	movs	r2, #0
 800107c:	4b0b      	ldr	r3, [pc, #44]	; (80010ac <__aeabi_d2ulz+0x34>)
 800107e:	4606      	mov	r6, r0
 8001080:	460f      	mov	r7, r1
 8001082:	f7ff fa39 	bl	80004f8 <__aeabi_dmul>
 8001086:	f7ff fd0f 	bl	8000aa8 <__aeabi_d2uiz>
 800108a:	4604      	mov	r4, r0
 800108c:	f7ff f9ba 	bl	8000404 <__aeabi_ui2d>
 8001090:	2200      	movs	r2, #0
 8001092:	4b07      	ldr	r3, [pc, #28]	; (80010b0 <__aeabi_d2ulz+0x38>)
 8001094:	f7ff fa30 	bl	80004f8 <__aeabi_dmul>
 8001098:	4602      	mov	r2, r0
 800109a:	460b      	mov	r3, r1
 800109c:	4630      	mov	r0, r6
 800109e:	4639      	mov	r1, r7
 80010a0:	f7ff f872 	bl	8000188 <__aeabi_dsub>
 80010a4:	f7ff fd00 	bl	8000aa8 <__aeabi_d2uiz>
 80010a8:	4621      	mov	r1, r4
 80010aa:	bdd0      	pop	{r4, r6, r7, pc}
 80010ac:	3df00000 	.word	0x3df00000
 80010b0:	41f00000 	.word	0x41f00000

080010b4 <USER_ADC1_Init>:

#include "main.h"
#include "ADC.h"

void USER_ADC1_Init( void )
{
 80010b4:	b480      	push	{r7}
 80010b6:	af00      	add	r7, sp, #0

  ADC1->CR1	&=	~(ADC_CR1_DUALMOD);	// Step 1 - Select independent mode
 80010b8:	4b20      	ldr	r3, [pc, #128]	; (800113c <USER_ADC1_Init+0x88>)
 80010ba:	685b      	ldr	r3, [r3, #4]
 80010bc:	4a1f      	ldr	r2, [pc, #124]	; (800113c <USER_ADC1_Init+0x88>)
 80010be:	f423 2370 	bic.w	r3, r3, #983040	; 0xf0000
 80010c2:	6053      	str	r3, [r2, #4]
  ADC1->CR2	|=	ADC_CR2_CONT;		// Step 2 - Select conversion mode
 80010c4:	4b1d      	ldr	r3, [pc, #116]	; (800113c <USER_ADC1_Init+0x88>)
 80010c6:	689b      	ldr	r3, [r3, #8]
 80010c8:	4a1c      	ldr	r2, [pc, #112]	; (800113c <USER_ADC1_Init+0x88>)
 80010ca:	f043 0302 	orr.w	r3, r3, #2
 80010ce:	6093      	str	r3, [r2, #8]
  ADC1->CR2	&= 	~(ADC_CR2_ALIGN);	//	and format for ADC result
 80010d0:	4b1a      	ldr	r3, [pc, #104]	; (800113c <USER_ADC1_Init+0x88>)
 80010d2:	689b      	ldr	r3, [r3, #8]
 80010d4:	4a19      	ldr	r2, [pc, #100]	; (800113c <USER_ADC1_Init+0x88>)
 80010d6:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 80010da:	6093      	str	r3, [r2, #8]
  ADC1->SMPR2	&= 	~(ADC_SMPR2_SMP0);	// Step 3 - Select the sample time for the
 80010dc:	4b17      	ldr	r3, [pc, #92]	; (800113c <USER_ADC1_Init+0x88>)
 80010de:	691b      	ldr	r3, [r3, #16]
 80010e0:	4a16      	ldr	r2, [pc, #88]	; (800113c <USER_ADC1_Init+0x88>)
 80010e2:	f023 0307 	bic.w	r3, r3, #7
 80010e6:	6113      	str	r3, [r2, #16]
						//	ADC channel
  ADC1->SQR1	&= 	~(ADC_SQR1_L);		// Step 4 - Select the sequence and number of
 80010e8:	4b14      	ldr	r3, [pc, #80]	; (800113c <USER_ADC1_Init+0x88>)
 80010ea:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80010ec:	4a13      	ldr	r2, [pc, #76]	; (800113c <USER_ADC1_Init+0x88>)
 80010ee:	f423 0370 	bic.w	r3, r3, #15728640	; 0xf00000
 80010f2:	62d3      	str	r3, [r2, #44]	; 0x2c
						//	conversions for the ADC regular channels
  ADC1->SQR3	&= 	~(ADC_SQR3_SQ1);	// Step 5 - Select the channel for the first ADC
 80010f4:	4b11      	ldr	r3, [pc, #68]	; (800113c <USER_ADC1_Init+0x88>)
 80010f6:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80010f8:	4a10      	ldr	r2, [pc, #64]	; (800113c <USER_ADC1_Init+0x88>)
 80010fa:	f023 031f 	bic.w	r3, r3, #31
 80010fe:	6353      	str	r3, [r2, #52]	; 0x34
						//	conversion
  ADC1->CR2	|=	ADC_CR2_ADON;		// Step 6 - Enable the ADC module
 8001100:	4b0e      	ldr	r3, [pc, #56]	; (800113c <USER_ADC1_Init+0x88>)
 8001102:	689b      	ldr	r3, [r3, #8]
 8001104:	4a0d      	ldr	r2, [pc, #52]	; (800113c <USER_ADC1_Init+0x88>)
 8001106:	f043 0301 	orr.w	r3, r3, #1
 800110a:	6093      	str	r3, [r2, #8]
  ADC1->CR2	|=	ADC_CR2_CAL;		// Step 7 - Perform a calibration after
 800110c:	4b0b      	ldr	r3, [pc, #44]	; (800113c <USER_ADC1_Init+0x88>)
 800110e:	689b      	ldr	r3, [r3, #8]
 8001110:	4a0a      	ldr	r2, [pc, #40]	; (800113c <USER_ADC1_Init+0x88>)
 8001112:	f043 0304 	orr.w	r3, r3, #4
 8001116:	6093      	str	r3, [r2, #8]
						// 	each power-up
  while ( ADC1->CR2 & ADC_CR2_CAL );		// Step 8 - Wait until the bit is reset by
 8001118:	bf00      	nop
 800111a:	4b08      	ldr	r3, [pc, #32]	; (800113c <USER_ADC1_Init+0x88>)
 800111c:	689b      	ldr	r3, [r3, #8]
 800111e:	f003 0304 	and.w	r3, r3, #4
 8001122:	2b00      	cmp	r3, #0
 8001124:	d1f9      	bne.n	800111a <USER_ADC1_Init+0x66>
						//	hardware after calibration is complete
  ADC1->CR2	|=	ADC_CR2_ADON;		// Step 9 - Start conversion
 8001126:	4b05      	ldr	r3, [pc, #20]	; (800113c <USER_ADC1_Init+0x88>)
 8001128:	689b      	ldr	r3, [r3, #8]
 800112a:	4a04      	ldr	r2, [pc, #16]	; (800113c <USER_ADC1_Init+0x88>)
 800112c:	f043 0301 	orr.w	r3, r3, #1
 8001130:	6093      	str	r3, [r2, #8]
}
 8001132:	bf00      	nop
 8001134:	46bd      	mov	sp, r7
 8001136:	bc80      	pop	{r7}
 8001138:	4770      	bx	lr
 800113a:	bf00      	nop
 800113c:	40012400 	.word	0x40012400

08001140 <USER_ADC1_Convert>:

uint16_t USER_ADC1_Convert( void )
{
 8001140:	b480      	push	{r7}
 8001142:	af00      	add	r7, sp, #0

  while(!( ADC1->SR & ADC_SR_EOC ));		// Wait for end of conversion
 8001144:	bf00      	nop
 8001146:	4b06      	ldr	r3, [pc, #24]	; (8001160 <USER_ADC1_Convert+0x20>)
 8001148:	681b      	ldr	r3, [r3, #0]
 800114a:	f003 0302 	and.w	r3, r3, #2
 800114e:	2b00      	cmp	r3, #0
 8001150:	d0f9      	beq.n	8001146 <USER_ADC1_Convert+0x6>
  return ADC1->DR;
 8001152:	4b03      	ldr	r3, [pc, #12]	; (8001160 <USER_ADC1_Convert+0x20>)
 8001154:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8001156:	b29b      	uxth	r3, r3

}
 8001158:	4618      	mov	r0, r3
 800115a:	46bd      	mov	sp, r7
 800115c:	bc80      	pop	{r7}
 800115e:	4770      	bx	lr
 8001160:	40012400 	.word	0x40012400

08001164 <scaleVoltageValue>:

float scaleVoltageValue( float voltageValue, float min, float max )
{ 
 8001164:	b590      	push	{r4, r7, lr}
 8001166:	b087      	sub	sp, #28
 8001168:	af00      	add	r7, sp, #0
 800116a:	60f8      	str	r0, [r7, #12]
 800116c:	60b9      	str	r1, [r7, #8]
 800116e:	607a      	str	r2, [r7, #4]

  float normalizedVoltageValue = (voltageValue - min) / (max - min) * 100;
 8001170:	68b9      	ldr	r1, [r7, #8]
 8001172:	68f8      	ldr	r0, [r7, #12]
 8001174:	f7ff fd0c 	bl	8000b90 <__aeabi_fsub>
 8001178:	4603      	mov	r3, r0
 800117a:	461c      	mov	r4, r3
 800117c:	68b9      	ldr	r1, [r7, #8]
 800117e:	6878      	ldr	r0, [r7, #4]
 8001180:	f7ff fd06 	bl	8000b90 <__aeabi_fsub>
 8001184:	4603      	mov	r3, r0
 8001186:	4619      	mov	r1, r3
 8001188:	4620      	mov	r0, r4
 800118a:	f7ff febf 	bl	8000f0c <__aeabi_fdiv>
 800118e:	4603      	mov	r3, r0
 8001190:	4905      	ldr	r1, [pc, #20]	; (80011a8 <scaleVoltageValue+0x44>)
 8001192:	4618      	mov	r0, r3
 8001194:	f7ff fe06 	bl	8000da4 <__aeabi_fmul>
 8001198:	4603      	mov	r3, r0
 800119a:	617b      	str	r3, [r7, #20]
  return normalizedVoltageValue;
 800119c:	697b      	ldr	r3, [r7, #20]

}
 800119e:	4618      	mov	r0, r3
 80011a0:	371c      	adds	r7, #28
 80011a2:	46bd      	mov	sp, r7
 80011a4:	bd90      	pop	{r4, r7, pc}
 80011a6:	bf00      	nop
 80011a8:	42c80000 	.word	0x42c80000

080011ac <look2_binlxpw>:
/* Forward declaration for local functions */
static void EngTrModel_gear_state(const int32_T *sfEvent);
real_T look2_binlxpw(real_T u0, real_T u1, const real_T bp0[], const real_T bp1[],
                     const real_T table[], const uint32_T maxIndex[], uint32_T
                     stride)
{
 80011ac:	b5b0      	push	{r4, r5, r7, lr}
 80011ae:	b092      	sub	sp, #72	; 0x48
 80011b0:	af00      	add	r7, sp, #0
 80011b2:	e9c7 0102 	strd	r0, r1, [r7, #8]
 80011b6:	e9c7 2300 	strd	r2, r3, [r7]
     Extrapolation method: 'Linear'
     Use previous index: 'off'
     Use last breakpoint for index at or above upper limit: 'off'
     Remove protection against out-of-range input in generated code: 'off'
   */
  if (u0 <= bp0[0U]) {
 80011ba:	6dbb      	ldr	r3, [r7, #88]	; 0x58
 80011bc:	e9d3 2300 	ldrd	r2, r3, [r3]
 80011c0:	e9d7 0102 	ldrd	r0, r1, [r7, #8]
 80011c4:	f7ff fc14 	bl	80009f0 <__aeabi_dcmple>
 80011c8:	4603      	mov	r3, r0
 80011ca:	2b00      	cmp	r3, #0
 80011cc:	d020      	beq.n	8001210 <look2_binlxpw+0x64>
    iLeft = 0U;
 80011ce:	2300      	movs	r3, #0
 80011d0:	637b      	str	r3, [r7, #52]	; 0x34
    frac = (u0 - bp0[0U]) / (bp0[1U] - bp0[0U]);
 80011d2:	6dbb      	ldr	r3, [r7, #88]	; 0x58
 80011d4:	e9d3 2300 	ldrd	r2, r3, [r3]
 80011d8:	e9d7 0102 	ldrd	r0, r1, [r7, #8]
 80011dc:	f7fe ffd4 	bl	8000188 <__aeabi_dsub>
 80011e0:	4602      	mov	r2, r0
 80011e2:	460b      	mov	r3, r1
 80011e4:	4614      	mov	r4, r2
 80011e6:	461d      	mov	r5, r3
 80011e8:	6dbb      	ldr	r3, [r7, #88]	; 0x58
 80011ea:	3308      	adds	r3, #8
 80011ec:	e9d3 0100 	ldrd	r0, r1, [r3]
 80011f0:	6dbb      	ldr	r3, [r7, #88]	; 0x58
 80011f2:	e9d3 2300 	ldrd	r2, r3, [r3]
 80011f6:	f7fe ffc7 	bl	8000188 <__aeabi_dsub>
 80011fa:	4602      	mov	r2, r0
 80011fc:	460b      	mov	r3, r1
 80011fe:	4620      	mov	r0, r4
 8001200:	4629      	mov	r1, r5
 8001202:	f7ff faa3 	bl	800074c <__aeabi_ddiv>
 8001206:	4602      	mov	r2, r0
 8001208:	460b      	mov	r3, r1
 800120a:	e9c7 2310 	strd	r2, r3, [r7, #64]	; 0x40
 800120e:	e08e      	b.n	800132e <look2_binlxpw+0x182>
  } else if (u0 < bp0[maxIndex[0U]]) {
 8001210:	6e7b      	ldr	r3, [r7, #100]	; 0x64
 8001212:	681b      	ldr	r3, [r3, #0]
 8001214:	00db      	lsls	r3, r3, #3
 8001216:	6dba      	ldr	r2, [r7, #88]	; 0x58
 8001218:	4413      	add	r3, r2
 800121a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800121e:	e9d7 0102 	ldrd	r0, r1, [r7, #8]
 8001222:	f7ff fbdb 	bl	80009dc <__aeabi_dcmplt>
 8001226:	4603      	mov	r3, r0
 8001228:	2b00      	cmp	r3, #0
 800122a:	d04d      	beq.n	80012c8 <look2_binlxpw+0x11c>
    /* Binary Search */
    bpIdx = maxIndex[0U] >> 1U;
 800122c:	6e7b      	ldr	r3, [r7, #100]	; 0x64
 800122e:	681b      	ldr	r3, [r3, #0]
 8001230:	085b      	lsrs	r3, r3, #1
 8001232:	63bb      	str	r3, [r7, #56]	; 0x38
    iLeft = 0U;
 8001234:	2300      	movs	r3, #0
 8001236:	637b      	str	r3, [r7, #52]	; 0x34
    iRght = maxIndex[0U];
 8001238:	6e7b      	ldr	r3, [r7, #100]	; 0x64
 800123a:	681b      	ldr	r3, [r3, #0]
 800123c:	63fb      	str	r3, [r7, #60]	; 0x3c
    while (iRght - iLeft > 1U) {
 800123e:	e016      	b.n	800126e <look2_binlxpw+0xc2>
      if (u0 < bp0[bpIdx]) {
 8001240:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8001242:	00db      	lsls	r3, r3, #3
 8001244:	6dba      	ldr	r2, [r7, #88]	; 0x58
 8001246:	4413      	add	r3, r2
 8001248:	e9d3 2300 	ldrd	r2, r3, [r3]
 800124c:	e9d7 0102 	ldrd	r0, r1, [r7, #8]
 8001250:	f7ff fbc4 	bl	80009dc <__aeabi_dcmplt>
 8001254:	4603      	mov	r3, r0
 8001256:	2b00      	cmp	r3, #0
 8001258:	d002      	beq.n	8001260 <look2_binlxpw+0xb4>
        iRght = bpIdx;
 800125a:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800125c:	63fb      	str	r3, [r7, #60]	; 0x3c
 800125e:	e001      	b.n	8001264 <look2_binlxpw+0xb8>
      } else {
        iLeft = bpIdx;
 8001260:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8001262:	637b      	str	r3, [r7, #52]	; 0x34
      }

      bpIdx = (iRght + iLeft) >> 1U;
 8001264:	6bfa      	ldr	r2, [r7, #60]	; 0x3c
 8001266:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8001268:	4413      	add	r3, r2
 800126a:	085b      	lsrs	r3, r3, #1
 800126c:	63bb      	str	r3, [r7, #56]	; 0x38
    while (iRght - iLeft > 1U) {
 800126e:	6bfa      	ldr	r2, [r7, #60]	; 0x3c
 8001270:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8001272:	1ad3      	subs	r3, r2, r3
 8001274:	2b01      	cmp	r3, #1
 8001276:	d8e3      	bhi.n	8001240 <look2_binlxpw+0x94>
    }

    frac = (u0 - bp0[iLeft]) / (bp0[iLeft + 1U] - bp0[iLeft]);
 8001278:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 800127a:	00db      	lsls	r3, r3, #3
 800127c:	6dba      	ldr	r2, [r7, #88]	; 0x58
 800127e:	4413      	add	r3, r2
 8001280:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001284:	e9d7 0102 	ldrd	r0, r1, [r7, #8]
 8001288:	f7fe ff7e 	bl	8000188 <__aeabi_dsub>
 800128c:	4602      	mov	r2, r0
 800128e:	460b      	mov	r3, r1
 8001290:	4614      	mov	r4, r2
 8001292:	461d      	mov	r5, r3
 8001294:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8001296:	3301      	adds	r3, #1
 8001298:	00db      	lsls	r3, r3, #3
 800129a:	6dba      	ldr	r2, [r7, #88]	; 0x58
 800129c:	4413      	add	r3, r2
 800129e:	e9d3 0100 	ldrd	r0, r1, [r3]
 80012a2:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 80012a4:	00db      	lsls	r3, r3, #3
 80012a6:	6dba      	ldr	r2, [r7, #88]	; 0x58
 80012a8:	4413      	add	r3, r2
 80012aa:	e9d3 2300 	ldrd	r2, r3, [r3]
 80012ae:	f7fe ff6b 	bl	8000188 <__aeabi_dsub>
 80012b2:	4602      	mov	r2, r0
 80012b4:	460b      	mov	r3, r1
 80012b6:	4620      	mov	r0, r4
 80012b8:	4629      	mov	r1, r5
 80012ba:	f7ff fa47 	bl	800074c <__aeabi_ddiv>
 80012be:	4602      	mov	r2, r0
 80012c0:	460b      	mov	r3, r1
 80012c2:	e9c7 2310 	strd	r2, r3, [r7, #64]	; 0x40
 80012c6:	e032      	b.n	800132e <look2_binlxpw+0x182>
  } else {
    iLeft = maxIndex[0U] - 1U;
 80012c8:	6e7b      	ldr	r3, [r7, #100]	; 0x64
 80012ca:	681b      	ldr	r3, [r3, #0]
 80012cc:	3b01      	subs	r3, #1
 80012ce:	637b      	str	r3, [r7, #52]	; 0x34
    frac = (u0 - bp0[maxIndex[0U] - 1U]) / (bp0[maxIndex[0U]] - bp0[maxIndex[0U]
 80012d0:	6e7b      	ldr	r3, [r7, #100]	; 0x64
 80012d2:	681b      	ldr	r3, [r3, #0]
 80012d4:	f103 5300 	add.w	r3, r3, #536870912	; 0x20000000
 80012d8:	3b01      	subs	r3, #1
 80012da:	00db      	lsls	r3, r3, #3
 80012dc:	6dba      	ldr	r2, [r7, #88]	; 0x58
 80012de:	4413      	add	r3, r2
 80012e0:	e9d3 2300 	ldrd	r2, r3, [r3]
 80012e4:	e9d7 0102 	ldrd	r0, r1, [r7, #8]
 80012e8:	f7fe ff4e 	bl	8000188 <__aeabi_dsub>
 80012ec:	4602      	mov	r2, r0
 80012ee:	460b      	mov	r3, r1
 80012f0:	4614      	mov	r4, r2
 80012f2:	461d      	mov	r5, r3
 80012f4:	6e7b      	ldr	r3, [r7, #100]	; 0x64
 80012f6:	681b      	ldr	r3, [r3, #0]
 80012f8:	00db      	lsls	r3, r3, #3
 80012fa:	6dba      	ldr	r2, [r7, #88]	; 0x58
 80012fc:	4413      	add	r3, r2
 80012fe:	e9d3 0100 	ldrd	r0, r1, [r3]
 8001302:	6e7b      	ldr	r3, [r7, #100]	; 0x64
 8001304:	681b      	ldr	r3, [r3, #0]
 8001306:	f103 5300 	add.w	r3, r3, #536870912	; 0x20000000
 800130a:	3b01      	subs	r3, #1
 800130c:	00db      	lsls	r3, r3, #3
 800130e:	6dba      	ldr	r2, [r7, #88]	; 0x58
 8001310:	4413      	add	r3, r2
 8001312:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001316:	f7fe ff37 	bl	8000188 <__aeabi_dsub>
 800131a:	4602      	mov	r2, r0
 800131c:	460b      	mov	r3, r1
 800131e:	4620      	mov	r0, r4
 8001320:	4629      	mov	r1, r5
 8001322:	f7ff fa13 	bl	800074c <__aeabi_ddiv>
 8001326:	4602      	mov	r2, r0
 8001328:	460b      	mov	r3, r1
 800132a:	e9c7 2310 	strd	r2, r3, [r7, #64]	; 0x40
      - 1U]);
  }

  fractions[0U] = frac;
 800132e:	e9d7 2310 	ldrd	r2, r3, [r7, #64]	; 0x40
 8001332:	e9c7 2304 	strd	r2, r3, [r7, #16]
  bpIndices[0U] = iLeft;
 8001336:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8001338:	623b      	str	r3, [r7, #32]
     Extrapolation method: 'Linear'
     Use previous index: 'off'
     Use last breakpoint for index at or above upper limit: 'off'
     Remove protection against out-of-range input in generated code: 'off'
   */
  if (u1 <= bp1[0U]) {
 800133a:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 800133c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001340:	e9d7 0100 	ldrd	r0, r1, [r7]
 8001344:	f7ff fb54 	bl	80009f0 <__aeabi_dcmple>
 8001348:	4603      	mov	r3, r0
 800134a:	2b00      	cmp	r3, #0
 800134c:	d020      	beq.n	8001390 <look2_binlxpw+0x1e4>
    iLeft = 0U;
 800134e:	2300      	movs	r3, #0
 8001350:	637b      	str	r3, [r7, #52]	; 0x34
    frac = (u1 - bp1[0U]) / (bp1[1U] - bp1[0U]);
 8001352:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 8001354:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001358:	e9d7 0100 	ldrd	r0, r1, [r7]
 800135c:	f7fe ff14 	bl	8000188 <__aeabi_dsub>
 8001360:	4602      	mov	r2, r0
 8001362:	460b      	mov	r3, r1
 8001364:	4614      	mov	r4, r2
 8001366:	461d      	mov	r5, r3
 8001368:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 800136a:	3308      	adds	r3, #8
 800136c:	e9d3 0100 	ldrd	r0, r1, [r3]
 8001370:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 8001372:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001376:	f7fe ff07 	bl	8000188 <__aeabi_dsub>
 800137a:	4602      	mov	r2, r0
 800137c:	460b      	mov	r3, r1
 800137e:	4620      	mov	r0, r4
 8001380:	4629      	mov	r1, r5
 8001382:	f7ff f9e3 	bl	800074c <__aeabi_ddiv>
 8001386:	4602      	mov	r2, r0
 8001388:	460b      	mov	r3, r1
 800138a:	e9c7 2310 	strd	r2, r3, [r7, #64]	; 0x40
 800138e:	e095      	b.n	80014bc <look2_binlxpw+0x310>
  } else if (u1 < bp1[maxIndex[1U]]) {
 8001390:	6e7b      	ldr	r3, [r7, #100]	; 0x64
 8001392:	3304      	adds	r3, #4
 8001394:	681b      	ldr	r3, [r3, #0]
 8001396:	00db      	lsls	r3, r3, #3
 8001398:	6dfa      	ldr	r2, [r7, #92]	; 0x5c
 800139a:	4413      	add	r3, r2
 800139c:	e9d3 2300 	ldrd	r2, r3, [r3]
 80013a0:	e9d7 0100 	ldrd	r0, r1, [r7]
 80013a4:	f7ff fb1a 	bl	80009dc <__aeabi_dcmplt>
 80013a8:	4603      	mov	r3, r0
 80013aa:	2b00      	cmp	r3, #0
 80013ac:	d04f      	beq.n	800144e <look2_binlxpw+0x2a2>
    /* Binary Search */
    bpIdx = maxIndex[1U] >> 1U;
 80013ae:	6e7b      	ldr	r3, [r7, #100]	; 0x64
 80013b0:	3304      	adds	r3, #4
 80013b2:	681b      	ldr	r3, [r3, #0]
 80013b4:	085b      	lsrs	r3, r3, #1
 80013b6:	63bb      	str	r3, [r7, #56]	; 0x38
    iLeft = 0U;
 80013b8:	2300      	movs	r3, #0
 80013ba:	637b      	str	r3, [r7, #52]	; 0x34
    iRght = maxIndex[1U];
 80013bc:	6e7b      	ldr	r3, [r7, #100]	; 0x64
 80013be:	3304      	adds	r3, #4
 80013c0:	681b      	ldr	r3, [r3, #0]
 80013c2:	63fb      	str	r3, [r7, #60]	; 0x3c
    while (iRght - iLeft > 1U) {
 80013c4:	e016      	b.n	80013f4 <look2_binlxpw+0x248>
      if (u1 < bp1[bpIdx]) {
 80013c6:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80013c8:	00db      	lsls	r3, r3, #3
 80013ca:	6dfa      	ldr	r2, [r7, #92]	; 0x5c
 80013cc:	4413      	add	r3, r2
 80013ce:	e9d3 2300 	ldrd	r2, r3, [r3]
 80013d2:	e9d7 0100 	ldrd	r0, r1, [r7]
 80013d6:	f7ff fb01 	bl	80009dc <__aeabi_dcmplt>
 80013da:	4603      	mov	r3, r0
 80013dc:	2b00      	cmp	r3, #0
 80013de:	d002      	beq.n	80013e6 <look2_binlxpw+0x23a>
        iRght = bpIdx;
 80013e0:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80013e2:	63fb      	str	r3, [r7, #60]	; 0x3c
 80013e4:	e001      	b.n	80013ea <look2_binlxpw+0x23e>
      } else {
        iLeft = bpIdx;
 80013e6:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80013e8:	637b      	str	r3, [r7, #52]	; 0x34
      }

      bpIdx = (iRght + iLeft) >> 1U;
 80013ea:	6bfa      	ldr	r2, [r7, #60]	; 0x3c
 80013ec:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 80013ee:	4413      	add	r3, r2
 80013f0:	085b      	lsrs	r3, r3, #1
 80013f2:	63bb      	str	r3, [r7, #56]	; 0x38
    while (iRght - iLeft > 1U) {
 80013f4:	6bfa      	ldr	r2, [r7, #60]	; 0x3c
 80013f6:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 80013f8:	1ad3      	subs	r3, r2, r3
 80013fa:	2b01      	cmp	r3, #1
 80013fc:	d8e3      	bhi.n	80013c6 <look2_binlxpw+0x21a>
    }

    frac = (u1 - bp1[iLeft]) / (bp1[iLeft + 1U] - bp1[iLeft]);
 80013fe:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8001400:	00db      	lsls	r3, r3, #3
 8001402:	6dfa      	ldr	r2, [r7, #92]	; 0x5c
 8001404:	4413      	add	r3, r2
 8001406:	e9d3 2300 	ldrd	r2, r3, [r3]
 800140a:	e9d7 0100 	ldrd	r0, r1, [r7]
 800140e:	f7fe febb 	bl	8000188 <__aeabi_dsub>
 8001412:	4602      	mov	r2, r0
 8001414:	460b      	mov	r3, r1
 8001416:	4614      	mov	r4, r2
 8001418:	461d      	mov	r5, r3
 800141a:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 800141c:	3301      	adds	r3, #1
 800141e:	00db      	lsls	r3, r3, #3
 8001420:	6dfa      	ldr	r2, [r7, #92]	; 0x5c
 8001422:	4413      	add	r3, r2
 8001424:	e9d3 0100 	ldrd	r0, r1, [r3]
 8001428:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 800142a:	00db      	lsls	r3, r3, #3
 800142c:	6dfa      	ldr	r2, [r7, #92]	; 0x5c
 800142e:	4413      	add	r3, r2
 8001430:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001434:	f7fe fea8 	bl	8000188 <__aeabi_dsub>
 8001438:	4602      	mov	r2, r0
 800143a:	460b      	mov	r3, r1
 800143c:	4620      	mov	r0, r4
 800143e:	4629      	mov	r1, r5
 8001440:	f7ff f984 	bl	800074c <__aeabi_ddiv>
 8001444:	4602      	mov	r2, r0
 8001446:	460b      	mov	r3, r1
 8001448:	e9c7 2310 	strd	r2, r3, [r7, #64]	; 0x40
 800144c:	e036      	b.n	80014bc <look2_binlxpw+0x310>
  } else {
    iLeft = maxIndex[1U] - 1U;
 800144e:	6e7b      	ldr	r3, [r7, #100]	; 0x64
 8001450:	3304      	adds	r3, #4
 8001452:	681b      	ldr	r3, [r3, #0]
 8001454:	3b01      	subs	r3, #1
 8001456:	637b      	str	r3, [r7, #52]	; 0x34
    frac = (u1 - bp1[maxIndex[1U] - 1U]) / (bp1[maxIndex[1U]] - bp1[maxIndex[1U]
 8001458:	6e7b      	ldr	r3, [r7, #100]	; 0x64
 800145a:	3304      	adds	r3, #4
 800145c:	681b      	ldr	r3, [r3, #0]
 800145e:	f103 5300 	add.w	r3, r3, #536870912	; 0x20000000
 8001462:	3b01      	subs	r3, #1
 8001464:	00db      	lsls	r3, r3, #3
 8001466:	6dfa      	ldr	r2, [r7, #92]	; 0x5c
 8001468:	4413      	add	r3, r2
 800146a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800146e:	e9d7 0100 	ldrd	r0, r1, [r7]
 8001472:	f7fe fe89 	bl	8000188 <__aeabi_dsub>
 8001476:	4602      	mov	r2, r0
 8001478:	460b      	mov	r3, r1
 800147a:	4614      	mov	r4, r2
 800147c:	461d      	mov	r5, r3
 800147e:	6e7b      	ldr	r3, [r7, #100]	; 0x64
 8001480:	3304      	adds	r3, #4
 8001482:	681b      	ldr	r3, [r3, #0]
 8001484:	00db      	lsls	r3, r3, #3
 8001486:	6dfa      	ldr	r2, [r7, #92]	; 0x5c
 8001488:	4413      	add	r3, r2
 800148a:	e9d3 0100 	ldrd	r0, r1, [r3]
 800148e:	6e7b      	ldr	r3, [r7, #100]	; 0x64
 8001490:	3304      	adds	r3, #4
 8001492:	681b      	ldr	r3, [r3, #0]
 8001494:	f103 5300 	add.w	r3, r3, #536870912	; 0x20000000
 8001498:	3b01      	subs	r3, #1
 800149a:	00db      	lsls	r3, r3, #3
 800149c:	6dfa      	ldr	r2, [r7, #92]	; 0x5c
 800149e:	4413      	add	r3, r2
 80014a0:	e9d3 2300 	ldrd	r2, r3, [r3]
 80014a4:	f7fe fe70 	bl	8000188 <__aeabi_dsub>
 80014a8:	4602      	mov	r2, r0
 80014aa:	460b      	mov	r3, r1
 80014ac:	4620      	mov	r0, r4
 80014ae:	4629      	mov	r1, r5
 80014b0:	f7ff f94c 	bl	800074c <__aeabi_ddiv>
 80014b4:	4602      	mov	r2, r0
 80014b6:	460b      	mov	r3, r1
 80014b8:	e9c7 2310 	strd	r2, r3, [r7, #64]	; 0x40
  /* Column-major Interpolation 2-D
     Interpolation method: 'Linear point-slope'
     Use last breakpoint for index at or above upper limit: 'off'
     Overflow mode: 'portable wrapping'
   */
  bpIdx = iLeft * stride + bpIndices[0U];
 80014bc:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 80014be:	6eba      	ldr	r2, [r7, #104]	; 0x68
 80014c0:	fb03 f202 	mul.w	r2, r3, r2
 80014c4:	6a3b      	ldr	r3, [r7, #32]
 80014c6:	4413      	add	r3, r2
 80014c8:	63bb      	str	r3, [r7, #56]	; 0x38
  yL_1d = (table[bpIdx + 1U] - table[bpIdx]) * fractions[0U] + table[bpIdx];
 80014ca:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80014cc:	3301      	adds	r3, #1
 80014ce:	00db      	lsls	r3, r3, #3
 80014d0:	6e3a      	ldr	r2, [r7, #96]	; 0x60
 80014d2:	4413      	add	r3, r2
 80014d4:	e9d3 0100 	ldrd	r0, r1, [r3]
 80014d8:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80014da:	00db      	lsls	r3, r3, #3
 80014dc:	6e3a      	ldr	r2, [r7, #96]	; 0x60
 80014de:	4413      	add	r3, r2
 80014e0:	e9d3 2300 	ldrd	r2, r3, [r3]
 80014e4:	f7fe fe50 	bl	8000188 <__aeabi_dsub>
 80014e8:	4602      	mov	r2, r0
 80014ea:	460b      	mov	r3, r1
 80014ec:	4610      	mov	r0, r2
 80014ee:	4619      	mov	r1, r3
 80014f0:	e9d7 2304 	ldrd	r2, r3, [r7, #16]
 80014f4:	f7ff f800 	bl	80004f8 <__aeabi_dmul>
 80014f8:	4602      	mov	r2, r0
 80014fa:	460b      	mov	r3, r1
 80014fc:	4610      	mov	r0, r2
 80014fe:	4619      	mov	r1, r3
 8001500:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8001502:	00db      	lsls	r3, r3, #3
 8001504:	6e3a      	ldr	r2, [r7, #96]	; 0x60
 8001506:	4413      	add	r3, r2
 8001508:	e9d3 2300 	ldrd	r2, r3, [r3]
 800150c:	f7fe fe3e 	bl	800018c <__adddf3>
 8001510:	4602      	mov	r2, r0
 8001512:	460b      	mov	r3, r1
 8001514:	e9c7 230a 	strd	r2, r3, [r7, #40]	; 0x28
  bpIdx += stride;
 8001518:	6bba      	ldr	r2, [r7, #56]	; 0x38
 800151a:	6ebb      	ldr	r3, [r7, #104]	; 0x68
 800151c:	4413      	add	r3, r2
 800151e:	63bb      	str	r3, [r7, #56]	; 0x38
  return (((table[bpIdx + 1U] - table[bpIdx]) * fractions[0U] + table[bpIdx]) -
 8001520:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8001522:	3301      	adds	r3, #1
 8001524:	00db      	lsls	r3, r3, #3
 8001526:	6e3a      	ldr	r2, [r7, #96]	; 0x60
 8001528:	4413      	add	r3, r2
 800152a:	e9d3 0100 	ldrd	r0, r1, [r3]
 800152e:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8001530:	00db      	lsls	r3, r3, #3
 8001532:	6e3a      	ldr	r2, [r7, #96]	; 0x60
 8001534:	4413      	add	r3, r2
 8001536:	e9d3 2300 	ldrd	r2, r3, [r3]
 800153a:	f7fe fe25 	bl	8000188 <__aeabi_dsub>
 800153e:	4602      	mov	r2, r0
 8001540:	460b      	mov	r3, r1
 8001542:	4610      	mov	r0, r2
 8001544:	4619      	mov	r1, r3
 8001546:	e9d7 2304 	ldrd	r2, r3, [r7, #16]
 800154a:	f7fe ffd5 	bl	80004f8 <__aeabi_dmul>
 800154e:	4602      	mov	r2, r0
 8001550:	460b      	mov	r3, r1
 8001552:	4610      	mov	r0, r2
 8001554:	4619      	mov	r1, r3
 8001556:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8001558:	00db      	lsls	r3, r3, #3
 800155a:	6e3a      	ldr	r2, [r7, #96]	; 0x60
 800155c:	4413      	add	r3, r2
 800155e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001562:	f7fe fe13 	bl	800018c <__adddf3>
 8001566:	4602      	mov	r2, r0
 8001568:	460b      	mov	r3, r1
 800156a:	4610      	mov	r0, r2
 800156c:	4619      	mov	r1, r3
 800156e:	e9d7 230a 	ldrd	r2, r3, [r7, #40]	; 0x28
 8001572:	f7fe fe09 	bl	8000188 <__aeabi_dsub>
 8001576:	4602      	mov	r2, r0
 8001578:	460b      	mov	r3, r1
 800157a:	4610      	mov	r0, r2
 800157c:	4619      	mov	r1, r3
          yL_1d) * frac + yL_1d;
 800157e:	e9d7 2310 	ldrd	r2, r3, [r7, #64]	; 0x40
 8001582:	f7fe ffb9 	bl	80004f8 <__aeabi_dmul>
 8001586:	4602      	mov	r2, r0
 8001588:	460b      	mov	r3, r1
 800158a:	4610      	mov	r0, r2
 800158c:	4619      	mov	r1, r3
 800158e:	e9d7 230a 	ldrd	r2, r3, [r7, #40]	; 0x28
 8001592:	f7fe fdfb 	bl	800018c <__adddf3>
 8001596:	4602      	mov	r2, r0
 8001598:	460b      	mov	r3, r1
}
 800159a:	4610      	mov	r0, r2
 800159c:	4619      	mov	r1, r3
 800159e:	3748      	adds	r7, #72	; 0x48
 80015a0:	46bd      	mov	sp, r7
 80015a2:	bdb0      	pop	{r4, r5, r7, pc}

080015a4 <look1_binlxpw>:

real_T look1_binlxpw(real_T u0, const real_T bp0[], const real_T table[],
                     uint32_T maxIndex)
{
 80015a4:	b5b0      	push	{r4, r5, r7, lr}
 80015a6:	b08a      	sub	sp, #40	; 0x28
 80015a8:	af00      	add	r7, sp, #0
 80015aa:	e9c7 0102 	strd	r0, r1, [r7, #8]
 80015ae:	607a      	str	r2, [r7, #4]
 80015b0:	603b      	str	r3, [r7, #0]
     Extrapolation method: 'Linear'
     Use previous index: 'off'
     Use last breakpoint for index at or above upper limit: 'off'
     Remove protection against out-of-range input in generated code: 'off'
   */
  if (u0 <= bp0[0U]) {
 80015b2:	687b      	ldr	r3, [r7, #4]
 80015b4:	e9d3 2300 	ldrd	r2, r3, [r3]
 80015b8:	e9d7 0102 	ldrd	r0, r1, [r7, #8]
 80015bc:	f7ff fa18 	bl	80009f0 <__aeabi_dcmple>
 80015c0:	4603      	mov	r3, r0
 80015c2:	2b00      	cmp	r3, #0
 80015c4:	d020      	beq.n	8001608 <look1_binlxpw+0x64>
    iLeft = 0U;
 80015c6:	2300      	movs	r3, #0
 80015c8:	61bb      	str	r3, [r7, #24]
    frac = (u0 - bp0[0U]) / (bp0[1U] - bp0[0U]);
 80015ca:	687b      	ldr	r3, [r7, #4]
 80015cc:	e9d3 2300 	ldrd	r2, r3, [r3]
 80015d0:	e9d7 0102 	ldrd	r0, r1, [r7, #8]
 80015d4:	f7fe fdd8 	bl	8000188 <__aeabi_dsub>
 80015d8:	4602      	mov	r2, r0
 80015da:	460b      	mov	r3, r1
 80015dc:	4614      	mov	r4, r2
 80015de:	461d      	mov	r5, r3
 80015e0:	687b      	ldr	r3, [r7, #4]
 80015e2:	3308      	adds	r3, #8
 80015e4:	e9d3 0100 	ldrd	r0, r1, [r3]
 80015e8:	687b      	ldr	r3, [r7, #4]
 80015ea:	e9d3 2300 	ldrd	r2, r3, [r3]
 80015ee:	f7fe fdcb 	bl	8000188 <__aeabi_dsub>
 80015f2:	4602      	mov	r2, r0
 80015f4:	460b      	mov	r3, r1
 80015f6:	4620      	mov	r0, r4
 80015f8:	4629      	mov	r1, r5
 80015fa:	f7ff f8a7 	bl	800074c <__aeabi_ddiv>
 80015fe:	4602      	mov	r2, r0
 8001600:	460b      	mov	r3, r1
 8001602:	e9c7 2308 	strd	r2, r3, [r7, #32]
 8001606:	e087      	b.n	8001718 <look1_binlxpw+0x174>
  } else if (u0 < bp0[maxIndex]) {
 8001608:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800160a:	00db      	lsls	r3, r3, #3
 800160c:	687a      	ldr	r2, [r7, #4]
 800160e:	4413      	add	r3, r2
 8001610:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001614:	e9d7 0102 	ldrd	r0, r1, [r7, #8]
 8001618:	f7ff f9e0 	bl	80009dc <__aeabi_dcmplt>
 800161c:	4603      	mov	r3, r0
 800161e:	2b00      	cmp	r3, #0
 8001620:	d04b      	beq.n	80016ba <look1_binlxpw+0x116>
    /* Binary Search */
    bpIdx = maxIndex >> 1U;
 8001622:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8001624:	085b      	lsrs	r3, r3, #1
 8001626:	617b      	str	r3, [r7, #20]
    iLeft = 0U;
 8001628:	2300      	movs	r3, #0
 800162a:	61bb      	str	r3, [r7, #24]
    iRght = maxIndex;
 800162c:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800162e:	61fb      	str	r3, [r7, #28]
    while (iRght - iLeft > 1U) {
 8001630:	e016      	b.n	8001660 <look1_binlxpw+0xbc>
      if (u0 < bp0[bpIdx]) {
 8001632:	697b      	ldr	r3, [r7, #20]
 8001634:	00db      	lsls	r3, r3, #3
 8001636:	687a      	ldr	r2, [r7, #4]
 8001638:	4413      	add	r3, r2
 800163a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800163e:	e9d7 0102 	ldrd	r0, r1, [r7, #8]
 8001642:	f7ff f9cb 	bl	80009dc <__aeabi_dcmplt>
 8001646:	4603      	mov	r3, r0
 8001648:	2b00      	cmp	r3, #0
 800164a:	d002      	beq.n	8001652 <look1_binlxpw+0xae>
        iRght = bpIdx;
 800164c:	697b      	ldr	r3, [r7, #20]
 800164e:	61fb      	str	r3, [r7, #28]
 8001650:	e001      	b.n	8001656 <look1_binlxpw+0xb2>
      } else {
        iLeft = bpIdx;
 8001652:	697b      	ldr	r3, [r7, #20]
 8001654:	61bb      	str	r3, [r7, #24]
      }

      bpIdx = (iRght + iLeft) >> 1U;
 8001656:	69fa      	ldr	r2, [r7, #28]
 8001658:	69bb      	ldr	r3, [r7, #24]
 800165a:	4413      	add	r3, r2
 800165c:	085b      	lsrs	r3, r3, #1
 800165e:	617b      	str	r3, [r7, #20]
    while (iRght - iLeft > 1U) {
 8001660:	69fa      	ldr	r2, [r7, #28]
 8001662:	69bb      	ldr	r3, [r7, #24]
 8001664:	1ad3      	subs	r3, r2, r3
 8001666:	2b01      	cmp	r3, #1
 8001668:	d8e3      	bhi.n	8001632 <look1_binlxpw+0x8e>
    }

    frac = (u0 - bp0[iLeft]) / (bp0[iLeft + 1U] - bp0[iLeft]);
 800166a:	69bb      	ldr	r3, [r7, #24]
 800166c:	00db      	lsls	r3, r3, #3
 800166e:	687a      	ldr	r2, [r7, #4]
 8001670:	4413      	add	r3, r2
 8001672:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001676:	e9d7 0102 	ldrd	r0, r1, [r7, #8]
 800167a:	f7fe fd85 	bl	8000188 <__aeabi_dsub>
 800167e:	4602      	mov	r2, r0
 8001680:	460b      	mov	r3, r1
 8001682:	4614      	mov	r4, r2
 8001684:	461d      	mov	r5, r3
 8001686:	69bb      	ldr	r3, [r7, #24]
 8001688:	3301      	adds	r3, #1
 800168a:	00db      	lsls	r3, r3, #3
 800168c:	687a      	ldr	r2, [r7, #4]
 800168e:	4413      	add	r3, r2
 8001690:	e9d3 0100 	ldrd	r0, r1, [r3]
 8001694:	69bb      	ldr	r3, [r7, #24]
 8001696:	00db      	lsls	r3, r3, #3
 8001698:	687a      	ldr	r2, [r7, #4]
 800169a:	4413      	add	r3, r2
 800169c:	e9d3 2300 	ldrd	r2, r3, [r3]
 80016a0:	f7fe fd72 	bl	8000188 <__aeabi_dsub>
 80016a4:	4602      	mov	r2, r0
 80016a6:	460b      	mov	r3, r1
 80016a8:	4620      	mov	r0, r4
 80016aa:	4629      	mov	r1, r5
 80016ac:	f7ff f84e 	bl	800074c <__aeabi_ddiv>
 80016b0:	4602      	mov	r2, r0
 80016b2:	460b      	mov	r3, r1
 80016b4:	e9c7 2308 	strd	r2, r3, [r7, #32]
 80016b8:	e02e      	b.n	8001718 <look1_binlxpw+0x174>
  } else {
    iLeft = maxIndex - 1U;
 80016ba:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80016bc:	3b01      	subs	r3, #1
 80016be:	61bb      	str	r3, [r7, #24]
    frac = (u0 - bp0[maxIndex - 1U]) / (bp0[maxIndex] - bp0[maxIndex - 1U]);
 80016c0:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80016c2:	f103 5300 	add.w	r3, r3, #536870912	; 0x20000000
 80016c6:	3b01      	subs	r3, #1
 80016c8:	00db      	lsls	r3, r3, #3
 80016ca:	687a      	ldr	r2, [r7, #4]
 80016cc:	4413      	add	r3, r2
 80016ce:	e9d3 2300 	ldrd	r2, r3, [r3]
 80016d2:	e9d7 0102 	ldrd	r0, r1, [r7, #8]
 80016d6:	f7fe fd57 	bl	8000188 <__aeabi_dsub>
 80016da:	4602      	mov	r2, r0
 80016dc:	460b      	mov	r3, r1
 80016de:	4614      	mov	r4, r2
 80016e0:	461d      	mov	r5, r3
 80016e2:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80016e4:	00db      	lsls	r3, r3, #3
 80016e6:	687a      	ldr	r2, [r7, #4]
 80016e8:	4413      	add	r3, r2
 80016ea:	e9d3 0100 	ldrd	r0, r1, [r3]
 80016ee:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80016f0:	f103 5300 	add.w	r3, r3, #536870912	; 0x20000000
 80016f4:	3b01      	subs	r3, #1
 80016f6:	00db      	lsls	r3, r3, #3
 80016f8:	687a      	ldr	r2, [r7, #4]
 80016fa:	4413      	add	r3, r2
 80016fc:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001700:	f7fe fd42 	bl	8000188 <__aeabi_dsub>
 8001704:	4602      	mov	r2, r0
 8001706:	460b      	mov	r3, r1
 8001708:	4620      	mov	r0, r4
 800170a:	4629      	mov	r1, r5
 800170c:	f7ff f81e 	bl	800074c <__aeabi_ddiv>
 8001710:	4602      	mov	r2, r0
 8001712:	460b      	mov	r3, r1
 8001714:	e9c7 2308 	strd	r2, r3, [r7, #32]
  /* Column-major Interpolation 1-D
     Interpolation method: 'Linear point-slope'
     Use last breakpoint for index at or above upper limit: 'off'
     Overflow mode: 'portable wrapping'
   */
  return (table[iLeft + 1U] - table[iLeft]) * frac + table[iLeft];
 8001718:	69bb      	ldr	r3, [r7, #24]
 800171a:	3301      	adds	r3, #1
 800171c:	00db      	lsls	r3, r3, #3
 800171e:	683a      	ldr	r2, [r7, #0]
 8001720:	4413      	add	r3, r2
 8001722:	e9d3 0100 	ldrd	r0, r1, [r3]
 8001726:	69bb      	ldr	r3, [r7, #24]
 8001728:	00db      	lsls	r3, r3, #3
 800172a:	683a      	ldr	r2, [r7, #0]
 800172c:	4413      	add	r3, r2
 800172e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001732:	f7fe fd29 	bl	8000188 <__aeabi_dsub>
 8001736:	4602      	mov	r2, r0
 8001738:	460b      	mov	r3, r1
 800173a:	4610      	mov	r0, r2
 800173c:	4619      	mov	r1, r3
 800173e:	e9d7 2308 	ldrd	r2, r3, [r7, #32]
 8001742:	f7fe fed9 	bl	80004f8 <__aeabi_dmul>
 8001746:	4602      	mov	r2, r0
 8001748:	460b      	mov	r3, r1
 800174a:	4610      	mov	r0, r2
 800174c:	4619      	mov	r1, r3
 800174e:	69bb      	ldr	r3, [r7, #24]
 8001750:	00db      	lsls	r3, r3, #3
 8001752:	683a      	ldr	r2, [r7, #0]
 8001754:	4413      	add	r3, r2
 8001756:	e9d3 2300 	ldrd	r2, r3, [r3]
 800175a:	f7fe fd17 	bl	800018c <__adddf3>
 800175e:	4602      	mov	r2, r0
 8001760:	460b      	mov	r3, r1
}
 8001762:	4610      	mov	r0, r2
 8001764:	4619      	mov	r1, r3
 8001766:	3728      	adds	r7, #40	; 0x28
 8001768:	46bd      	mov	sp, r7
 800176a:	bdb0      	pop	{r4, r5, r7, pc}

0800176c <EngTrModel_gear_state>:

/* Function for Chart: '<Root>/ShiftLogic' */
static void EngTrModel_gear_state(const int32_T *sfEvent)
{
 800176c:	b480      	push	{r7}
 800176e:	b083      	sub	sp, #12
 8001770:	af00      	add	r7, sp, #0
 8001772:	6078      	str	r0, [r7, #4]
  switch (EngTrModel_DW.is_gear_state) {
 8001774:	4b3b      	ldr	r3, [pc, #236]	; (8001864 <EngTrModel_gear_state+0xf8>)
 8001776:	f893 3021 	ldrb.w	r3, [r3, #33]	; 0x21
 800177a:	3b01      	subs	r3, #1
 800177c:	2b03      	cmp	r3, #3
 800177e:	d86c      	bhi.n	800185a <EngTrModel_gear_state+0xee>
 8001780:	a201      	add	r2, pc, #4	; (adr r2, 8001788 <EngTrModel_gear_state+0x1c>)
 8001782:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8001786:	bf00      	nop
 8001788:	08001799 	.word	0x08001799
 800178c:	080017b9 	.word	0x080017b9
 8001790:	080017d7 	.word	0x080017d7
 8001794:	08001811 	.word	0x08001811
   case EngTrModel_IN_first:
    if (*sfEvent == EngTrModel_event_UP) {
 8001798:	687b      	ldr	r3, [r7, #4]
 800179a:	681b      	ldr	r3, [r3, #0]
 800179c:	2b01      	cmp	r3, #1
 800179e:	d155      	bne.n	800184c <EngTrModel_gear_state+0xe0>
      EngTrModel_DW.is_gear_state = EngTrModel_IN_second;
 80017a0:	4b30      	ldr	r3, [pc, #192]	; (8001864 <EngTrModel_gear_state+0xf8>)
 80017a2:	2203      	movs	r2, #3
 80017a4:	f883 2021 	strb.w	r2, [r3, #33]	; 0x21
      EngTrModel_B.Gear = 2.0;
 80017a8:	492f      	ldr	r1, [pc, #188]	; (8001868 <EngTrModel_gear_state+0xfc>)
 80017aa:	f04f 0200 	mov.w	r2, #0
 80017ae:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 80017b2:	e9c1 230a 	strd	r2, r3, [r1, #40]	; 0x28
    }
    break;
 80017b6:	e049      	b.n	800184c <EngTrModel_gear_state+0xe0>

   case EngTrModel_IN_fourth:
    if (*sfEvent == EngTrModel_event_DOWN) {
 80017b8:	687b      	ldr	r3, [r7, #4]
 80017ba:	681b      	ldr	r3, [r3, #0]
 80017bc:	2b00      	cmp	r3, #0
 80017be:	d147      	bne.n	8001850 <EngTrModel_gear_state+0xe4>
      EngTrModel_DW.is_gear_state = EngTrModel_IN_third;
 80017c0:	4b28      	ldr	r3, [pc, #160]	; (8001864 <EngTrModel_gear_state+0xf8>)
 80017c2:	2204      	movs	r2, #4
 80017c4:	f883 2021 	strb.w	r2, [r3, #33]	; 0x21
      EngTrModel_B.Gear = 3.0;
 80017c8:	4927      	ldr	r1, [pc, #156]	; (8001868 <EngTrModel_gear_state+0xfc>)
 80017ca:	f04f 0200 	mov.w	r2, #0
 80017ce:	4b27      	ldr	r3, [pc, #156]	; (800186c <EngTrModel_gear_state+0x100>)
 80017d0:	e9c1 230a 	strd	r2, r3, [r1, #40]	; 0x28
    }
    break;
 80017d4:	e03c      	b.n	8001850 <EngTrModel_gear_state+0xe4>

   case EngTrModel_IN_second:
    switch (*sfEvent) {
 80017d6:	687b      	ldr	r3, [r7, #4]
 80017d8:	681b      	ldr	r3, [r3, #0]
 80017da:	2b00      	cmp	r3, #0
 80017dc:	d00c      	beq.n	80017f8 <EngTrModel_gear_state+0x8c>
 80017de:	2b01      	cmp	r3, #1
 80017e0:	d138      	bne.n	8001854 <EngTrModel_gear_state+0xe8>
     case EngTrModel_event_UP:
      EngTrModel_DW.is_gear_state = EngTrModel_IN_third;
 80017e2:	4b20      	ldr	r3, [pc, #128]	; (8001864 <EngTrModel_gear_state+0xf8>)
 80017e4:	2204      	movs	r2, #4
 80017e6:	f883 2021 	strb.w	r2, [r3, #33]	; 0x21
      EngTrModel_B.Gear = 3.0;
 80017ea:	491f      	ldr	r1, [pc, #124]	; (8001868 <EngTrModel_gear_state+0xfc>)
 80017ec:	f04f 0200 	mov.w	r2, #0
 80017f0:	4b1e      	ldr	r3, [pc, #120]	; (800186c <EngTrModel_gear_state+0x100>)
 80017f2:	e9c1 230a 	strd	r2, r3, [r1, #40]	; 0x28
      break;
 80017f6:	e00a      	b.n	800180e <EngTrModel_gear_state+0xa2>

     case EngTrModel_event_DOWN:
      EngTrModel_DW.is_gear_state = EngTrModel_IN_first;
 80017f8:	4b1a      	ldr	r3, [pc, #104]	; (8001864 <EngTrModel_gear_state+0xf8>)
 80017fa:	2201      	movs	r2, #1
 80017fc:	f883 2021 	strb.w	r2, [r3, #33]	; 0x21
      EngTrModel_B.Gear = 1.0;
 8001800:	4919      	ldr	r1, [pc, #100]	; (8001868 <EngTrModel_gear_state+0xfc>)
 8001802:	f04f 0200 	mov.w	r2, #0
 8001806:	4b1a      	ldr	r3, [pc, #104]	; (8001870 <EngTrModel_gear_state+0x104>)
 8001808:	e9c1 230a 	strd	r2, r3, [r1, #40]	; 0x28
      break;
 800180c:	bf00      	nop
    }
    break;
 800180e:	e021      	b.n	8001854 <EngTrModel_gear_state+0xe8>

   case EngTrModel_IN_third:
    switch (*sfEvent) {
 8001810:	687b      	ldr	r3, [r7, #4]
 8001812:	681b      	ldr	r3, [r3, #0]
 8001814:	2b00      	cmp	r3, #0
 8001816:	d00c      	beq.n	8001832 <EngTrModel_gear_state+0xc6>
 8001818:	2b01      	cmp	r3, #1
 800181a:	d11d      	bne.n	8001858 <EngTrModel_gear_state+0xec>
     case EngTrModel_event_UP:
      EngTrModel_DW.is_gear_state = EngTrModel_IN_fourth;
 800181c:	4b11      	ldr	r3, [pc, #68]	; (8001864 <EngTrModel_gear_state+0xf8>)
 800181e:	2202      	movs	r2, #2
 8001820:	f883 2021 	strb.w	r2, [r3, #33]	; 0x21
      EngTrModel_B.Gear = 4.0;
 8001824:	4910      	ldr	r1, [pc, #64]	; (8001868 <EngTrModel_gear_state+0xfc>)
 8001826:	f04f 0200 	mov.w	r2, #0
 800182a:	4b12      	ldr	r3, [pc, #72]	; (8001874 <EngTrModel_gear_state+0x108>)
 800182c:	e9c1 230a 	strd	r2, r3, [r1, #40]	; 0x28
      break;
 8001830:	e00b      	b.n	800184a <EngTrModel_gear_state+0xde>

     case EngTrModel_event_DOWN:
      EngTrModel_DW.is_gear_state = EngTrModel_IN_second;
 8001832:	4b0c      	ldr	r3, [pc, #48]	; (8001864 <EngTrModel_gear_state+0xf8>)
 8001834:	2203      	movs	r2, #3
 8001836:	f883 2021 	strb.w	r2, [r3, #33]	; 0x21
      EngTrModel_B.Gear = 2.0;
 800183a:	490b      	ldr	r1, [pc, #44]	; (8001868 <EngTrModel_gear_state+0xfc>)
 800183c:	f04f 0200 	mov.w	r2, #0
 8001840:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8001844:	e9c1 230a 	strd	r2, r3, [r1, #40]	; 0x28
      break;
 8001848:	bf00      	nop
    }
    break;
 800184a:	e005      	b.n	8001858 <EngTrModel_gear_state+0xec>
    break;
 800184c:	bf00      	nop
 800184e:	e004      	b.n	800185a <EngTrModel_gear_state+0xee>
    break;
 8001850:	bf00      	nop
 8001852:	e002      	b.n	800185a <EngTrModel_gear_state+0xee>
    break;
 8001854:	bf00      	nop
 8001856:	e000      	b.n	800185a <EngTrModel_gear_state+0xee>
    break;
 8001858:	bf00      	nop
  }
}
 800185a:	bf00      	nop
 800185c:	370c      	adds	r7, #12
 800185e:	46bd      	mov	sp, r7
 8001860:	bc80      	pop	{r7}
 8001862:	4770      	bx	lr
 8001864:	20000250 	.word	0x20000250
 8001868:	20000220 	.word	0x20000220
 800186c:	40080000 	.word	0x40080000
 8001870:	3ff00000 	.word	0x3ff00000
 8001874:	40100000 	.word	0x40100000

08001878 <rt_powd_snf>:

real_T rt_powd_snf(real_T u0, real_T u1)
{
 8001878:	b5b0      	push	{r4, r5, r7, lr}
 800187a:	b08c      	sub	sp, #48	; 0x30
 800187c:	af00      	add	r7, sp, #0
 800187e:	e9c7 0104 	strd	r0, r1, [r7, #16]
 8001882:	e9c7 2302 	strd	r2, r3, [r7, #8]
  real_T y;
  real_T tmp;
  real_T tmp_0;
  if (rtIsNaN(u0) || rtIsNaN(u1)) {
 8001886:	e9d7 0104 	ldrd	r0, r1, [r7, #16]
 800188a:	f001 fa3b 	bl	8002d04 <rtIsNaN>
 800188e:	4603      	mov	r3, r0
 8001890:	2b00      	cmp	r3, #0
 8001892:	d106      	bne.n	80018a2 <rt_powd_snf+0x2a>
 8001894:	e9d7 0102 	ldrd	r0, r1, [r7, #8]
 8001898:	f001 fa34 	bl	8002d04 <rtIsNaN>
 800189c:	4603      	mov	r3, r0
 800189e:	2b00      	cmp	r3, #0
 80018a0:	d005      	beq.n	80018ae <rt_powd_snf+0x36>
    y = (rtNaN);
 80018a2:	4b7e      	ldr	r3, [pc, #504]	; (8001a9c <rt_powd_snf+0x224>)
 80018a4:	e9d3 2300 	ldrd	r2, r3, [r3]
 80018a8:	e9c7 230a 	strd	r2, r3, [r7, #40]	; 0x28
 80018ac:	e0ef      	b.n	8001a8e <rt_powd_snf+0x216>
  } else {
    tmp = fabs(u0);
 80018ae:	693b      	ldr	r3, [r7, #16]
 80018b0:	603b      	str	r3, [r7, #0]
 80018b2:	697b      	ldr	r3, [r7, #20]
 80018b4:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 80018b8:	607b      	str	r3, [r7, #4]
 80018ba:	e9d7 2300 	ldrd	r2, r3, [r7]
 80018be:	e9c7 2308 	strd	r2, r3, [r7, #32]
    tmp_0 = fabs(u1);
 80018c2:	68bc      	ldr	r4, [r7, #8]
 80018c4:	68fb      	ldr	r3, [r7, #12]
 80018c6:	f023 4500 	bic.w	r5, r3, #2147483648	; 0x80000000
 80018ca:	e9c7 4506 	strd	r4, r5, [r7, #24]
    if (rtIsInf(u1)) {
 80018ce:	e9d7 0102 	ldrd	r0, r1, [r7, #8]
 80018d2:	f001 f9f3 	bl	8002cbc <rtIsInf>
 80018d6:	4603      	mov	r3, r0
 80018d8:	2b00      	cmp	r3, #0
 80018da:	d049      	beq.n	8001970 <rt_powd_snf+0xf8>
      if (tmp == 1.0) {
 80018dc:	f04f 0200 	mov.w	r2, #0
 80018e0:	4b6f      	ldr	r3, [pc, #444]	; (8001aa0 <rt_powd_snf+0x228>)
 80018e2:	e9d7 0108 	ldrd	r0, r1, [r7, #32]
 80018e6:	f7ff f86f 	bl	80009c8 <__aeabi_dcmpeq>
 80018ea:	4603      	mov	r3, r0
 80018ec:	2b00      	cmp	r3, #0
 80018ee:	d005      	beq.n	80018fc <rt_powd_snf+0x84>
        y = 1.0;
 80018f0:	f04f 0200 	mov.w	r2, #0
 80018f4:	4b6a      	ldr	r3, [pc, #424]	; (8001aa0 <rt_powd_snf+0x228>)
 80018f6:	e9c7 230a 	strd	r2, r3, [r7, #40]	; 0x28
 80018fa:	e0c8      	b.n	8001a8e <rt_powd_snf+0x216>
      } else if (tmp > 1.0) {
 80018fc:	f04f 0200 	mov.w	r2, #0
 8001900:	4b67      	ldr	r3, [pc, #412]	; (8001aa0 <rt_powd_snf+0x228>)
 8001902:	e9d7 0108 	ldrd	r0, r1, [r7, #32]
 8001906:	f7ff f887 	bl	8000a18 <__aeabi_dcmpgt>
 800190a:	4603      	mov	r3, r0
 800190c:	2b00      	cmp	r3, #0
 800190e:	d017      	beq.n	8001940 <rt_powd_snf+0xc8>
        if (u1 > 0.0) {
 8001910:	f04f 0200 	mov.w	r2, #0
 8001914:	f04f 0300 	mov.w	r3, #0
 8001918:	e9d7 0102 	ldrd	r0, r1, [r7, #8]
 800191c:	f7ff f87c 	bl	8000a18 <__aeabi_dcmpgt>
 8001920:	4603      	mov	r3, r0
 8001922:	2b00      	cmp	r3, #0
 8001924:	d005      	beq.n	8001932 <rt_powd_snf+0xba>
          y = (rtInf);
 8001926:	4b5f      	ldr	r3, [pc, #380]	; (8001aa4 <rt_powd_snf+0x22c>)
 8001928:	e9d3 2300 	ldrd	r2, r3, [r3]
 800192c:	e9c7 230a 	strd	r2, r3, [r7, #40]	; 0x28
 8001930:	e0ad      	b.n	8001a8e <rt_powd_snf+0x216>
        } else {
          y = 0.0;
 8001932:	f04f 0200 	mov.w	r2, #0
 8001936:	f04f 0300 	mov.w	r3, #0
 800193a:	e9c7 230a 	strd	r2, r3, [r7, #40]	; 0x28
 800193e:	e0a6      	b.n	8001a8e <rt_powd_snf+0x216>
        }
      } else if (u1 > 0.0) {
 8001940:	f04f 0200 	mov.w	r2, #0
 8001944:	f04f 0300 	mov.w	r3, #0
 8001948:	e9d7 0102 	ldrd	r0, r1, [r7, #8]
 800194c:	f7ff f864 	bl	8000a18 <__aeabi_dcmpgt>
 8001950:	4603      	mov	r3, r0
 8001952:	2b00      	cmp	r3, #0
 8001954:	d006      	beq.n	8001964 <rt_powd_snf+0xec>
        y = 0.0;
 8001956:	f04f 0200 	mov.w	r2, #0
 800195a:	f04f 0300 	mov.w	r3, #0
 800195e:	e9c7 230a 	strd	r2, r3, [r7, #40]	; 0x28
 8001962:	e094      	b.n	8001a8e <rt_powd_snf+0x216>
      } else {
        y = (rtInf);
 8001964:	4b4f      	ldr	r3, [pc, #316]	; (8001aa4 <rt_powd_snf+0x22c>)
 8001966:	e9d3 2300 	ldrd	r2, r3, [r3]
 800196a:	e9c7 230a 	strd	r2, r3, [r7, #40]	; 0x28
 800196e:	e08e      	b.n	8001a8e <rt_powd_snf+0x216>
      }
    } else if (tmp_0 == 0.0) {
 8001970:	f04f 0200 	mov.w	r2, #0
 8001974:	f04f 0300 	mov.w	r3, #0
 8001978:	e9d7 0106 	ldrd	r0, r1, [r7, #24]
 800197c:	f7ff f824 	bl	80009c8 <__aeabi_dcmpeq>
 8001980:	4603      	mov	r3, r0
 8001982:	2b00      	cmp	r3, #0
 8001984:	d005      	beq.n	8001992 <rt_powd_snf+0x11a>
      y = 1.0;
 8001986:	f04f 0200 	mov.w	r2, #0
 800198a:	4b45      	ldr	r3, [pc, #276]	; (8001aa0 <rt_powd_snf+0x228>)
 800198c:	e9c7 230a 	strd	r2, r3, [r7, #40]	; 0x28
 8001990:	e07d      	b.n	8001a8e <rt_powd_snf+0x216>
    } else if (tmp_0 == 1.0) {
 8001992:	f04f 0200 	mov.w	r2, #0
 8001996:	4b42      	ldr	r3, [pc, #264]	; (8001aa0 <rt_powd_snf+0x228>)
 8001998:	e9d7 0106 	ldrd	r0, r1, [r7, #24]
 800199c:	f7ff f814 	bl	80009c8 <__aeabi_dcmpeq>
 80019a0:	4603      	mov	r3, r0
 80019a2:	2b00      	cmp	r3, #0
 80019a4:	d01b      	beq.n	80019de <rt_powd_snf+0x166>
      if (u1 > 0.0) {
 80019a6:	f04f 0200 	mov.w	r2, #0
 80019aa:	f04f 0300 	mov.w	r3, #0
 80019ae:	e9d7 0102 	ldrd	r0, r1, [r7, #8]
 80019b2:	f7ff f831 	bl	8000a18 <__aeabi_dcmpgt>
 80019b6:	4603      	mov	r3, r0
 80019b8:	2b00      	cmp	r3, #0
 80019ba:	d004      	beq.n	80019c6 <rt_powd_snf+0x14e>
        y = u0;
 80019bc:	e9d7 2304 	ldrd	r2, r3, [r7, #16]
 80019c0:	e9c7 230a 	strd	r2, r3, [r7, #40]	; 0x28
 80019c4:	e063      	b.n	8001a8e <rt_powd_snf+0x216>
      } else {
        y = 1.0 / u0;
 80019c6:	e9d7 2304 	ldrd	r2, r3, [r7, #16]
 80019ca:	f04f 0000 	mov.w	r0, #0
 80019ce:	4934      	ldr	r1, [pc, #208]	; (8001aa0 <rt_powd_snf+0x228>)
 80019d0:	f7fe febc 	bl	800074c <__aeabi_ddiv>
 80019d4:	4602      	mov	r2, r0
 80019d6:	460b      	mov	r3, r1
 80019d8:	e9c7 230a 	strd	r2, r3, [r7, #40]	; 0x28
 80019dc:	e057      	b.n	8001a8e <rt_powd_snf+0x216>
      }
    } else if (u1 == 2.0) {
 80019de:	f04f 0200 	mov.w	r2, #0
 80019e2:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 80019e6:	e9d7 0102 	ldrd	r0, r1, [r7, #8]
 80019ea:	f7fe ffed 	bl	80009c8 <__aeabi_dcmpeq>
 80019ee:	4603      	mov	r3, r0
 80019f0:	2b00      	cmp	r3, #0
 80019f2:	d00a      	beq.n	8001a0a <rt_powd_snf+0x192>
      y = u0 * u0;
 80019f4:	e9d7 2304 	ldrd	r2, r3, [r7, #16]
 80019f8:	e9d7 0104 	ldrd	r0, r1, [r7, #16]
 80019fc:	f7fe fd7c 	bl	80004f8 <__aeabi_dmul>
 8001a00:	4602      	mov	r2, r0
 8001a02:	460b      	mov	r3, r1
 8001a04:	e9c7 230a 	strd	r2, r3, [r7, #40]	; 0x28
 8001a08:	e041      	b.n	8001a8e <rt_powd_snf+0x216>
    } else if ((u1 == 0.5) && (u0 >= 0.0)) {
 8001a0a:	f04f 0200 	mov.w	r2, #0
 8001a0e:	4b26      	ldr	r3, [pc, #152]	; (8001aa8 <rt_powd_snf+0x230>)
 8001a10:	e9d7 0102 	ldrd	r0, r1, [r7, #8]
 8001a14:	f7fe ffd8 	bl	80009c8 <__aeabi_dcmpeq>
 8001a18:	4603      	mov	r3, r0
 8001a1a:	2b00      	cmp	r3, #0
 8001a1c:	d011      	beq.n	8001a42 <rt_powd_snf+0x1ca>
 8001a1e:	f04f 0200 	mov.w	r2, #0
 8001a22:	f04f 0300 	mov.w	r3, #0
 8001a26:	e9d7 0104 	ldrd	r0, r1, [r7, #16]
 8001a2a:	f7fe ffeb 	bl	8000a04 <__aeabi_dcmpge>
 8001a2e:	4603      	mov	r3, r0
 8001a30:	2b00      	cmp	r3, #0
 8001a32:	d006      	beq.n	8001a42 <rt_powd_snf+0x1ca>
      y = sqrt(u0);
 8001a34:	e9d7 0104 	ldrd	r0, r1, [r7, #16]
 8001a38:	f005 ffc6 	bl	80079c8 <sqrt>
 8001a3c:	e9c7 010a 	strd	r0, r1, [r7, #40]	; 0x28
 8001a40:	e025      	b.n	8001a8e <rt_powd_snf+0x216>
    } else if ((u0 < 0.0) && (u1 > floor(u1))) {
 8001a42:	f04f 0200 	mov.w	r2, #0
 8001a46:	f04f 0300 	mov.w	r3, #0
 8001a4a:	e9d7 0104 	ldrd	r0, r1, [r7, #16]
 8001a4e:	f7fe ffc5 	bl	80009dc <__aeabi_dcmplt>
 8001a52:	4603      	mov	r3, r0
 8001a54:	2b00      	cmp	r3, #0
 8001a56:	d012      	beq.n	8001a7e <rt_powd_snf+0x206>
 8001a58:	e9d7 0102 	ldrd	r0, r1, [r7, #8]
 8001a5c:	f006 f8b8 	bl	8007bd0 <floor>
 8001a60:	4602      	mov	r2, r0
 8001a62:	460b      	mov	r3, r1
 8001a64:	e9d7 0102 	ldrd	r0, r1, [r7, #8]
 8001a68:	f7fe ffd6 	bl	8000a18 <__aeabi_dcmpgt>
 8001a6c:	4603      	mov	r3, r0
 8001a6e:	2b00      	cmp	r3, #0
 8001a70:	d005      	beq.n	8001a7e <rt_powd_snf+0x206>
      y = (rtNaN);
 8001a72:	4b0a      	ldr	r3, [pc, #40]	; (8001a9c <rt_powd_snf+0x224>)
 8001a74:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001a78:	e9c7 230a 	strd	r2, r3, [r7, #40]	; 0x28
 8001a7c:	e007      	b.n	8001a8e <rt_powd_snf+0x216>
    } else {
      y = pow(u0, u1);
 8001a7e:	e9d7 2302 	ldrd	r2, r3, [r7, #8]
 8001a82:	e9d7 0104 	ldrd	r0, r1, [r7, #16]
 8001a86:	f005 ff37 	bl	80078f8 <pow>
 8001a8a:	e9c7 010a 	strd	r0, r1, [r7, #40]	; 0x28
    }
  }

  return y;
 8001a8e:	e9d7 230a 	ldrd	r2, r3, [r7, #40]	; 0x28
}
 8001a92:	4610      	mov	r0, r2
 8001a94:	4619      	mov	r1, r3
 8001a96:	3730      	adds	r7, #48	; 0x30
 8001a98:	46bd      	mov	sp, r7
 8001a9a:	bdb0      	pop	{r4, r5, r7, pc}
 8001a9c:	200002f0 	.word	0x200002f0
 8001aa0:	3ff00000 	.word	0x3ff00000
 8001aa4:	200002e0 	.word	0x200002e0
 8001aa8:	3fe00000 	.word	0x3fe00000
 8001aac:	00000000 	.word	0x00000000

08001ab0 <EngTrModel_step>:

/* Model step function */
void EngTrModel_step(void)
{
 8001ab0:	b5b0      	push	{r4, r5, r7, lr}
 8001ab2:	b08c      	sub	sp, #48	; 0x30
 8001ab4:	af06      	add	r7, sp, #24
  int32_T sfEvent;
  real_T InterpDown;
  real_T InterpUp;

  /* DiscreteIntegrator: '<S1>/Discrete-Time Integrator' */
  EngTrModel_B.EngineRPM = EngTrModel_DW.DiscreteTimeIntegrator_DSTATE;
 8001ab6:	4b8c      	ldr	r3, [pc, #560]	; (8001ce8 <EngTrModel_step+0x238>)
 8001ab8:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001abc:	498b      	ldr	r1, [pc, #556]	; (8001cec <EngTrModel_step+0x23c>)
 8001abe:	e9c1 2300 	strd	r2, r3, [r1]

  /* Outport: '<Root>/EngineSpeed' */
  EngTrModel_Y.EngineSpeed = EngTrModel_B.EngineRPM;
 8001ac2:	4b8a      	ldr	r3, [pc, #552]	; (8001cec <EngTrModel_step+0x23c>)
 8001ac4:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001ac8:	4989      	ldr	r1, [pc, #548]	; (8001cf0 <EngTrModel_step+0x240>)
 8001aca:	e9c1 2300 	strd	r2, r3, [r1]
   *  Gain: '<S8>/ToLinearSpeed'
   */
  /* Unit Conversion - from: ft/min to: mph
     Expression: output = (0.0113636*input) + (0) */
  EngTrModel_B.VehicleSpeed = 6.2831853071795862 *
    EngTrModel_DW.WheelSpeed_DSTATE * 0.011363636363636364;
 8001ace:	4b86      	ldr	r3, [pc, #536]	; (8001ce8 <EngTrModel_step+0x238>)
 8001ad0:	e9d3 0102 	ldrd	r0, r1, [r3, #8]
  EngTrModel_B.VehicleSpeed = 6.2831853071795862 *
 8001ad4:	a380      	add	r3, pc, #512	; (adr r3, 8001cd8 <EngTrModel_step+0x228>)
 8001ad6:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001ada:	f7fe fd0d 	bl	80004f8 <__aeabi_dmul>
 8001ade:	4602      	mov	r2, r0
 8001ae0:	460b      	mov	r3, r1
 8001ae2:	4610      	mov	r0, r2
 8001ae4:	4619      	mov	r1, r3
    EngTrModel_DW.WheelSpeed_DSTATE * 0.011363636363636364;
 8001ae6:	a37e      	add	r3, pc, #504	; (adr r3, 8001ce0 <EngTrModel_step+0x230>)
 8001ae8:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001aec:	f7fe fd04 	bl	80004f8 <__aeabi_dmul>
 8001af0:	4602      	mov	r2, r0
 8001af2:	460b      	mov	r3, r1
  EngTrModel_B.VehicleSpeed = 6.2831853071795862 *
 8001af4:	497d      	ldr	r1, [pc, #500]	; (8001cec <EngTrModel_step+0x23c>)
 8001af6:	e9c1 2302 	strd	r2, r3, [r1, #8]

  /* Chart: '<Root>/ShiftLogic' */
  sfEvent = EngTrModel_CALL_EVENT;
 8001afa:	f04f 33ff 	mov.w	r3, #4294967295
 8001afe:	607b      	str	r3, [r7, #4]
  if (EngTrModel_DW.temporalCounter_i1 < MAX_uint32_T) {
 8001b00:	4b79      	ldr	r3, [pc, #484]	; (8001ce8 <EngTrModel_step+0x238>)
 8001b02:	69db      	ldr	r3, [r3, #28]
 8001b04:	f1b3 3fff 	cmp.w	r3, #4294967295
 8001b08:	d004      	beq.n	8001b14 <EngTrModel_step+0x64>
    EngTrModel_DW.temporalCounter_i1++;
 8001b0a:	4b77      	ldr	r3, [pc, #476]	; (8001ce8 <EngTrModel_step+0x238>)
 8001b0c:	69db      	ldr	r3, [r3, #28]
 8001b0e:	3301      	adds	r3, #1
 8001b10:	4a75      	ldr	r2, [pc, #468]	; (8001ce8 <EngTrModel_step+0x238>)
 8001b12:	61d3      	str	r3, [r2, #28]
  }

  if (EngTrModel_DW.is_active_c1_EngTrModel == 0U) {
 8001b14:	4b74      	ldr	r3, [pc, #464]	; (8001ce8 <EngTrModel_step+0x238>)
 8001b16:	f893 3020 	ldrb.w	r3, [r3, #32]
 8001b1a:	2b00      	cmp	r3, #0
 8001b1c:	d11a      	bne.n	8001b54 <EngTrModel_step+0xa4>
    EngTrModel_DW.is_active_c1_EngTrModel = 1U;
 8001b1e:	4b72      	ldr	r3, [pc, #456]	; (8001ce8 <EngTrModel_step+0x238>)
 8001b20:	2201      	movs	r2, #1
 8001b22:	f883 2020 	strb.w	r2, [r3, #32]
    EngTrModel_DW.is_active_gear_state = 1U;
 8001b26:	4b70      	ldr	r3, [pc, #448]	; (8001ce8 <EngTrModel_step+0x238>)
 8001b28:	2201      	movs	r2, #1
 8001b2a:	f883 2022 	strb.w	r2, [r3, #34]	; 0x22
    EngTrModel_DW.is_gear_state = EngTrModel_IN_first;
 8001b2e:	4b6e      	ldr	r3, [pc, #440]	; (8001ce8 <EngTrModel_step+0x238>)
 8001b30:	2201      	movs	r2, #1
 8001b32:	f883 2021 	strb.w	r2, [r3, #33]	; 0x21
    EngTrModel_B.Gear = 1.0;
 8001b36:	496d      	ldr	r1, [pc, #436]	; (8001cec <EngTrModel_step+0x23c>)
 8001b38:	f04f 0200 	mov.w	r2, #0
 8001b3c:	4b6d      	ldr	r3, [pc, #436]	; (8001cf4 <EngTrModel_step+0x244>)
 8001b3e:	e9c1 230a 	strd	r2, r3, [r1, #40]	; 0x28
    EngTrModel_DW.is_active_selection_state = 1U;
 8001b42:	4b69      	ldr	r3, [pc, #420]	; (8001ce8 <EngTrModel_step+0x238>)
 8001b44:	2201      	movs	r2, #1
 8001b46:	f883 2024 	strb.w	r2, [r3, #36]	; 0x24
    EngTrModel_DW.is_selection_state = EngTrModel_IN_steady_state;
 8001b4a:	4b67      	ldr	r3, [pc, #412]	; (8001ce8 <EngTrModel_step+0x238>)
 8001b4c:	2202      	movs	r2, #2
 8001b4e:	f883 2023 	strb.w	r2, [r3, #35]	; 0x23
 8001b52:	e0e4      	b.n	8001d1e <EngTrModel_step+0x26e>
  } else {
    if (EngTrModel_DW.is_active_gear_state != 0U) {
 8001b54:	4b64      	ldr	r3, [pc, #400]	; (8001ce8 <EngTrModel_step+0x238>)
 8001b56:	f893 3022 	ldrb.w	r3, [r3, #34]	; 0x22
 8001b5a:	2b00      	cmp	r3, #0
 8001b5c:	d003      	beq.n	8001b66 <EngTrModel_step+0xb6>
      EngTrModel_gear_state(&sfEvent);
 8001b5e:	1d3b      	adds	r3, r7, #4
 8001b60:	4618      	mov	r0, r3
 8001b62:	f7ff fe03 	bl	800176c <EngTrModel_gear_state>
    }

    if (EngTrModel_DW.is_active_selection_state != 0U) {
 8001b66:	4b60      	ldr	r3, [pc, #384]	; (8001ce8 <EngTrModel_step+0x238>)
 8001b68:	f893 3024 	ldrb.w	r3, [r3, #36]	; 0x24
 8001b6c:	2b00      	cmp	r3, #0
 8001b6e:	f000 80d6 	beq.w	8001d1e <EngTrModel_step+0x26e>
      /* Outputs for Function Call SubSystem: '<S2>/ComputeThreshold' */
      /* Lookup_n-D: '<S5>/InterpDown' incorporates:
       *  Inport: '<Root>/Throttle'
       */
      InterpDown = look2_binlxpw(EngTrModel_U.Throttle, EngTrModel_B.Gear,
 8001b72:	4b61      	ldr	r3, [pc, #388]	; (8001cf8 <EngTrModel_step+0x248>)
 8001b74:	e9d3 0100 	ldrd	r0, r1, [r3]
 8001b78:	4b5c      	ldr	r3, [pc, #368]	; (8001cec <EngTrModel_step+0x23c>)
 8001b7a:	e9d3 230a 	ldrd	r2, r3, [r3, #40]	; 0x28
 8001b7e:	2406      	movs	r4, #6
 8001b80:	9404      	str	r4, [sp, #16]
 8001b82:	4c5e      	ldr	r4, [pc, #376]	; (8001cfc <EngTrModel_step+0x24c>)
 8001b84:	9403      	str	r4, [sp, #12]
 8001b86:	4c5e      	ldr	r4, [pc, #376]	; (8001d00 <EngTrModel_step+0x250>)
 8001b88:	9402      	str	r4, [sp, #8]
 8001b8a:	4c5e      	ldr	r4, [pc, #376]	; (8001d04 <EngTrModel_step+0x254>)
 8001b8c:	9401      	str	r4, [sp, #4]
 8001b8e:	4c5e      	ldr	r4, [pc, #376]	; (8001d08 <EngTrModel_step+0x258>)
 8001b90:	9400      	str	r4, [sp, #0]
 8001b92:	f7ff fb0b 	bl	80011ac <look2_binlxpw>
 8001b96:	e9c7 0104 	strd	r0, r1, [r7, #16]
        EngTrModel_ConstP.InterpDown_tableData, EngTrModel_ConstP.pooled6, 6U);

      /* Lookup_n-D: '<S5>/InterpUp' incorporates:
       *  Inport: '<Root>/Throttle'
       */
      InterpUp = look2_binlxpw(EngTrModel_U.Throttle, EngTrModel_B.Gear,
 8001b9a:	4b57      	ldr	r3, [pc, #348]	; (8001cf8 <EngTrModel_step+0x248>)
 8001b9c:	e9d3 0100 	ldrd	r0, r1, [r3]
 8001ba0:	4b52      	ldr	r3, [pc, #328]	; (8001cec <EngTrModel_step+0x23c>)
 8001ba2:	e9d3 230a 	ldrd	r2, r3, [r3, #40]	; 0x28
 8001ba6:	2406      	movs	r4, #6
 8001ba8:	9404      	str	r4, [sp, #16]
 8001baa:	4c54      	ldr	r4, [pc, #336]	; (8001cfc <EngTrModel_step+0x24c>)
 8001bac:	9403      	str	r4, [sp, #12]
 8001bae:	4c57      	ldr	r4, [pc, #348]	; (8001d0c <EngTrModel_step+0x25c>)
 8001bb0:	9402      	str	r4, [sp, #8]
 8001bb2:	4c54      	ldr	r4, [pc, #336]	; (8001d04 <EngTrModel_step+0x254>)
 8001bb4:	9401      	str	r4, [sp, #4]
 8001bb6:	4c56      	ldr	r4, [pc, #344]	; (8001d10 <EngTrModel_step+0x260>)
 8001bb8:	9400      	str	r4, [sp, #0]
 8001bba:	f7ff faf7 	bl	80011ac <look2_binlxpw>
 8001bbe:	e9c7 0102 	strd	r0, r1, [r7, #8]
        EngTrModel_ConstP.InterpUp_bp01Data, EngTrModel_ConstP.pooled2,
        EngTrModel_ConstP.InterpUp_tableData, EngTrModel_ConstP.pooled6, 6U);

      /* End of Outputs for SubSystem: '<S2>/ComputeThreshold' */
      switch (EngTrModel_DW.is_selection_state) {
 8001bc2:	4b49      	ldr	r3, [pc, #292]	; (8001ce8 <EngTrModel_step+0x238>)
 8001bc4:	f893 3023 	ldrb.w	r3, [r3, #35]	; 0x23
 8001bc8:	2b03      	cmp	r3, #3
 8001bca:	d05a      	beq.n	8001c82 <EngTrModel_step+0x1d2>
 8001bcc:	2b03      	cmp	r3, #3
 8001bce:	f300 80a6 	bgt.w	8001d1e <EngTrModel_step+0x26e>
 8001bd2:	2b01      	cmp	r3, #1
 8001bd4:	d002      	beq.n	8001bdc <EngTrModel_step+0x12c>
 8001bd6:	2b02      	cmp	r3, #2
 8001bd8:	d02e      	beq.n	8001c38 <EngTrModel_step+0x188>
 8001bda:	e0a0      	b.n	8001d1e <EngTrModel_step+0x26e>
       case EngTrModel_IN_downshifting:
        if ((EngTrModel_DW.temporalCounter_i1 >= (uint32_T)2.0) &&
 8001bdc:	4b42      	ldr	r3, [pc, #264]	; (8001ce8 <EngTrModel_step+0x238>)
 8001bde:	69db      	ldr	r3, [r3, #28]
 8001be0:	2b01      	cmp	r3, #1
 8001be2:	d919      	bls.n	8001c18 <EngTrModel_step+0x168>
            (EngTrModel_B.VehicleSpeed <= InterpDown)) {
 8001be4:	4b41      	ldr	r3, [pc, #260]	; (8001cec <EngTrModel_step+0x23c>)
 8001be6:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
        if ((EngTrModel_DW.temporalCounter_i1 >= (uint32_T)2.0) &&
 8001bea:	e9d7 0104 	ldrd	r0, r1, [r7, #16]
 8001bee:	f7fe ff09 	bl	8000a04 <__aeabi_dcmpge>
 8001bf2:	4603      	mov	r3, r0
 8001bf4:	2b00      	cmp	r3, #0
 8001bf6:	d00f      	beq.n	8001c18 <EngTrModel_step+0x168>
          sfEvent = EngTrModel_event_DOWN;
 8001bf8:	2300      	movs	r3, #0
 8001bfa:	607b      	str	r3, [r7, #4]
          if (EngTrModel_DW.is_active_gear_state != 0U) {
 8001bfc:	4b3a      	ldr	r3, [pc, #232]	; (8001ce8 <EngTrModel_step+0x238>)
 8001bfe:	f893 3022 	ldrb.w	r3, [r3, #34]	; 0x22
 8001c02:	2b00      	cmp	r3, #0
 8001c04:	d003      	beq.n	8001c0e <EngTrModel_step+0x15e>
            EngTrModel_gear_state(&sfEvent);
 8001c06:	1d3b      	adds	r3, r7, #4
 8001c08:	4618      	mov	r0, r3
 8001c0a:	f7ff fdaf 	bl	800176c <EngTrModel_gear_state>
          }

          EngTrModel_DW.is_selection_state = EngTrModel_IN_steady_state;
 8001c0e:	4b36      	ldr	r3, [pc, #216]	; (8001ce8 <EngTrModel_step+0x238>)
 8001c10:	2202      	movs	r2, #2
 8001c12:	f883 2023 	strb.w	r2, [r3, #35]	; 0x23
        } else {
          if (EngTrModel_B.VehicleSpeed > InterpDown) {
            EngTrModel_DW.is_selection_state = EngTrModel_IN_steady_state;
          }
        }
        break;
 8001c16:	e082      	b.n	8001d1e <EngTrModel_step+0x26e>
          if (EngTrModel_B.VehicleSpeed > InterpDown) {
 8001c18:	4b34      	ldr	r3, [pc, #208]	; (8001cec <EngTrModel_step+0x23c>)
 8001c1a:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 8001c1e:	e9d7 0104 	ldrd	r0, r1, [r7, #16]
 8001c22:	f7fe fedb 	bl	80009dc <__aeabi_dcmplt>
 8001c26:	4603      	mov	r3, r0
 8001c28:	2b00      	cmp	r3, #0
 8001c2a:	d100      	bne.n	8001c2e <EngTrModel_step+0x17e>
        break;
 8001c2c:	e077      	b.n	8001d1e <EngTrModel_step+0x26e>
            EngTrModel_DW.is_selection_state = EngTrModel_IN_steady_state;
 8001c2e:	4b2e      	ldr	r3, [pc, #184]	; (8001ce8 <EngTrModel_step+0x238>)
 8001c30:	2202      	movs	r2, #2
 8001c32:	f883 2023 	strb.w	r2, [r3, #35]	; 0x23
        break;
 8001c36:	e072      	b.n	8001d1e <EngTrModel_step+0x26e>

       case EngTrModel_IN_steady_state:
        if (EngTrModel_B.VehicleSpeed > InterpUp) {
 8001c38:	4b2c      	ldr	r3, [pc, #176]	; (8001cec <EngTrModel_step+0x23c>)
 8001c3a:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 8001c3e:	e9d7 0102 	ldrd	r0, r1, [r7, #8]
 8001c42:	f7fe fecb 	bl	80009dc <__aeabi_dcmplt>
 8001c46:	4603      	mov	r3, r0
 8001c48:	2b00      	cmp	r3, #0
 8001c4a:	d007      	beq.n	8001c5c <EngTrModel_step+0x1ac>
          EngTrModel_DW.is_selection_state = EngTrModel_IN_upshifting;
 8001c4c:	4b26      	ldr	r3, [pc, #152]	; (8001ce8 <EngTrModel_step+0x238>)
 8001c4e:	2203      	movs	r2, #3
 8001c50:	f883 2023 	strb.w	r2, [r3, #35]	; 0x23
          EngTrModel_DW.temporalCounter_i1 = 0U;
 8001c54:	4b24      	ldr	r3, [pc, #144]	; (8001ce8 <EngTrModel_step+0x238>)
 8001c56:	2200      	movs	r2, #0
 8001c58:	61da      	str	r2, [r3, #28]
          if (EngTrModel_B.VehicleSpeed < InterpDown) {
            EngTrModel_DW.is_selection_state = EngTrModel_IN_downshifting;
            EngTrModel_DW.temporalCounter_i1 = 0U;
          }
        }
        break;
 8001c5a:	e060      	b.n	8001d1e <EngTrModel_step+0x26e>
          if (EngTrModel_B.VehicleSpeed < InterpDown) {
 8001c5c:	4b23      	ldr	r3, [pc, #140]	; (8001cec <EngTrModel_step+0x23c>)
 8001c5e:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 8001c62:	e9d7 0104 	ldrd	r0, r1, [r7, #16]
 8001c66:	f7fe fed7 	bl	8000a18 <__aeabi_dcmpgt>
 8001c6a:	4603      	mov	r3, r0
 8001c6c:	2b00      	cmp	r3, #0
 8001c6e:	d100      	bne.n	8001c72 <EngTrModel_step+0x1c2>
        break;
 8001c70:	e055      	b.n	8001d1e <EngTrModel_step+0x26e>
            EngTrModel_DW.is_selection_state = EngTrModel_IN_downshifting;
 8001c72:	4b1d      	ldr	r3, [pc, #116]	; (8001ce8 <EngTrModel_step+0x238>)
 8001c74:	2201      	movs	r2, #1
 8001c76:	f883 2023 	strb.w	r2, [r3, #35]	; 0x23
            EngTrModel_DW.temporalCounter_i1 = 0U;
 8001c7a:	4b1b      	ldr	r3, [pc, #108]	; (8001ce8 <EngTrModel_step+0x238>)
 8001c7c:	2200      	movs	r2, #0
 8001c7e:	61da      	str	r2, [r3, #28]
        break;
 8001c80:	e04d      	b.n	8001d1e <EngTrModel_step+0x26e>

       case EngTrModel_IN_upshifting:
        if ((EngTrModel_DW.temporalCounter_i1 >= (uint32_T)2.0) &&
 8001c82:	4b19      	ldr	r3, [pc, #100]	; (8001ce8 <EngTrModel_step+0x238>)
 8001c84:	69db      	ldr	r3, [r3, #28]
 8001c86:	2b01      	cmp	r3, #1
 8001c88:	d919      	bls.n	8001cbe <EngTrModel_step+0x20e>
            (EngTrModel_B.VehicleSpeed >= InterpUp)) {
 8001c8a:	4b18      	ldr	r3, [pc, #96]	; (8001cec <EngTrModel_step+0x23c>)
 8001c8c:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
        if ((EngTrModel_DW.temporalCounter_i1 >= (uint32_T)2.0) &&
 8001c90:	e9d7 0102 	ldrd	r0, r1, [r7, #8]
 8001c94:	f7fe feac 	bl	80009f0 <__aeabi_dcmple>
 8001c98:	4603      	mov	r3, r0
 8001c9a:	2b00      	cmp	r3, #0
 8001c9c:	d00f      	beq.n	8001cbe <EngTrModel_step+0x20e>
          sfEvent = EngTrModel_event_UP;
 8001c9e:	2301      	movs	r3, #1
 8001ca0:	607b      	str	r3, [r7, #4]
          if (EngTrModel_DW.is_active_gear_state != 0U) {
 8001ca2:	4b11      	ldr	r3, [pc, #68]	; (8001ce8 <EngTrModel_step+0x238>)
 8001ca4:	f893 3022 	ldrb.w	r3, [r3, #34]	; 0x22
 8001ca8:	2b00      	cmp	r3, #0
 8001caa:	d003      	beq.n	8001cb4 <EngTrModel_step+0x204>
            EngTrModel_gear_state(&sfEvent);
 8001cac:	1d3b      	adds	r3, r7, #4
 8001cae:	4618      	mov	r0, r3
 8001cb0:	f7ff fd5c 	bl	800176c <EngTrModel_gear_state>
          }

          EngTrModel_DW.is_selection_state = EngTrModel_IN_steady_state;
 8001cb4:	4b0c      	ldr	r3, [pc, #48]	; (8001ce8 <EngTrModel_step+0x238>)
 8001cb6:	2202      	movs	r2, #2
 8001cb8:	f883 2023 	strb.w	r2, [r3, #35]	; 0x23
        } else {
          if (EngTrModel_B.VehicleSpeed < InterpUp) {
            EngTrModel_DW.is_selection_state = EngTrModel_IN_steady_state;
          }
        }
        break;
 8001cbc:	e02e      	b.n	8001d1c <EngTrModel_step+0x26c>
          if (EngTrModel_B.VehicleSpeed < InterpUp) {
 8001cbe:	4b0b      	ldr	r3, [pc, #44]	; (8001cec <EngTrModel_step+0x23c>)
 8001cc0:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 8001cc4:	e9d7 0102 	ldrd	r0, r1, [r7, #8]
 8001cc8:	f7fe fea6 	bl	8000a18 <__aeabi_dcmpgt>
 8001ccc:	4603      	mov	r3, r0
 8001cce:	2b00      	cmp	r3, #0
 8001cd0:	d120      	bne.n	8001d14 <EngTrModel_step+0x264>
        break;
 8001cd2:	e023      	b.n	8001d1c <EngTrModel_step+0x26c>
 8001cd4:	f3af 8000 	nop.w
 8001cd8:	54442d18 	.word	0x54442d18
 8001cdc:	401921fb 	.word	0x401921fb
 8001ce0:	745d1746 	.word	0x745d1746
 8001ce4:	3f8745d1 	.word	0x3f8745d1
 8001ce8:	20000250 	.word	0x20000250
 8001cec:	20000220 	.word	0x20000220
 8001cf0:	20000288 	.word	0x20000288
 8001cf4:	3ff00000 	.word	0x3ff00000
 8001cf8:	20000278 	.word	0x20000278
 8001cfc:	080090d8 	.word	0x080090d8
 8001d00:	080088a8 	.word	0x080088a8
 8001d04:	08008998 	.word	0x08008998
 8001d08:	08008968 	.word	0x08008968
 8001d0c:	080089b8 	.word	0x080089b8
 8001d10:	08008a78 	.word	0x08008a78
            EngTrModel_DW.is_selection_state = EngTrModel_IN_steady_state;
 8001d14:	4b84      	ldr	r3, [pc, #528]	; (8001f28 <EngTrModel_step+0x478>)
 8001d16:	2202      	movs	r2, #2
 8001d18:	f883 2023 	strb.w	r2, [r3, #35]	; 0x23
        break;
 8001d1c:	bf00      	nop
  }

  /* End of Chart: '<Root>/ShiftLogic' */

  /* Lookup_n-D: '<S7>/Table' */
  InterpDown = look1_binlxpw(EngTrModel_B.Gear, EngTrModel_ConstP.pooled2,
 8001d1e:	4b83      	ldr	r3, [pc, #524]	; (8001f2c <EngTrModel_step+0x47c>)
 8001d20:	e9d3 010a 	ldrd	r0, r1, [r3, #40]	; 0x28
 8001d24:	2303      	movs	r3, #3
 8001d26:	9300      	str	r3, [sp, #0]
 8001d28:	4b81      	ldr	r3, [pc, #516]	; (8001f30 <EngTrModel_step+0x480>)
 8001d2a:	4a82      	ldr	r2, [pc, #520]	; (8001f34 <EngTrModel_step+0x484>)
 8001d2c:	f7ff fc3a 	bl	80015a4 <look1_binlxpw>
 8001d30:	e9c7 0104 	strd	r0, r1, [r7, #16]
    EngTrModel_ConstP.Table_tableData, 3U);

  /* Gain: '<S4>/FinalDriveRatio2' incorporates:
   *  DiscreteIntegrator: '<S4>/WheelSpeed'
   */
  EngTrModel_B.TransmissionRPM = 3.23 * EngTrModel_DW.WheelSpeed_DSTATE;
 8001d34:	4b7c      	ldr	r3, [pc, #496]	; (8001f28 <EngTrModel_step+0x478>)
 8001d36:	e9d3 0102 	ldrd	r0, r1, [r3, #8]
 8001d3a:	a375      	add	r3, pc, #468	; (adr r3, 8001f10 <EngTrModel_step+0x460>)
 8001d3c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001d40:	f7fe fbda 	bl	80004f8 <__aeabi_dmul>
 8001d44:	4602      	mov	r2, r0
 8001d46:	460b      	mov	r3, r1
 8001d48:	4978      	ldr	r1, [pc, #480]	; (8001f2c <EngTrModel_step+0x47c>)
 8001d4a:	e9c1 2304 	strd	r2, r3, [r1, #16]

  /* Product: '<S6>/SpeedRatio' incorporates:
   *  Product: '<S7>/Product1'
   */
  if( EngTrModel_B.EngineRPM != 0)
 8001d4e:	4b77      	ldr	r3, [pc, #476]	; (8001f2c <EngTrModel_step+0x47c>)
 8001d50:	e9d3 0100 	ldrd	r0, r1, [r3]
 8001d54:	f04f 0200 	mov.w	r2, #0
 8001d58:	f04f 0300 	mov.w	r3, #0
 8001d5c:	f7fe fe34 	bl	80009c8 <__aeabi_dcmpeq>
 8001d60:	4603      	mov	r3, r0
 8001d62:	2b00      	cmp	r3, #0
 8001d64:	d114      	bne.n	8001d90 <EngTrModel_step+0x2e0>
    InterpUp = InterpDown * EngTrModel_B.TransmissionRPM / EngTrModel_B.EngineRPM;
 8001d66:	4b71      	ldr	r3, [pc, #452]	; (8001f2c <EngTrModel_step+0x47c>)
 8001d68:	e9d3 0104 	ldrd	r0, r1, [r3, #16]
 8001d6c:	e9d7 2304 	ldrd	r2, r3, [r7, #16]
 8001d70:	f7fe fbc2 	bl	80004f8 <__aeabi_dmul>
 8001d74:	4602      	mov	r2, r0
 8001d76:	460b      	mov	r3, r1
 8001d78:	4610      	mov	r0, r2
 8001d7a:	4619      	mov	r1, r3
 8001d7c:	4b6b      	ldr	r3, [pc, #428]	; (8001f2c <EngTrModel_step+0x47c>)
 8001d7e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001d82:	f7fe fce3 	bl	800074c <__aeabi_ddiv>
 8001d86:	4602      	mov	r2, r0
 8001d88:	460b      	mov	r3, r1
 8001d8a:	e9c7 2302 	strd	r2, r3, [r7, #8]
 8001d8e:	e005      	b.n	8001d9c <EngTrModel_step+0x2ec>
  else
    InterpUp = 0.0;
 8001d90:	f04f 0200 	mov.w	r2, #0
 8001d94:	f04f 0300 	mov.w	r3, #0
 8001d98:	e9c7 2302 	strd	r2, r3, [r7, #8]

  /* Fcn: '<S6>/Impeller' incorporates:
   *  Lookup_n-D: '<S6>/FactorK'
   *  Product: '<S6>/Quotient'
   */
  EngTrModel_B.ImpellerTorque = rt_powd_snf(EngTrModel_B.EngineRPM /
 8001d9c:	4b63      	ldr	r3, [pc, #396]	; (8001f2c <EngTrModel_step+0x47c>)
 8001d9e:	e9d3 4500 	ldrd	r4, r5, [r3]
    look1_binlxpw(InterpUp, EngTrModel_ConstP.pooled5,
 8001da2:	2314      	movs	r3, #20
 8001da4:	9300      	str	r3, [sp, #0]
 8001da6:	4b64      	ldr	r3, [pc, #400]	; (8001f38 <EngTrModel_step+0x488>)
 8001da8:	4a64      	ldr	r2, [pc, #400]	; (8001f3c <EngTrModel_step+0x48c>)
 8001daa:	e9d7 0102 	ldrd	r0, r1, [r7, #8]
 8001dae:	f7ff fbf9 	bl	80015a4 <look1_binlxpw>
 8001db2:	4602      	mov	r2, r0
 8001db4:	460b      	mov	r3, r1
  EngTrModel_B.ImpellerTorque = rt_powd_snf(EngTrModel_B.EngineRPM /
 8001db6:	4620      	mov	r0, r4
 8001db8:	4629      	mov	r1, r5
 8001dba:	f7fe fcc7 	bl	800074c <__aeabi_ddiv>
 8001dbe:	4602      	mov	r2, r0
 8001dc0:	460b      	mov	r3, r1
 8001dc2:	4610      	mov	r0, r2
 8001dc4:	4619      	mov	r1, r3
 8001dc6:	f04f 0200 	mov.w	r2, #0
 8001dca:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8001dce:	f7ff fd53 	bl	8001878 <rt_powd_snf>
 8001dd2:	4602      	mov	r2, r0
 8001dd4:	460b      	mov	r3, r1
 8001dd6:	4955      	ldr	r1, [pc, #340]	; (8001f2c <EngTrModel_step+0x47c>)
 8001dd8:	e9c1 2306 	strd	r2, r3, [r1, #24]
                  EngTrModel_ConstP.FactorK_tableData, 20U), 2.0);

  /* Lookup_n-D: '<S6>/TorqueRatio' */
  InterpUp = look1_binlxpw(InterpUp, EngTrModel_ConstP.pooled5,
 8001ddc:	2314      	movs	r3, #20
 8001dde:	9300      	str	r3, [sp, #0]
 8001de0:	4b57      	ldr	r3, [pc, #348]	; (8001f40 <EngTrModel_step+0x490>)
 8001de2:	4a56      	ldr	r2, [pc, #344]	; (8001f3c <EngTrModel_step+0x48c>)
 8001de4:	e9d7 0102 	ldrd	r0, r1, [r7, #8]
 8001de8:	f7ff fbdc 	bl	80015a4 <look1_binlxpw>
 8001dec:	e9c7 0102 	strd	r0, r1, [r7, #8]
    EngTrModel_ConstP.TorqueRatio_tableData, 20U);

  /* Product: '<S7>/Product' incorporates:
   *  Product: '<S6>/Turbine'
   */
  EngTrModel_B.OutputTorque = EngTrModel_B.ImpellerTorque * InterpUp *
 8001df0:	4b4e      	ldr	r3, [pc, #312]	; (8001f2c <EngTrModel_step+0x47c>)
 8001df2:	e9d3 0106 	ldrd	r0, r1, [r3, #24]
 8001df6:	e9d7 2302 	ldrd	r2, r3, [r7, #8]
 8001dfa:	f7fe fb7d 	bl	80004f8 <__aeabi_dmul>
 8001dfe:	4602      	mov	r2, r0
 8001e00:	460b      	mov	r3, r1
 8001e02:	4610      	mov	r0, r2
 8001e04:	4619      	mov	r1, r3
 8001e06:	e9d7 2304 	ldrd	r2, r3, [r7, #16]
 8001e0a:	f7fe fb75 	bl	80004f8 <__aeabi_dmul>
 8001e0e:	4602      	mov	r2, r0
 8001e10:	460b      	mov	r3, r1
 8001e12:	4946      	ldr	r1, [pc, #280]	; (8001f2c <EngTrModel_step+0x47c>)
 8001e14:	e9c1 2308 	strd	r2, r3, [r1, #32]
    InterpDown;

  /* Outport: '<Root>/Gear' */
  EngTrModel_Y.Gear = EngTrModel_B.Gear;
 8001e18:	4b44      	ldr	r3, [pc, #272]	; (8001f2c <EngTrModel_step+0x47c>)
 8001e1a:	e9d3 230a 	ldrd	r2, r3, [r3, #40]	; 0x28
 8001e1e:	4949      	ldr	r1, [pc, #292]	; (8001f44 <EngTrModel_step+0x494>)
 8001e20:	e9c1 2304 	strd	r2, r3, [r1, #16]

  /* Outport: '<Root>/VehicleSpeed' */
  EngTrModel_Y.VehicleSpeed = EngTrModel_B.VehicleSpeed;
 8001e24:	4b41      	ldr	r3, [pc, #260]	; (8001f2c <EngTrModel_step+0x47c>)
 8001e26:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 8001e2a:	4946      	ldr	r1, [pc, #280]	; (8001f44 <EngTrModel_step+0x494>)
 8001e2c:	e9c1 2302 	strd	r2, r3, [r1, #8]
   *  Gain: '<S1>/EnginePlusImpellerInertia'
   *  Inport: '<Root>/Throttle'
   *  Lookup_n-D: '<S1>/EngineTorque'
   *  Sum: '<S1>/Sum'
   */
  EngTrModel_DW.DiscreteTimeIntegrator_DSTATE += (look2_binlxpw
 8001e30:	4b45      	ldr	r3, [pc, #276]	; (8001f48 <EngTrModel_step+0x498>)
 8001e32:	e9d3 0100 	ldrd	r0, r1, [r3]
 8001e36:	4b3d      	ldr	r3, [pc, #244]	; (8001f2c <EngTrModel_step+0x47c>)
 8001e38:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001e3c:	240a      	movs	r4, #10
 8001e3e:	9404      	str	r4, [sp, #16]
 8001e40:	4c42      	ldr	r4, [pc, #264]	; (8001f4c <EngTrModel_step+0x49c>)
 8001e42:	9403      	str	r4, [sp, #12]
 8001e44:	4c42      	ldr	r4, [pc, #264]	; (8001f50 <EngTrModel_step+0x4a0>)
 8001e46:	9402      	str	r4, [sp, #8]
 8001e48:	4c42      	ldr	r4, [pc, #264]	; (8001f54 <EngTrModel_step+0x4a4>)
 8001e4a:	9401      	str	r4, [sp, #4]
 8001e4c:	4c42      	ldr	r4, [pc, #264]	; (8001f58 <EngTrModel_step+0x4a8>)
 8001e4e:	9400      	str	r4, [sp, #0]
 8001e50:	f7ff f9ac 	bl	80011ac <look2_binlxpw>
    (EngTrModel_U.Throttle, EngTrModel_B.EngineRPM,
     EngTrModel_ConstP.EngineTorque_bp01Data,
     EngTrModel_ConstP.EngineTorque_bp02Data,
     EngTrModel_ConstP.EngineTorque_tableData,
     EngTrModel_ConstP.EngineTorque_maxIndex, 10U) - EngTrModel_B.ImpellerTorque)
 8001e54:	4b35      	ldr	r3, [pc, #212]	; (8001f2c <EngTrModel_step+0x47c>)
 8001e56:	e9d3 2306 	ldrd	r2, r3, [r3, #24]
 8001e5a:	f7fe f995 	bl	8000188 <__aeabi_dsub>
 8001e5e:	4602      	mov	r2, r0
 8001e60:	460b      	mov	r3, r1
 8001e62:	4610      	mov	r0, r2
 8001e64:	4619      	mov	r1, r3
    * 45.472138452209627 * 0.04;
 8001e66:	a32c      	add	r3, pc, #176	; (adr r3, 8001f18 <EngTrModel_step+0x468>)
 8001e68:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001e6c:	f7fe fb44 	bl	80004f8 <__aeabi_dmul>
 8001e70:	4602      	mov	r2, r0
 8001e72:	460b      	mov	r3, r1
 8001e74:	4610      	mov	r0, r2
 8001e76:	4619      	mov	r1, r3
 8001e78:	a329      	add	r3, pc, #164	; (adr r3, 8001f20 <EngTrModel_step+0x470>)
 8001e7a:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001e7e:	f7fe fb3b 	bl	80004f8 <__aeabi_dmul>
 8001e82:	4602      	mov	r2, r0
 8001e84:	460b      	mov	r3, r1
 8001e86:	4610      	mov	r0, r2
 8001e88:	4619      	mov	r1, r3
  EngTrModel_DW.DiscreteTimeIntegrator_DSTATE += (look2_binlxpw
 8001e8a:	4b27      	ldr	r3, [pc, #156]	; (8001f28 <EngTrModel_step+0x478>)
 8001e8c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001e90:	f7fe f97c 	bl	800018c <__adddf3>
 8001e94:	4602      	mov	r2, r0
 8001e96:	460b      	mov	r3, r1
 8001e98:	4923      	ldr	r1, [pc, #140]	; (8001f28 <EngTrModel_step+0x478>)
 8001e9a:	e9c1 2300 	strd	r2, r3, [r1]

  /* Signum: '<S4>/Sign' */
  if (EngTrModel_B.VehicleSpeed < 0.0) {
 8001e9e:	4b23      	ldr	r3, [pc, #140]	; (8001f2c <EngTrModel_step+0x47c>)
 8001ea0:	e9d3 0102 	ldrd	r0, r1, [r3, #8]
 8001ea4:	f04f 0200 	mov.w	r2, #0
 8001ea8:	f04f 0300 	mov.w	r3, #0
 8001eac:	f7fe fd96 	bl	80009dc <__aeabi_dcmplt>
 8001eb0:	4603      	mov	r3, r0
 8001eb2:	2b00      	cmp	r3, #0
 8001eb4:	d005      	beq.n	8001ec2 <EngTrModel_step+0x412>
    InterpDown = -1.0;
 8001eb6:	f04f 0200 	mov.w	r2, #0
 8001eba:	4b28      	ldr	r3, [pc, #160]	; (8001f5c <EngTrModel_step+0x4ac>)
 8001ebc:	e9c7 2304 	strd	r2, r3, [r7, #16]
 8001ec0:	e055      	b.n	8001f6e <EngTrModel_step+0x4be>
  } else if (EngTrModel_B.VehicleSpeed > 0.0) {
 8001ec2:	4b1a      	ldr	r3, [pc, #104]	; (8001f2c <EngTrModel_step+0x47c>)
 8001ec4:	e9d3 0102 	ldrd	r0, r1, [r3, #8]
 8001ec8:	f04f 0200 	mov.w	r2, #0
 8001ecc:	f04f 0300 	mov.w	r3, #0
 8001ed0:	f7fe fda2 	bl	8000a18 <__aeabi_dcmpgt>
 8001ed4:	4603      	mov	r3, r0
 8001ed6:	2b00      	cmp	r3, #0
 8001ed8:	d005      	beq.n	8001ee6 <EngTrModel_step+0x436>
    InterpDown = 1.0;
 8001eda:	f04f 0200 	mov.w	r2, #0
 8001ede:	4b20      	ldr	r3, [pc, #128]	; (8001f60 <EngTrModel_step+0x4b0>)
 8001ee0:	e9c7 2304 	strd	r2, r3, [r7, #16]
 8001ee4:	e043      	b.n	8001f6e <EngTrModel_step+0x4be>
  } else if (EngTrModel_B.VehicleSpeed == 0.0) {
 8001ee6:	4b11      	ldr	r3, [pc, #68]	; (8001f2c <EngTrModel_step+0x47c>)
 8001ee8:	e9d3 0102 	ldrd	r0, r1, [r3, #8]
 8001eec:	f04f 0200 	mov.w	r2, #0
 8001ef0:	f04f 0300 	mov.w	r3, #0
 8001ef4:	f7fe fd68 	bl	80009c8 <__aeabi_dcmpeq>
 8001ef8:	4603      	mov	r3, r0
 8001efa:	2b00      	cmp	r3, #0
 8001efc:	d032      	beq.n	8001f64 <EngTrModel_step+0x4b4>
    InterpDown = 0.0;
 8001efe:	f04f 0200 	mov.w	r2, #0
 8001f02:	f04f 0300 	mov.w	r3, #0
 8001f06:	e9c7 2304 	strd	r2, r3, [r7, #16]
 8001f0a:	e030      	b.n	8001f6e <EngTrModel_step+0x4be>
 8001f0c:	f3af 8000 	nop.w
 8001f10:	3d70a3d7 	.word	0x3d70a3d7
 8001f14:	4009d70a 	.word	0x4009d70a
 8001f18:	0865b653 	.word	0x0865b653
 8001f1c:	4046bc6f 	.word	0x4046bc6f
 8001f20:	47ae147b 	.word	0x47ae147b
 8001f24:	3fa47ae1 	.word	0x3fa47ae1
 8001f28:	20000250 	.word	0x20000250
 8001f2c:	20000220 	.word	0x20000220
 8001f30:	08008ec0 	.word	0x08008ec0
 8001f34:	08008998 	.word	0x08008998
 8001f38:	08008ee0 	.word	0x08008ee0
 8001f3c:	08008f88 	.word	0x08008f88
 8001f40:	08009030 	.word	0x08009030
 8001f44:	20000288 	.word	0x20000288
 8001f48:	20000278 	.word	0x20000278
 8001f4c:	080090e0 	.word	0x080090e0
 8001f50:	08008aa8 	.word	0x08008aa8
 8001f54:	08008e68 	.word	0x08008e68
 8001f58:	08008e18 	.word	0x08008e18
 8001f5c:	bff00000 	.word	0xbff00000
 8001f60:	3ff00000 	.word	0x3ff00000
  } else {
    InterpDown = (rtNaN);
 8001f64:	4b3a      	ldr	r3, [pc, #232]	; (8002050 <EngTrModel_step+0x5a0>)
 8001f66:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001f6a:	e9c7 2304 	strd	r2, r3, [r7, #16]
   *  Inport: '<Root>/Brake'
   *  Product: '<S4>/SignedLoad'
   *  Sum: '<S4>/Sum'
   *  Sum: '<S4>/Sum1'
   */
  EngTrModel_DW.WheelSpeed_DSTATE += (3.23 * EngTrModel_B.OutputTorque - ((0.02 *
 8001f6e:	4b39      	ldr	r3, [pc, #228]	; (8002054 <EngTrModel_step+0x5a4>)
 8001f70:	e9d3 0108 	ldrd	r0, r1, [r3, #32]
 8001f74:	a32e      	add	r3, pc, #184	; (adr r3, 8002030 <EngTrModel_step+0x580>)
 8001f76:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001f7a:	f7fe fabd 	bl	80004f8 <__aeabi_dmul>
 8001f7e:	4602      	mov	r2, r0
 8001f80:	460b      	mov	r3, r1
 8001f82:	4614      	mov	r4, r2
 8001f84:	461d      	mov	r5, r3
    rt_powd_snf(EngTrModel_B.VehicleSpeed, 2.0) + 40.0) +
 8001f86:	4b33      	ldr	r3, [pc, #204]	; (8002054 <EngTrModel_step+0x5a4>)
 8001f88:	e9d3 0102 	ldrd	r0, r1, [r3, #8]
 8001f8c:	f04f 0200 	mov.w	r2, #0
 8001f90:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8001f94:	f7ff fc70 	bl	8001878 <rt_powd_snf>
  EngTrModel_DW.WheelSpeed_DSTATE += (3.23 * EngTrModel_B.OutputTorque - ((0.02 *
 8001f98:	a327      	add	r3, pc, #156	; (adr r3, 8002038 <EngTrModel_step+0x588>)
 8001f9a:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001f9e:	f7fe faab 	bl	80004f8 <__aeabi_dmul>
 8001fa2:	4602      	mov	r2, r0
 8001fa4:	460b      	mov	r3, r1
 8001fa6:	4610      	mov	r0, r2
 8001fa8:	4619      	mov	r1, r3
    rt_powd_snf(EngTrModel_B.VehicleSpeed, 2.0) + 40.0) +
 8001faa:	f04f 0200 	mov.w	r2, #0
 8001fae:	4b2a      	ldr	r3, [pc, #168]	; (8002058 <EngTrModel_step+0x5a8>)
 8001fb0:	f7fe f8ec 	bl	800018c <__adddf3>
 8001fb4:	4602      	mov	r2, r0
 8001fb6:	460b      	mov	r3, r1
 8001fb8:	4610      	mov	r0, r2
 8001fba:	4619      	mov	r1, r3
    EngTrModel_U.BrakeTorque) * InterpDown) * 0.082684618362373577 * 0.04;
 8001fbc:	4b27      	ldr	r3, [pc, #156]	; (800205c <EngTrModel_step+0x5ac>)
 8001fbe:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
    rt_powd_snf(EngTrModel_B.VehicleSpeed, 2.0) + 40.0) +
 8001fc2:	f7fe f8e3 	bl	800018c <__adddf3>
 8001fc6:	4602      	mov	r2, r0
 8001fc8:	460b      	mov	r3, r1
 8001fca:	4610      	mov	r0, r2
 8001fcc:	4619      	mov	r1, r3
    EngTrModel_U.BrakeTorque) * InterpDown) * 0.082684618362373577 * 0.04;
 8001fce:	e9d7 2304 	ldrd	r2, r3, [r7, #16]
 8001fd2:	f7fe fa91 	bl	80004f8 <__aeabi_dmul>
 8001fd6:	4602      	mov	r2, r0
 8001fd8:	460b      	mov	r3, r1
  EngTrModel_DW.WheelSpeed_DSTATE += (3.23 * EngTrModel_B.OutputTorque - ((0.02 *
 8001fda:	4620      	mov	r0, r4
 8001fdc:	4629      	mov	r1, r5
 8001fde:	f7fe f8d3 	bl	8000188 <__aeabi_dsub>
 8001fe2:	4602      	mov	r2, r0
 8001fe4:	460b      	mov	r3, r1
 8001fe6:	4610      	mov	r0, r2
 8001fe8:	4619      	mov	r1, r3
    EngTrModel_U.BrakeTorque) * InterpDown) * 0.082684618362373577 * 0.04;
 8001fea:	a315      	add	r3, pc, #84	; (adr r3, 8002040 <EngTrModel_step+0x590>)
 8001fec:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001ff0:	f7fe fa82 	bl	80004f8 <__aeabi_dmul>
 8001ff4:	4602      	mov	r2, r0
 8001ff6:	460b      	mov	r3, r1
 8001ff8:	4610      	mov	r0, r2
 8001ffa:	4619      	mov	r1, r3
 8001ffc:	a312      	add	r3, pc, #72	; (adr r3, 8002048 <EngTrModel_step+0x598>)
 8001ffe:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002002:	f7fe fa79 	bl	80004f8 <__aeabi_dmul>
 8002006:	4602      	mov	r2, r0
 8002008:	460b      	mov	r3, r1
 800200a:	4610      	mov	r0, r2
 800200c:	4619      	mov	r1, r3
  EngTrModel_DW.WheelSpeed_DSTATE += (3.23 * EngTrModel_B.OutputTorque - ((0.02 *
 800200e:	4b14      	ldr	r3, [pc, #80]	; (8002060 <EngTrModel_step+0x5b0>)
 8002010:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 8002014:	f7fe f8ba 	bl	800018c <__adddf3>
 8002018:	4602      	mov	r2, r0
 800201a:	460b      	mov	r3, r1
 800201c:	4910      	ldr	r1, [pc, #64]	; (8002060 <EngTrModel_step+0x5b0>)
 800201e:	e9c1 2302 	strd	r2, r3, [r1, #8]
}
 8002022:	bf00      	nop
 8002024:	3718      	adds	r7, #24
 8002026:	46bd      	mov	sp, r7
 8002028:	bdb0      	pop	{r4, r5, r7, pc}
 800202a:	bf00      	nop
 800202c:	f3af 8000 	nop.w
 8002030:	3d70a3d7 	.word	0x3d70a3d7
 8002034:	4009d70a 	.word	0x4009d70a
 8002038:	47ae147b 	.word	0x47ae147b
 800203c:	3f947ae1 	.word	0x3f947ae1
 8002040:	b3bfa695 	.word	0xb3bfa695
 8002044:	3fb52ad1 	.word	0x3fb52ad1
 8002048:	47ae147b 	.word	0x47ae147b
 800204c:	3fa47ae1 	.word	0x3fa47ae1
 8002050:	200002f0 	.word	0x200002f0
 8002054:	20000220 	.word	0x20000220
 8002058:	40440000 	.word	0x40440000
 800205c:	20000278 	.word	0x20000278
 8002060:	20000250 	.word	0x20000250

08002064 <EngTrModel_initialize>:

/* Model initialize function */
void EngTrModel_initialize(void)
{
 8002064:	b580      	push	{r7, lr}
 8002066:	af00      	add	r7, sp, #0
  /* Registration code */

  /* initialize non-finites */
  rt_InitInfAndNaN(sizeof(real_T));
 8002068:	2008      	movs	r0, #8
 800206a:	f000 fdef 	bl	8002c4c <rt_InitInfAndNaN>
}
 800206e:	bf00      	nop
 8002070:	bd80      	pop	{r7, pc}
	...

08002074 <LCD_Init>:
		{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 }
};

// Function that initializes the LCD to 4 bits

void LCD_Init(void){
 8002074:	b580      	push	{r7, lr}
 8002076:	b082      	sub	sp, #8
 8002078:	af00      	add	r7, sp, #0

	int8_t const *p;

	// Configuration of all pins to the LCD as general-purpose output push-pull, 10 MHz speed

	GPIOC->CRL	&=	~( 0x3UL << 30U ) & ~( 0x2UL << 28U )
 800207a:	4b62      	ldr	r3, [pc, #392]	; (8002204 <LCD_Init+0x190>)
 800207c:	681b      	ldr	r3, [r3, #0]
 800207e:	4a61      	ldr	r2, [pc, #388]	; (8002204 <LCD_Init+0x190>)
 8002080:	f023 436e 	bic.w	r3, r3, #3992977408	; 0xee000000
 8002084:	6013      	str	r3, [r2, #0]
			& 	~( 0x3UL << 26U ) & ~( 0x2UL << 24U );
	GPIOC->CRL 	|= 	 ( 0x1UL << 28U )
 8002086:	4b5f      	ldr	r3, [pc, #380]	; (8002204 <LCD_Init+0x190>)
 8002088:	681b      	ldr	r3, [r3, #0]
 800208a:	4a5e      	ldr	r2, [pc, #376]	; (8002204 <LCD_Init+0x190>)
 800208c:	f043 5388 	orr.w	r3, r3, #285212672	; 0x11000000
 8002090:	6013      	str	r3, [r2, #0]
			|  	 ( 0x1UL << 24U );
	GPIOC->CRH	&=	~( 0x3UL << 18U ) & ~( 0x2UL << 16U )
 8002092:	4b5c      	ldr	r3, [pc, #368]	; (8002204 <LCD_Init+0x190>)
 8002094:	685a      	ldr	r2, [r3, #4]
 8002096:	495b      	ldr	r1, [pc, #364]	; (8002204 <LCD_Init+0x190>)
 8002098:	4b5b      	ldr	r3, [pc, #364]	; (8002208 <LCD_Init+0x194>)
 800209a:	4013      	ands	r3, r2
 800209c:	604b      	str	r3, [r1, #4]
			& 	~( 0x3UL << 14U ) & ~( 0x2UL << 12U )
			&	~( 0x3UL << 10U ) & ~( 0x2UL <<  8U )
			& 	~( 0x3UL <<  6U ) & ~( 0x2UL <<  4U )
			& 	~( 0x3UL <<  2U ) & ~( 0x2UL <<  0U );
	GPIOC->CRH	|= 	 ( 0x1UL << 16U )
 800209e:	4b59      	ldr	r3, [pc, #356]	; (8002204 <LCD_Init+0x190>)
 80020a0:	685a      	ldr	r2, [r3, #4]
 80020a2:	4958      	ldr	r1, [pc, #352]	; (8002204 <LCD_Init+0x190>)
 80020a4:	4b59      	ldr	r3, [pc, #356]	; (800220c <LCD_Init+0x198>)
 80020a6:	4313      	orrs	r3, r2
 80020a8:	604b      	str	r3, [r1, #4]
	* LCD Initialization
	* https://web.alfredstate.edu/faculty/weimandn/lcd/lcd_initialization/lcd_initialization_index.html
	* Power ON
	*/

	GPIOC->BSRR	 =	 LCD_RS_PIN_LOW;
 80020aa:	4b56      	ldr	r3, [pc, #344]	; (8002204 <LCD_Init+0x190>)
 80020ac:	f44f 0280 	mov.w	r2, #4194304	; 0x400000
 80020b0:	611a      	str	r2, [r3, #16]
	GPIOC->BSRR	 =	 LCD_RW_PIN_LOW;
 80020b2:	4b54      	ldr	r3, [pc, #336]	; (8002204 <LCD_Init+0x190>)
 80020b4:	f44f 0200 	mov.w	r2, #8388608	; 0x800000
 80020b8:	611a      	str	r2, [r3, #16]
	GPIOC->BSRR	 =	 LCD_EN_PIN_LOW;
 80020ba:	4b52      	ldr	r3, [pc, #328]	; (8002204 <LCD_Init+0x190>)
 80020bc:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
 80020c0:	611a      	str	r2, [r3, #16]
	GPIOC->BSRR	 =	 LCD_D4_PIN_LOW;
 80020c2:	4b50      	ldr	r3, [pc, #320]	; (8002204 <LCD_Init+0x190>)
 80020c4:	f04f 7200 	mov.w	r2, #33554432	; 0x2000000
 80020c8:	611a      	str	r2, [r3, #16]
	GPIOC->BSRR	 =	 LCD_D5_PIN_LOW;
 80020ca:	4b4e      	ldr	r3, [pc, #312]	; (8002204 <LCD_Init+0x190>)
 80020cc:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 80020d0:	611a      	str	r2, [r3, #16]
	GPIOC->BSRR	 =	 LCD_D6_PIN_LOW;
 80020d2:	4b4c      	ldr	r3, [pc, #304]	; (8002204 <LCD_Init+0x190>)
 80020d4:	f04f 6200 	mov.w	r2, #134217728	; 0x8000000
 80020d8:	611a      	str	r2, [r3, #16]
	GPIOC->BSRR	 =	 LCD_D7_PIN_LOW;
 80020da:	4b4a      	ldr	r3, [pc, #296]	; (8002204 <LCD_Init+0x190>)
 80020dc:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 80020e0:	611a      	str	r2, [r3, #16]

	USER_TIM2_Delay(TIM_PSC_50MS, TIM_CNT_50MS);		//	50 ms
 80020e2:	21e6      	movs	r1, #230	; 0xe6
 80020e4:	2030      	movs	r0, #48	; 0x30
 80020e6:	f000 ff5b 	bl	8002fa0 <USER_TIM2_Delay>

	/* Special case of 'Function Set'	*/

	GPIOC->BSRR	 =	 LCD_D4_PIN_HIGH;
 80020ea:	4b46      	ldr	r3, [pc, #280]	; (8002204 <LCD_Init+0x190>)
 80020ec:	f44f 7200 	mov.w	r2, #512	; 0x200
 80020f0:	611a      	str	r2, [r3, #16]
	GPIOC->BSRR	 =	 LCD_D5_PIN_HIGH;
 80020f2:	4b44      	ldr	r3, [pc, #272]	; (8002204 <LCD_Init+0x190>)
 80020f4:	f44f 6280 	mov.w	r2, #1024	; 0x400
 80020f8:	611a      	str	r2, [r3, #16]
	GPIOC->BSRR	 =	 LCD_D6_PIN_LOW;
 80020fa:	4b42      	ldr	r3, [pc, #264]	; (8002204 <LCD_Init+0x190>)
 80020fc:	f04f 6200 	mov.w	r2, #134217728	; 0x8000000
 8002100:	611a      	str	r2, [r3, #16]
	GPIOC->BSRR	 =	 LCD_D7_PIN_LOW;
 8002102:	4b40      	ldr	r3, [pc, #256]	; (8002204 <LCD_Init+0x190>)
 8002104:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8002108:	611a      	str	r2, [r3, #16]
	LCD_Pulse_EN( );
 800210a:	f000 f9a3 	bl	8002454 <LCD_Pulse_EN>

	USER_TIM2_Delay(TIM_PSC_5MS, TIM_CNT_5MS);		//	5 ms
 800210e:	f44f 61c0 	mov.w	r1, #1536	; 0x600
 8002112:	2004      	movs	r0, #4
 8002114:	f000 ff44 	bl	8002fa0 <USER_TIM2_Delay>

	/* Special case of 'Function Set'	*/

	GPIOC->BSRR	 =	 LCD_D4_PIN_HIGH;
 8002118:	4b3a      	ldr	r3, [pc, #232]	; (8002204 <LCD_Init+0x190>)
 800211a:	f44f 7200 	mov.w	r2, #512	; 0x200
 800211e:	611a      	str	r2, [r3, #16]
	GPIOC->BSRR	 =	 LCD_D5_PIN_HIGH;
 8002120:	4b38      	ldr	r3, [pc, #224]	; (8002204 <LCD_Init+0x190>)
 8002122:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8002126:	611a      	str	r2, [r3, #16]
	GPIOC->BSRR	 =	 LCD_D6_PIN_LOW;
 8002128:	4b36      	ldr	r3, [pc, #216]	; (8002204 <LCD_Init+0x190>)
 800212a:	f04f 6200 	mov.w	r2, #134217728	; 0x8000000
 800212e:	611a      	str	r2, [r3, #16]
	GPIOC->BSRR	 =	 LCD_D7_PIN_LOW;
 8002130:	4b34      	ldr	r3, [pc, #208]	; (8002204 <LCD_Init+0x190>)
 8002132:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8002136:	611a      	str	r2, [r3, #16]
	LCD_Pulse_EN( );
 8002138:	f000 f98c 	bl	8002454 <LCD_Pulse_EN>

	USER_TIM2_Delay(TIM_PSC_100US, TIM_CNT_100US);		//	100 us
 800213c:	f44f 4167 	mov.w	r1, #59136	; 0xe700
 8002140:	2000      	movs	r0, #0
 8002142:	f000 ff2d 	bl	8002fa0 <USER_TIM2_Delay>

	/* Special case of 'Function Set'	*/

	GPIOC->BSRR	 =	 LCD_D4_PIN_HIGH;
 8002146:	4b2f      	ldr	r3, [pc, #188]	; (8002204 <LCD_Init+0x190>)
 8002148:	f44f 7200 	mov.w	r2, #512	; 0x200
 800214c:	611a      	str	r2, [r3, #16]
	GPIOC->BSRR	 =	 LCD_D5_PIN_HIGH;
 800214e:	4b2d      	ldr	r3, [pc, #180]	; (8002204 <LCD_Init+0x190>)
 8002150:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8002154:	611a      	str	r2, [r3, #16]
	GPIOC->BSRR	 =	 LCD_D6_PIN_LOW;
 8002156:	4b2b      	ldr	r3, [pc, #172]	; (8002204 <LCD_Init+0x190>)
 8002158:	f04f 6200 	mov.w	r2, #134217728	; 0x8000000
 800215c:	611a      	str	r2, [r3, #16]
	GPIOC->BSRR	 =	 LCD_D7_PIN_LOW;
 800215e:	4b29      	ldr	r3, [pc, #164]	; (8002204 <LCD_Init+0x190>)
 8002160:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8002164:	611a      	str	r2, [r3, #16]
	LCD_Pulse_EN( );
 8002166:	f000 f975 	bl	8002454 <LCD_Pulse_EN>
	while( LCD_Busy( ) );					//	Checking the busy flag
 800216a:	bf00      	nop
 800216c:	f000 f91e 	bl	80023ac <LCD_Busy>
 8002170:	4603      	mov	r3, r0
 8002172:	2b00      	cmp	r3, #0
 8002174:	d1fa      	bne.n	800216c <LCD_Init+0xf8>

	/* Initial 'Function Set' to change 4-bit mode	*/

	GPIOC->BSRR	 =	 LCD_D4_PIN_LOW;
 8002176:	4b23      	ldr	r3, [pc, #140]	; (8002204 <LCD_Init+0x190>)
 8002178:	f04f 7200 	mov.w	r2, #33554432	; 0x2000000
 800217c:	611a      	str	r2, [r3, #16]
	GPIOC->BSRR	 =	 LCD_D5_PIN_HIGH;
 800217e:	4b21      	ldr	r3, [pc, #132]	; (8002204 <LCD_Init+0x190>)
 8002180:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8002184:	611a      	str	r2, [r3, #16]
	GPIOC->BSRR	 =	 LCD_D6_PIN_LOW;
 8002186:	4b1f      	ldr	r3, [pc, #124]	; (8002204 <LCD_Init+0x190>)
 8002188:	f04f 6200 	mov.w	r2, #134217728	; 0x8000000
 800218c:	611a      	str	r2, [r3, #16]
	GPIOC->BSRR	 =	 LCD_D7_PIN_LOW;
 800218e:	4b1d      	ldr	r3, [pc, #116]	; (8002204 <LCD_Init+0x190>)
 8002190:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8002194:	611a      	str	r2, [r3, #16]
	LCD_Pulse_EN( );
 8002196:	f000 f95d 	bl	8002454 <LCD_Pulse_EN>
	while( LCD_Busy( ) );					//	Checking the busy flag
 800219a:	bf00      	nop
 800219c:	f000 f906 	bl	80023ac <LCD_Busy>
 80021a0:	4603      	mov	r3, r0
 80021a2:	2b00      	cmp	r3, #0
 80021a4:	d1fa      	bne.n	800219c <LCD_Init+0x128>

	/* 'Function Set' (I=1, N and F as required)	*/

	LCD_Write_Cmd( 0x28U );					//	2-line display, 5x7 dot
 80021a6:	2028      	movs	r0, #40	; 0x28
 80021a8:	f000 f89a 	bl	80022e0 <LCD_Write_Cmd>

	/* 'Display ON/OFF Control' (D=0, C=0, B=0)	*/

	LCD_Write_Cmd( 0x08U );					//	Display, cursor and blinking off
 80021ac:	2008      	movs	r0, #8
 80021ae:	f000 f897 	bl	80022e0 <LCD_Write_Cmd>

	/* 'Clear Display' */

	LCD_Write_Cmd( 0x01U );//
 80021b2:	2001      	movs	r0, #1
 80021b4:	f000 f894 	bl	80022e0 <LCD_Write_Cmd>

	/* 'Entry Mode Set' (I/D and S as required)	*/

	LCD_Write_Cmd( 0x06U );					//	Cursor increment by 1, shift off
 80021b8:	2006      	movs	r0, #6
 80021ba:	f000 f891 	bl	80022e0 <LCD_Write_Cmd>

	/* Initialization Ends	*/

	LCD_Write_Cmd( 0x0FU );					//	Display, cursor and blinking on
 80021be:	200f      	movs	r0, #15
 80021c0:	f000 f88e 	bl	80022e0 <LCD_Write_Cmd>

	//	Load the character defined by the user into the CGRAM

	LCD_Write_Cmd( 0x40 );					//	Set the CGRAM address to 0
 80021c4:	2040      	movs	r0, #64	; 0x40
 80021c6:	f000 f88b 	bl	80022e0 <LCD_Write_Cmd>
	p = &UserFont[0][0];
 80021ca:	4b11      	ldr	r3, [pc, #68]	; (8002210 <LCD_Init+0x19c>)
 80021cc:	607b      	str	r3, [r7, #4]

	for( int i = 0; i < sizeof( UserFont ); i++, p++ )
 80021ce:	2300      	movs	r3, #0
 80021d0:	603b      	str	r3, [r7, #0]
 80021d2:	e00c      	b.n	80021ee <LCD_Init+0x17a>
		LCD_Put_Char( *p );
 80021d4:	687b      	ldr	r3, [r7, #4]
 80021d6:	f993 3000 	ldrsb.w	r3, [r3]
 80021da:	b2db      	uxtb	r3, r3
 80021dc:	4618      	mov	r0, r3
 80021de:	f000 f893 	bl	8002308 <LCD_Put_Char>
	for( int i = 0; i < sizeof( UserFont ); i++, p++ )
 80021e2:	683b      	ldr	r3, [r7, #0]
 80021e4:	3301      	adds	r3, #1
 80021e6:	603b      	str	r3, [r7, #0]
 80021e8:	687b      	ldr	r3, [r7, #4]
 80021ea:	3301      	adds	r3, #1
 80021ec:	607b      	str	r3, [r7, #4]
 80021ee:	683b      	ldr	r3, [r7, #0]
 80021f0:	2b3f      	cmp	r3, #63	; 0x3f
 80021f2:	d9ef      	bls.n	80021d4 <LCD_Init+0x160>

	/*	Set DDRAM address in address	*/

	LCD_Write_Cmd( 0x80 );//
 80021f4:	2080      	movs	r0, #128	; 0x80
 80021f6:	f000 f873 	bl	80022e0 <LCD_Write_Cmd>
}
 80021fa:	bf00      	nop
 80021fc:	3708      	adds	r7, #8
 80021fe:	46bd      	mov	sp, r7
 8002200:	bd80      	pop	{r7, pc}
 8002202:	bf00      	nop
 8002204:	40011000 	.word	0x40011000
 8002208:	fff11111 	.word	0xfff11111
 800220c:	00011111 	.word	0x00011111
 8002210:	080090e8 	.word	0x080090e8

08002214 <LCD_Out_Data4>:

// Function that generates a strobe on the LCD

void LCD_Out_Data4(uint8_t val)
{
 8002214:	b480      	push	{r7}
 8002216:	b083      	sub	sp, #12
 8002218:	af00      	add	r7, sp, #0
 800221a:	4603      	mov	r3, r0
 800221c:	71fb      	strb	r3, [r7, #7]
	if( ( val & 0x01U ) == 0x01U )				//	Bit[0]
 800221e:	79fb      	ldrb	r3, [r7, #7]
 8002220:	f003 0301 	and.w	r3, r3, #1
 8002224:	2b00      	cmp	r3, #0
 8002226:	d004      	beq.n	8002232 <LCD_Out_Data4+0x1e>
		GPIOC->BSRR	=	LCD_D4_PIN_HIGH;
 8002228:	4b1b      	ldr	r3, [pc, #108]	; (8002298 <LCD_Out_Data4+0x84>)
 800222a:	f44f 7200 	mov.w	r2, #512	; 0x200
 800222e:	611a      	str	r2, [r3, #16]
 8002230:	e003      	b.n	800223a <LCD_Out_Data4+0x26>
	else
		GPIOC->BSRR	=	LCD_D4_PIN_LOW;
 8002232:	4b19      	ldr	r3, [pc, #100]	; (8002298 <LCD_Out_Data4+0x84>)
 8002234:	f04f 7200 	mov.w	r2, #33554432	; 0x2000000
 8002238:	611a      	str	r2, [r3, #16]

	if( ( val & 0x02U ) == 0x02U )				//	Bit[1]
 800223a:	79fb      	ldrb	r3, [r7, #7]
 800223c:	f003 0302 	and.w	r3, r3, #2
 8002240:	2b00      	cmp	r3, #0
 8002242:	d004      	beq.n	800224e <LCD_Out_Data4+0x3a>
		GPIOC->BSRR	=	LCD_D5_PIN_HIGH;
 8002244:	4b14      	ldr	r3, [pc, #80]	; (8002298 <LCD_Out_Data4+0x84>)
 8002246:	f44f 6280 	mov.w	r2, #1024	; 0x400
 800224a:	611a      	str	r2, [r3, #16]
 800224c:	e003      	b.n	8002256 <LCD_Out_Data4+0x42>
	else
		GPIOC->BSRR	=	LCD_D5_PIN_LOW;
 800224e:	4b12      	ldr	r3, [pc, #72]	; (8002298 <LCD_Out_Data4+0x84>)
 8002250:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 8002254:	611a      	str	r2, [r3, #16]

	if( ( val & 0x04U ) == 0x04U )				//	Bit[2]
 8002256:	79fb      	ldrb	r3, [r7, #7]
 8002258:	f003 0304 	and.w	r3, r3, #4
 800225c:	2b00      	cmp	r3, #0
 800225e:	d004      	beq.n	800226a <LCD_Out_Data4+0x56>
		GPIOC->BSRR	=	LCD_D6_PIN_HIGH;
 8002260:	4b0d      	ldr	r3, [pc, #52]	; (8002298 <LCD_Out_Data4+0x84>)
 8002262:	f44f 6200 	mov.w	r2, #2048	; 0x800
 8002266:	611a      	str	r2, [r3, #16]
 8002268:	e003      	b.n	8002272 <LCD_Out_Data4+0x5e>
	else
		GPIOC->BSRR	=	LCD_D6_PIN_LOW;
 800226a:	4b0b      	ldr	r3, [pc, #44]	; (8002298 <LCD_Out_Data4+0x84>)
 800226c:	f04f 6200 	mov.w	r2, #134217728	; 0x8000000
 8002270:	611a      	str	r2, [r3, #16]

	if( ( val & 0x08U ) == 0x08U )				//	Bit[3]
 8002272:	79fb      	ldrb	r3, [r7, #7]
 8002274:	f003 0308 	and.w	r3, r3, #8
 8002278:	2b00      	cmp	r3, #0
 800227a:	d004      	beq.n	8002286 <LCD_Out_Data4+0x72>
		GPIOC->BSRR	=	LCD_D7_PIN_HIGH;
 800227c:	4b06      	ldr	r3, [pc, #24]	; (8002298 <LCD_Out_Data4+0x84>)
 800227e:	f44f 5280 	mov.w	r2, #4096	; 0x1000
 8002282:	611a      	str	r2, [r3, #16]
	else
		GPIOC->BSRR	=	LCD_D7_PIN_LOW;
}
 8002284:	e003      	b.n	800228e <LCD_Out_Data4+0x7a>
		GPIOC->BSRR	=	LCD_D7_PIN_LOW;
 8002286:	4b04      	ldr	r3, [pc, #16]	; (8002298 <LCD_Out_Data4+0x84>)
 8002288:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800228c:	611a      	str	r2, [r3, #16]
}
 800228e:	bf00      	nop
 8002290:	370c      	adds	r7, #12
 8002292:	46bd      	mov	sp, r7
 8002294:	bc80      	pop	{r7}
 8002296:	4770      	bx	lr
 8002298:	40011000 	.word	0x40011000

0800229c <LCD_Write_Byte>:

// Function that writes 1 byte of data to the LCD

void LCD_Write_Byte(uint8_t val)
{
 800229c:	b580      	push	{r7, lr}
 800229e:	b082      	sub	sp, #8
 80022a0:	af00      	add	r7, sp, #0
 80022a2:	4603      	mov	r3, r0
 80022a4:	71fb      	strb	r3, [r7, #7]
	LCD_Out_Data4( ( val >> 4 ) & 0x0FU );
 80022a6:	79fb      	ldrb	r3, [r7, #7]
 80022a8:	091b      	lsrs	r3, r3, #4
 80022aa:	b2db      	uxtb	r3, r3
 80022ac:	4618      	mov	r0, r3
 80022ae:	f7ff ffb1 	bl	8002214 <LCD_Out_Data4>
	LCD_Pulse_EN( );
 80022b2:	f000 f8cf 	bl	8002454 <LCD_Pulse_EN>
	LCD_Out_Data4( val & 0x0FU );
 80022b6:	79fb      	ldrb	r3, [r7, #7]
 80022b8:	f003 030f 	and.w	r3, r3, #15
 80022bc:	b2db      	uxtb	r3, r3
 80022be:	4618      	mov	r0, r3
 80022c0:	f7ff ffa8 	bl	8002214 <LCD_Out_Data4>
	LCD_Pulse_EN( );
 80022c4:	f000 f8c6 	bl	8002454 <LCD_Pulse_EN>
	while( LCD_Busy( ) );
 80022c8:	bf00      	nop
 80022ca:	f000 f86f 	bl	80023ac <LCD_Busy>
 80022ce:	4603      	mov	r3, r0
 80022d0:	2b00      	cmp	r3, #0
 80022d2:	d1fa      	bne.n	80022ca <LCD_Write_Byte+0x2e>
}
 80022d4:	bf00      	nop
 80022d6:	bf00      	nop
 80022d8:	3708      	adds	r7, #8
 80022da:	46bd      	mov	sp, r7
 80022dc:	bd80      	pop	{r7, pc}
	...

080022e0 <LCD_Write_Cmd>:

// Function that writes a command to the LCD

void LCD_Write_Cmd( uint8_t val )
{
 80022e0:	b580      	push	{r7, lr}
 80022e2:	b082      	sub	sp, #8
 80022e4:	af00      	add	r7, sp, #0
 80022e6:	4603      	mov	r3, r0
 80022e8:	71fb      	strb	r3, [r7, #7]
	GPIOC->BSRR	=	LCD_RS_PIN_LOW;			//	RS=0 (character selection)
 80022ea:	4b06      	ldr	r3, [pc, #24]	; (8002304 <LCD_Write_Cmd+0x24>)
 80022ec:	f44f 0280 	mov.w	r2, #4194304	; 0x400000
 80022f0:	611a      	str	r2, [r3, #16]
	LCD_Write_Byte( val );
 80022f2:	79fb      	ldrb	r3, [r7, #7]
 80022f4:	4618      	mov	r0, r3
 80022f6:	f7ff ffd1 	bl	800229c <LCD_Write_Byte>
}
 80022fa:	bf00      	nop
 80022fc:	3708      	adds	r7, #8
 80022fe:	46bd      	mov	sp, r7
 8002300:	bd80      	pop	{r7, pc}
 8002302:	bf00      	nop
 8002304:	40011000 	.word	0x40011000

08002308 <LCD_Put_Char>:

// Write an ASCII character to the LCD

void LCD_Put_Char( uint8_t c )
{
 8002308:	b580      	push	{r7, lr}
 800230a:	b082      	sub	sp, #8
 800230c:	af00      	add	r7, sp, #0
 800230e:	4603      	mov	r3, r0
 8002310:	71fb      	strb	r3, [r7, #7]
	GPIOC->BSRR	=	LCD_RS_PIN_HIGH;		//	RS=1 (character selection)
 8002312:	4b05      	ldr	r3, [pc, #20]	; (8002328 <LCD_Put_Char+0x20>)
 8002314:	2240      	movs	r2, #64	; 0x40
 8002316:	611a      	str	r2, [r3, #16]
	LCD_Write_Byte( c );
 8002318:	79fb      	ldrb	r3, [r7, #7]
 800231a:	4618      	mov	r0, r3
 800231c:	f7ff ffbe 	bl	800229c <LCD_Write_Byte>
}
 8002320:	bf00      	nop
 8002322:	3708      	adds	r7, #8
 8002324:	46bd      	mov	sp, r7
 8002326:	bd80      	pop	{r7, pc}
 8002328:	40011000 	.word	0x40011000

0800232c <LCD_Set_Cursor>:

// Function that sets the cursor to a position on the LCD screen
// Minimum values for line and column must be 1

void LCD_Set_Cursor( uint8_t line, uint8_t column )
{
 800232c:	b580      	push	{r7, lr}
 800232e:	b084      	sub	sp, #16
 8002330:	af00      	add	r7, sp, #0
 8002332:	4603      	mov	r3, r0
 8002334:	460a      	mov	r2, r1
 8002336:	71fb      	strb	r3, [r7, #7]
 8002338:	4613      	mov	r3, r2
 800233a:	71bb      	strb	r3, [r7, #6]
	uint8_t address;
	column--;
 800233c:	79bb      	ldrb	r3, [r7, #6]
 800233e:	3b01      	subs	r3, #1
 8002340:	71bb      	strb	r3, [r7, #6]
	line--;
 8002342:	79fb      	ldrb	r3, [r7, #7]
 8002344:	3b01      	subs	r3, #1
 8002346:	71fb      	strb	r3, [r7, #7]
	address = ( line * 0x40U ) + column;
 8002348:	79fb      	ldrb	r3, [r7, #7]
 800234a:	019b      	lsls	r3, r3, #6
 800234c:	b2da      	uxtb	r2, r3
 800234e:	79bb      	ldrb	r3, [r7, #6]
 8002350:	4413      	add	r3, r2
 8002352:	73fb      	strb	r3, [r7, #15]
	address = 0x80U + ( address & 0x7FU );
 8002354:	7bfb      	ldrb	r3, [r7, #15]
 8002356:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 800235a:	b2db      	uxtb	r3, r3
 800235c:	3b80      	subs	r3, #128	; 0x80
 800235e:	73fb      	strb	r3, [r7, #15]
	LCD_Write_Cmd( address );
 8002360:	7bfb      	ldrb	r3, [r7, #15]
 8002362:	4618      	mov	r0, r3
 8002364:	f7ff ffbc 	bl	80022e0 <LCD_Write_Cmd>
}
 8002368:	bf00      	nop
 800236a:	3710      	adds	r7, #16
 800236c:	46bd      	mov	sp, r7
 800236e:	bd80      	pop	{r7, pc}

08002370 <LCD_Put_Str>:

// Function that sends a string of ASCII characters to the LCD

void LCD_Put_Str( char * str )
{
 8002370:	b580      	push	{r7, lr}
 8002372:	b084      	sub	sp, #16
 8002374:	af00      	add	r7, sp, #0
 8002376:	6078      	str	r0, [r7, #4]
	for( int16_t i = 0; i < 16; i++ )
 8002378:	2300      	movs	r3, #0
 800237a:	81fb      	strh	r3, [r7, #14]
 800237c:	e00d      	b.n	800239a <LCD_Put_Str+0x2a>
		LCD_Put_Char( str[ i ] );			//	Send 1 byte to the LCD
 800237e:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 8002382:	687a      	ldr	r2, [r7, #4]
 8002384:	4413      	add	r3, r2
 8002386:	781b      	ldrb	r3, [r3, #0]
 8002388:	4618      	mov	r0, r3
 800238a:	f7ff ffbd 	bl	8002308 <LCD_Put_Char>
	for( int16_t i = 0; i < 16; i++ )
 800238e:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 8002392:	b29b      	uxth	r3, r3
 8002394:	3301      	adds	r3, #1
 8002396:	b29b      	uxth	r3, r3
 8002398:	81fb      	strh	r3, [r7, #14]
 800239a:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 800239e:	2b0f      	cmp	r3, #15
 80023a0:	dded      	ble.n	800237e <LCD_Put_Str+0xe>
}
 80023a2:	bf00      	nop
 80023a4:	bf00      	nop
 80023a6:	3710      	adds	r7, #16
 80023a8:	46bd      	mov	sp, r7
 80023aa:	bd80      	pop	{r7, pc}

080023ac <LCD_Busy>:
}

// Function that causes delays on the LCD

char LCD_Busy( void )
{
 80023ac:	b580      	push	{r7, lr}
 80023ae:	af00      	add	r7, sp, #0
	// Configuration of D7 as input floating

	GPIOC->CRH	&=	~( 0x2UL << 18U ) & ~( 0x3UL << 16U );
 80023b0:	4b27      	ldr	r3, [pc, #156]	; (8002450 <LCD_Busy+0xa4>)
 80023b2:	685b      	ldr	r3, [r3, #4]
 80023b4:	4a26      	ldr	r2, [pc, #152]	; (8002450 <LCD_Busy+0xa4>)
 80023b6:	f423 2330 	bic.w	r3, r3, #720896	; 0xb0000
 80023ba:	6053      	str	r3, [r2, #4]
	GPIOC->CRH	|=   	 ( 0x1UL << 18U );
 80023bc:	4b24      	ldr	r3, [pc, #144]	; (8002450 <LCD_Busy+0xa4>)
 80023be:	685b      	ldr	r3, [r3, #4]
 80023c0:	4a23      	ldr	r2, [pc, #140]	; (8002450 <LCD_Busy+0xa4>)
 80023c2:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 80023c6:	6053      	str	r3, [r2, #4]
	GPIOC->BSRR	 =	 LCD_RS_PIN_LOW;
 80023c8:	4b21      	ldr	r3, [pc, #132]	; (8002450 <LCD_Busy+0xa4>)
 80023ca:	f44f 0280 	mov.w	r2, #4194304	; 0x400000
 80023ce:	611a      	str	r2, [r3, #16]
	GPIOC->BSRR	 =	 LCD_RW_PIN_HIGH;
 80023d0:	4b1f      	ldr	r3, [pc, #124]	; (8002450 <LCD_Busy+0xa4>)
 80023d2:	2280      	movs	r2, #128	; 0x80
 80023d4:	611a      	str	r2, [r3, #16]
	GPIOC->BSRR	 =	 LCD_EN_PIN_HIGH;
 80023d6:	4b1e      	ldr	r3, [pc, #120]	; (8002450 <LCD_Busy+0xa4>)
 80023d8:	f44f 7280 	mov.w	r2, #256	; 0x100
 80023dc:	611a      	str	r2, [r3, #16]

	USER_TIM2_Delay(TIM_PSC_100US, TIM_CNT_100US);		//	100 us
 80023de:	f44f 4167 	mov.w	r1, #59136	; 0xe700
 80023e2:	2000      	movs	r0, #0
 80023e4:	f000 fddc 	bl	8002fa0 <USER_TIM2_Delay>

	if(( GPIOC->IDR	& LCD_D7_PIN_HIGH )) 			//	If D7 is set, then
 80023e8:	4b19      	ldr	r3, [pc, #100]	; (8002450 <LCD_Busy+0xa4>)
 80023ea:	689b      	ldr	r3, [r3, #8]
 80023ec:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 80023f0:	2b00      	cmp	r3, #0
 80023f2:	d015      	beq.n	8002420 <LCD_Busy+0x74>
	{
		GPIOC->BSRR	= 	LCD_EN_PIN_LOW;
 80023f4:	4b16      	ldr	r3, [pc, #88]	; (8002450 <LCD_Busy+0xa4>)
 80023f6:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
 80023fa:	611a      	str	r2, [r3, #16]
		GPIOC->BSRR	=	LCD_RW_PIN_LOW;
 80023fc:	4b14      	ldr	r3, [pc, #80]	; (8002450 <LCD_Busy+0xa4>)
 80023fe:	f44f 0200 	mov.w	r2, #8388608	; 0x800000
 8002402:	611a      	str	r2, [r3, #16]

	// Configuration of D7 as output push-pull, 10 MHz speed

		GPIOC->CRH	&=	~( 0x3UL << 18U ) & ~( 0x2UL << 16U );
 8002404:	4b12      	ldr	r3, [pc, #72]	; (8002450 <LCD_Busy+0xa4>)
 8002406:	685b      	ldr	r3, [r3, #4]
 8002408:	4a11      	ldr	r2, [pc, #68]	; (8002450 <LCD_Busy+0xa4>)
 800240a:	f423 2360 	bic.w	r3, r3, #917504	; 0xe0000
 800240e:	6053      	str	r3, [r2, #4]
		GPIOC->CRH	|=   	 ( 0x1UL << 16U );
 8002410:	4b0f      	ldr	r3, [pc, #60]	; (8002450 <LCD_Busy+0xa4>)
 8002412:	685b      	ldr	r3, [r3, #4]
 8002414:	4a0e      	ldr	r2, [pc, #56]	; (8002450 <LCD_Busy+0xa4>)
 8002416:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 800241a:	6053      	str	r3, [r2, #4]

		return 1;
 800241c:	2301      	movs	r3, #1
 800241e:	e014      	b.n	800244a <LCD_Busy+0x9e>
	}
	else
	{
		GPIOC->BSRR	= 	LCD_EN_PIN_LOW;
 8002420:	4b0b      	ldr	r3, [pc, #44]	; (8002450 <LCD_Busy+0xa4>)
 8002422:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
 8002426:	611a      	str	r2, [r3, #16]
		GPIOC->BSRR	=	LCD_RW_PIN_LOW;
 8002428:	4b09      	ldr	r3, [pc, #36]	; (8002450 <LCD_Busy+0xa4>)
 800242a:	f44f 0200 	mov.w	r2, #8388608	; 0x800000
 800242e:	611a      	str	r2, [r3, #16]

	// Configuration of D7 as output push-pull, 10 MHz speed

		GPIOC->CRH	&=	~( 0x3UL << 18U ) & ~( 0x2UL << 16U );
 8002430:	4b07      	ldr	r3, [pc, #28]	; (8002450 <LCD_Busy+0xa4>)
 8002432:	685b      	ldr	r3, [r3, #4]
 8002434:	4a06      	ldr	r2, [pc, #24]	; (8002450 <LCD_Busy+0xa4>)
 8002436:	f423 2360 	bic.w	r3, r3, #917504	; 0xe0000
 800243a:	6053      	str	r3, [r2, #4]
		GPIOC->CRH	|=   	 ( 0x1UL << 16U );
 800243c:	4b04      	ldr	r3, [pc, #16]	; (8002450 <LCD_Busy+0xa4>)
 800243e:	685b      	ldr	r3, [r3, #4]
 8002440:	4a03      	ldr	r2, [pc, #12]	; (8002450 <LCD_Busy+0xa4>)
 8002442:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8002446:	6053      	str	r3, [r2, #4]

		return 0;
 8002448:	2300      	movs	r3, #0
	}
}
 800244a:	4618      	mov	r0, r3
 800244c:	bd80      	pop	{r7, pc}
 800244e:	bf00      	nop
 8002450:	40011000 	.word	0x40011000

08002454 <LCD_Pulse_EN>:

// Function that generates a pulse on the EN pin of the LCD

void LCD_Pulse_EN( void )
{
 8002454:	b580      	push	{r7, lr}
 8002456:	af00      	add	r7, sp, #0
	GPIOC->BSRR	=	LCD_EN_PIN_LOW;
 8002458:	4b0e      	ldr	r3, [pc, #56]	; (8002494 <LCD_Pulse_EN+0x40>)
 800245a:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
 800245e:	611a      	str	r2, [r3, #16]

	USER_TIM2_Delay(TIM_PSC_10US, TIM_CNT_10US);		//	10 us
 8002460:	f64f 5180 	movw	r1, #64896	; 0xfd80
 8002464:	2000      	movs	r0, #0
 8002466:	f000 fd9b 	bl	8002fa0 <USER_TIM2_Delay>

	GPIOC->BSRR	=	LCD_EN_PIN_HIGH;		//	Enable pin EN ON
 800246a:	4b0a      	ldr	r3, [pc, #40]	; (8002494 <LCD_Pulse_EN+0x40>)
 800246c:	f44f 7280 	mov.w	r2, #256	; 0x100
 8002470:	611a      	str	r2, [r3, #16]

	USER_TIM2_Delay(TIM_PSC_10US, TIM_CNT_10US);		//	10 us
 8002472:	f64f 5180 	movw	r1, #64896	; 0xfd80
 8002476:	2000      	movs	r0, #0
 8002478:	f000 fd92 	bl	8002fa0 <USER_TIM2_Delay>

	GPIOC->BSRR	=	LCD_EN_PIN_LOW;			//	Enable pin EN OFF
 800247c:	4b05      	ldr	r3, [pc, #20]	; (8002494 <LCD_Pulse_EN+0x40>)
 800247e:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
 8002482:	611a      	str	r2, [r3, #16]

	USER_TIM2_Delay(TIM_PSC_1MS, TIM_CNT_1MS);		//	1 ms
 8002484:	f44f 61c0 	mov.w	r1, #1536	; 0x600
 8002488:	2000      	movs	r0, #0
 800248a:	f000 fd89 	bl	8002fa0 <USER_TIM2_Delay>
}
 800248e:	bf00      	nop
 8002490:	bd80      	pop	{r7, pc}
 8002492:	bf00      	nop
 8002494:	40011000 	.word	0x40011000

08002498 <main>:

void USER_RCC_ClockEnable( void );
void USER_GPIO_Init( void );

int main( void )
{
 8002498:	b5b0      	push	{r4, r5, r7, lr}
 800249a:	b08a      	sub	sp, #40	; 0x28
 800249c:	af04      	add	r7, sp, #16

  EngTrModel_initialize();
 800249e:	f7ff fde1 	bl	8002064 <EngTrModel_initialize>

  USER_RCC_ClockEnable();
 80024a2:	f000 f957 	bl	8002754 <USER_RCC_ClockEnable>
  USER_GPIO_Init();
 80024a6:	f000 f9c7 	bl	8002838 <USER_GPIO_Init>
  USER_TIM2_Init( );
 80024aa:	f000 fd4b 	bl	8002f44 <USER_TIM2_Init>
  USER_ADC1_Init();
 80024ae:	f7fe fe01 	bl	80010b4 <USER_ADC1_Init>
  USER_USART1_Init();
 80024b2:	f000 fdab 	bl	800300c <USER_USART1_Init>
  LCD_Init();
 80024b6:	f7ff fddd 	bl	8002074 <LCD_Init>
  for(;;)
  {

    // ADC1

    conversionData = USER_ADC1_Convert();
 80024ba:	f7fe fe41 	bl	8001140 <USER_ADC1_Convert>
 80024be:	4603      	mov	r3, r0
 80024c0:	461a      	mov	r2, r3
 80024c2:	4b93      	ldr	r3, [pc, #588]	; (8002710 <main+0x278>)
 80024c4:	801a      	strh	r2, [r3, #0]
    voltageValue = 0.00080586 * conversionData;
 80024c6:	4b92      	ldr	r3, [pc, #584]	; (8002710 <main+0x278>)
 80024c8:	881b      	ldrh	r3, [r3, #0]
 80024ca:	4618      	mov	r0, r3
 80024cc:	f7fd ffaa 	bl	8000424 <__aeabi_i2d>
 80024d0:	a38d      	add	r3, pc, #564	; (adr r3, 8002708 <main+0x270>)
 80024d2:	e9d3 2300 	ldrd	r2, r3, [r3]
 80024d6:	f7fe f80f 	bl	80004f8 <__aeabi_dmul>
 80024da:	4602      	mov	r2, r0
 80024dc:	460b      	mov	r3, r1
 80024de:	4610      	mov	r0, r2
 80024e0:	4619      	mov	r1, r3
 80024e2:	f7fe fb01 	bl	8000ae8 <__aeabi_d2f>
 80024e6:	4603      	mov	r3, r0
 80024e8:	4a8a      	ldr	r2, [pc, #552]	; (8002714 <main+0x27c>)
 80024ea:	6013      	str	r3, [r2, #0]

    // Matrix Keyboard

    selectedKey = USER_MATRIX_KEYBOARD_Read();
 80024ec:	f000 fa50 	bl	8002990 <USER_MATRIX_KEYBOARD_Read>
 80024f0:	4603      	mov	r3, r0
 80024f2:	461a      	mov	r2, r3
 80024f4:	4b88      	ldr	r3, [pc, #544]	; (8002718 <main+0x280>)
 80024f6:	701a      	strb	r2, [r3, #0]

    // printf("%f_%c\n\r", voltageValue, selectedKey); // Debug ADC1 and Matrix Keyboard

    if(selectedKey == '5')
 80024f8:	4b87      	ldr	r3, [pc, #540]	; (8002718 <main+0x280>)
 80024fa:	781b      	ldrb	r3, [r3, #0]
 80024fc:	2b35      	cmp	r3, #53	; 0x35
 80024fe:	d106      	bne.n	800250e <main+0x76>
    {
	keyBrakeTorque = 100.0;
 8002500:	4b86      	ldr	r3, [pc, #536]	; (800271c <main+0x284>)
 8002502:	4a87      	ldr	r2, [pc, #540]	; (8002720 <main+0x288>)
 8002504:	601a      	str	r2, [r3, #0]
	action = 'B';
 8002506:	4b87      	ldr	r3, [pc, #540]	; (8002724 <main+0x28c>)
 8002508:	2242      	movs	r2, #66	; 0x42
 800250a:	701a      	strb	r2, [r3, #0]
 800250c:	e025      	b.n	800255a <main+0xc2>

    }
    else if(selectedKey == '4' || selectedKey == '6')
 800250e:	4b82      	ldr	r3, [pc, #520]	; (8002718 <main+0x280>)
 8002510:	781b      	ldrb	r3, [r3, #0]
 8002512:	2b34      	cmp	r3, #52	; 0x34
 8002514:	d003      	beq.n	800251e <main+0x86>
 8002516:	4b80      	ldr	r3, [pc, #512]	; (8002718 <main+0x280>)
 8002518:	781b      	ldrb	r3, [r3, #0]
 800251a:	2b36      	cmp	r3, #54	; 0x36
 800251c:	d116      	bne.n	800254c <main+0xb4>
    {
	voltageValue -= 1;
 800251e:	4b7d      	ldr	r3, [pc, #500]	; (8002714 <main+0x27c>)
 8002520:	681b      	ldr	r3, [r3, #0]
 8002522:	f04f 517e 	mov.w	r1, #1065353216	; 0x3f800000
 8002526:	4618      	mov	r0, r3
 8002528:	f7fe fb32 	bl	8000b90 <__aeabi_fsub>
 800252c:	4603      	mov	r3, r0
 800252e:	461a      	mov	r2, r3
 8002530:	4b78      	ldr	r3, [pc, #480]	; (8002714 <main+0x27c>)
 8002532:	601a      	str	r2, [r3, #0]

	if(selectedKey == '4')
 8002534:	4b78      	ldr	r3, [pc, #480]	; (8002718 <main+0x280>)
 8002536:	781b      	ldrb	r3, [r3, #0]
 8002538:	2b34      	cmp	r3, #52	; 0x34
 800253a:	d103      	bne.n	8002544 <main+0xac>
	{
	    action = 'R';
 800253c:	4b79      	ldr	r3, [pc, #484]	; (8002724 <main+0x28c>)
 800253e:	2252      	movs	r2, #82	; 0x52
 8002540:	701a      	strb	r2, [r3, #0]
	if(selectedKey == '4')
 8002542:	e00a      	b.n	800255a <main+0xc2>
	}
	else
	{
	    action = 'L';
 8002544:	4b77      	ldr	r3, [pc, #476]	; (8002724 <main+0x28c>)
 8002546:	224c      	movs	r2, #76	; 0x4c
 8002548:	701a      	strb	r2, [r3, #0]
	if(selectedKey == '4')
 800254a:	e006      	b.n	800255a <main+0xc2>
	}
    }
    else
    {
	keyBrakeTorque = 0.0;
 800254c:	4b73      	ldr	r3, [pc, #460]	; (800271c <main+0x284>)
 800254e:	f04f 0200 	mov.w	r2, #0
 8002552:	601a      	str	r2, [r3, #0]
	action = 'N';
 8002554:	4b73      	ldr	r3, [pc, #460]	; (8002724 <main+0x28c>)
 8002556:	224e      	movs	r2, #78	; 0x4e
 8002558:	701a      	strb	r2, [r3, #0]
    }

    normalizedVoltageValue = scaleVoltageValue(voltageValue, 0, 3.3);
 800255a:	4b6e      	ldr	r3, [pc, #440]	; (8002714 <main+0x27c>)
 800255c:	681b      	ldr	r3, [r3, #0]
 800255e:	4a72      	ldr	r2, [pc, #456]	; (8002728 <main+0x290>)
 8002560:	f04f 0100 	mov.w	r1, #0
 8002564:	4618      	mov	r0, r3
 8002566:	f7fe fdfd 	bl	8001164 <scaleVoltageValue>
 800256a:	4603      	mov	r3, r0
 800256c:	4a6f      	ldr	r2, [pc, #444]	; (800272c <main+0x294>)
 800256e:	6013      	str	r3, [r2, #0]

    // printf("%f_%f\n\r", normalizedVoltageValue, keyBrakeTorque); // Debug normalizedVoltageValue and keyBrakeTorque

    // Update the values for the Throttle and Brake commands

    EngTrModel_U.Throttle = normalizedVoltageValue;
 8002570:	4b6e      	ldr	r3, [pc, #440]	; (800272c <main+0x294>)
 8002572:	681b      	ldr	r3, [r3, #0]
 8002574:	4618      	mov	r0, r3
 8002576:	f7fd ff67 	bl	8000448 <__aeabi_f2d>
 800257a:	4602      	mov	r2, r0
 800257c:	460b      	mov	r3, r1
 800257e:	496c      	ldr	r1, [pc, #432]	; (8002730 <main+0x298>)
 8002580:	e9c1 2300 	strd	r2, r3, [r1]
    EngTrModel_U.BrakeTorque = keyBrakeTorque;
 8002584:	4b65      	ldr	r3, [pc, #404]	; (800271c <main+0x284>)
 8002586:	681b      	ldr	r3, [r3, #0]
 8002588:	4618      	mov	r0, r3
 800258a:	f7fd ff5d 	bl	8000448 <__aeabi_f2d>
 800258e:	4602      	mov	r2, r0
 8002590:	460b      	mov	r3, r1
 8002592:	4967      	ldr	r1, [pc, #412]	; (8002730 <main+0x298>)
 8002594:	e9c1 2302 	strd	r2, r3, [r1, #8]

    // Update the values into the vehicle model

    EngTrModel_step();
 8002598:	f7ff fa8a 	bl	8001ab0 <EngTrModel_step>

    // Send the output values

    printf("%f,%f,%f\n\r", EngTrModel_Y.EngineSpeed, EngTrModel_Y.VehicleSpeed, EngTrModel_Y.Gear);
 800259c:	4b65      	ldr	r3, [pc, #404]	; (8002734 <main+0x29c>)
 800259e:	e9d3 4500 	ldrd	r4, r5, [r3]
 80025a2:	4b64      	ldr	r3, [pc, #400]	; (8002734 <main+0x29c>)
 80025a4:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 80025a8:	4962      	ldr	r1, [pc, #392]	; (8002734 <main+0x29c>)
 80025aa:	e9d1 0104 	ldrd	r0, r1, [r1, #16]
 80025ae:	e9cd 0102 	strd	r0, r1, [sp, #8]
 80025b2:	e9cd 2300 	strd	r2, r3, [sp]
 80025b6:	4622      	mov	r2, r4
 80025b8:	462b      	mov	r3, r5
 80025ba:	485f      	ldr	r0, [pc, #380]	; (8002738 <main+0x2a0>)
 80025bc:	f001 fccc 	bl	8003f58 <iprintf>

    USER_TIM2_Delay(TIM_PSC_40MS, TIM_CNT_40MS);		// 40 ms delay
 80025c0:	f44f 61c0 	mov.w	r1, #1536	; 0x600
 80025c4:	2027      	movs	r0, #39	; 0x27
 80025c6:	f000 fceb 	bl	8002fa0 <USER_TIM2_Delay>

    int EngineSpeedWhole = (int)(EngTrModel_Y.EngineSpeed);
 80025ca:	4b5a      	ldr	r3, [pc, #360]	; (8002734 <main+0x29c>)
 80025cc:	e9d3 2300 	ldrd	r2, r3, [r3]
 80025d0:	4610      	mov	r0, r2
 80025d2:	4619      	mov	r1, r3
 80025d4:	f7fe fa40 	bl	8000a58 <__aeabi_d2iz>
 80025d8:	4603      	mov	r3, r0
 80025da:	617b      	str	r3, [r7, #20]
    int EngineSpeedDecimal = (int)((EngTrModel_Y.EngineSpeed - EngineSpeedWhole) * 100);
 80025dc:	4b55      	ldr	r3, [pc, #340]	; (8002734 <main+0x29c>)
 80025de:	e9d3 4500 	ldrd	r4, r5, [r3]
 80025e2:	6978      	ldr	r0, [r7, #20]
 80025e4:	f7fd ff1e 	bl	8000424 <__aeabi_i2d>
 80025e8:	4602      	mov	r2, r0
 80025ea:	460b      	mov	r3, r1
 80025ec:	4620      	mov	r0, r4
 80025ee:	4629      	mov	r1, r5
 80025f0:	f7fd fdca 	bl	8000188 <__aeabi_dsub>
 80025f4:	4602      	mov	r2, r0
 80025f6:	460b      	mov	r3, r1
 80025f8:	4610      	mov	r0, r2
 80025fa:	4619      	mov	r1, r3
 80025fc:	f04f 0200 	mov.w	r2, #0
 8002600:	4b4e      	ldr	r3, [pc, #312]	; (800273c <main+0x2a4>)
 8002602:	f7fd ff79 	bl	80004f8 <__aeabi_dmul>
 8002606:	4602      	mov	r2, r0
 8002608:	460b      	mov	r3, r1
 800260a:	4610      	mov	r0, r2
 800260c:	4619      	mov	r1, r3
 800260e:	f7fe fa23 	bl	8000a58 <__aeabi_d2iz>
 8002612:	4603      	mov	r3, r0
 8002614:	613b      	str	r3, [r7, #16]

    int VehicleSpeedWhole = (int)(EngTrModel_Y.VehicleSpeed);
 8002616:	4b47      	ldr	r3, [pc, #284]	; (8002734 <main+0x29c>)
 8002618:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 800261c:	4610      	mov	r0, r2
 800261e:	4619      	mov	r1, r3
 8002620:	f7fe fa1a 	bl	8000a58 <__aeabi_d2iz>
 8002624:	4603      	mov	r3, r0
 8002626:	60fb      	str	r3, [r7, #12]
    int VehicleSpeedDecimal = (int)((EngTrModel_Y.VehicleSpeed - VehicleSpeedWhole) * 100);
 8002628:	4b42      	ldr	r3, [pc, #264]	; (8002734 <main+0x29c>)
 800262a:	e9d3 4502 	ldrd	r4, r5, [r3, #8]
 800262e:	68f8      	ldr	r0, [r7, #12]
 8002630:	f7fd fef8 	bl	8000424 <__aeabi_i2d>
 8002634:	4602      	mov	r2, r0
 8002636:	460b      	mov	r3, r1
 8002638:	4620      	mov	r0, r4
 800263a:	4629      	mov	r1, r5
 800263c:	f7fd fda4 	bl	8000188 <__aeabi_dsub>
 8002640:	4602      	mov	r2, r0
 8002642:	460b      	mov	r3, r1
 8002644:	4610      	mov	r0, r2
 8002646:	4619      	mov	r1, r3
 8002648:	f04f 0200 	mov.w	r2, #0
 800264c:	4b3b      	ldr	r3, [pc, #236]	; (800273c <main+0x2a4>)
 800264e:	f7fd ff53 	bl	80004f8 <__aeabi_dmul>
 8002652:	4602      	mov	r2, r0
 8002654:	460b      	mov	r3, r1
 8002656:	4610      	mov	r0, r2
 8002658:	4619      	mov	r1, r3
 800265a:	f7fe f9fd 	bl	8000a58 <__aeabi_d2iz>
 800265e:	4603      	mov	r3, r0
 8002660:	60bb      	str	r3, [r7, #8]

    int GearWhole = (int) (EngTrModel_Y.Gear);
 8002662:	4b34      	ldr	r3, [pc, #208]	; (8002734 <main+0x29c>)
 8002664:	e9d3 2304 	ldrd	r2, r3, [r3, #16]
 8002668:	4610      	mov	r0, r2
 800266a:	4619      	mov	r1, r3
 800266c:	f7fe f9f4 	bl	8000a58 <__aeabi_d2iz>
 8002670:	4603      	mov	r3, r0
 8002672:	607b      	str	r3, [r7, #4]

    snprintf(FirstLine_LCD_MSG, sizeof(FirstLine_LCD_MSG), "E:%04d.%02d G:%01d  %c", EngineSpeedWhole, EngineSpeedDecimal, GearWhole, action);
 8002674:	4b2b      	ldr	r3, [pc, #172]	; (8002724 <main+0x28c>)
 8002676:	781b      	ldrb	r3, [r3, #0]
 8002678:	9302      	str	r3, [sp, #8]
 800267a:	687b      	ldr	r3, [r7, #4]
 800267c:	9301      	str	r3, [sp, #4]
 800267e:	693b      	ldr	r3, [r7, #16]
 8002680:	9300      	str	r3, [sp, #0]
 8002682:	697b      	ldr	r3, [r7, #20]
 8002684:	4a2e      	ldr	r2, [pc, #184]	; (8002740 <main+0x2a8>)
 8002686:	2111      	movs	r1, #17
 8002688:	482e      	ldr	r0, [pc, #184]	; (8002744 <main+0x2ac>)
 800268a:	f001 fc77 	bl	8003f7c <sniprintf>
    snprintf(SecondLine_LCD_MSG, sizeof(SecondLine_LCD_MSG), "V:%03d.%02d        ", VehicleSpeedWhole, VehicleSpeedDecimal);
 800268e:	68bb      	ldr	r3, [r7, #8]
 8002690:	9300      	str	r3, [sp, #0]
 8002692:	68fb      	ldr	r3, [r7, #12]
 8002694:	4a2c      	ldr	r2, [pc, #176]	; (8002748 <main+0x2b0>)
 8002696:	2111      	movs	r1, #17
 8002698:	482c      	ldr	r0, [pc, #176]	; (800274c <main+0x2b4>)
 800269a:	f001 fc6f 	bl	8003f7c <sniprintf>

    LCD_Set_Cursor( 1, 1 );
 800269e:	2101      	movs	r1, #1
 80026a0:	2001      	movs	r0, #1
 80026a2:	f7ff fe43 	bl	800232c <LCD_Set_Cursor>
    LCD_Put_Str(FirstLine_LCD_MSG);
 80026a6:	4827      	ldr	r0, [pc, #156]	; (8002744 <main+0x2ac>)
 80026a8:	f7ff fe62 	bl	8002370 <LCD_Put_Str>
    LCD_Set_Cursor( 2, col-- );
 80026ac:	4b28      	ldr	r3, [pc, #160]	; (8002750 <main+0x2b8>)
 80026ae:	781b      	ldrb	r3, [r3, #0]
 80026b0:	1e5a      	subs	r2, r3, #1
 80026b2:	b2d1      	uxtb	r1, r2
 80026b4:	4a26      	ldr	r2, [pc, #152]	; (8002750 <main+0x2b8>)
 80026b6:	7011      	strb	r1, [r2, #0]
 80026b8:	4619      	mov	r1, r3
 80026ba:	2002      	movs	r0, #2
 80026bc:	f7ff fe36 	bl	800232c <LCD_Set_Cursor>

    USER_TIM2_Delay(TIM_PSC_200MS, TIM_CNT_200MS);		// 200 ms delay
 80026c0:	21e6      	movs	r1, #230	; 0xe6
 80026c2:	20c3      	movs	r0, #195	; 0xc3
 80026c4:	f000 fc6c 	bl	8002fa0 <USER_TIM2_Delay>

    if( col == 0 ){
 80026c8:	4b21      	ldr	r3, [pc, #132]	; (8002750 <main+0x2b8>)
 80026ca:	781b      	ldrb	r3, [r3, #0]
 80026cc:	2b00      	cmp	r3, #0
 80026ce:	f47f aef4 	bne.w	80024ba <main+0x22>

	USER_TIM2_Delay(TIM_PSC_500MS, TIM_CNT_500MS);		// 500 ms delay
 80026d2:	2160      	movs	r1, #96	; 0x60
 80026d4:	f44f 70f4 	mov.w	r0, #488	; 0x1e8
 80026d8:	f000 fc62 	bl	8002fa0 <USER_TIM2_Delay>
	col = 16;
 80026dc:	4b1c      	ldr	r3, [pc, #112]	; (8002750 <main+0x2b8>)
 80026de:	2210      	movs	r2, #16
 80026e0:	701a      	strb	r2, [r3, #0]

	LCD_Clear();
 80026e2:	2001      	movs	r0, #1
 80026e4:	f7ff fdfc 	bl	80022e0 <LCD_Write_Cmd>
	LCD_Set_Cursor( 1, 1 );
 80026e8:	2101      	movs	r1, #1
 80026ea:	2001      	movs	r0, #1
 80026ec:	f7ff fe1e 	bl	800232c <LCD_Set_Cursor>
	LCD_Put_Str(SecondLine_LCD_MSG);
 80026f0:	4816      	ldr	r0, [pc, #88]	; (800274c <main+0x2b4>)
 80026f2:	f7ff fe3d 	bl	8002370 <LCD_Put_Str>
	USER_TIM2_Delay(TIM_PSC_5S, TIM_CNT_5S);		// 5 s delay
 80026f6:	2103      	movs	r1, #3
 80026f8:	f241 3012 	movw	r0, #4882	; 0x1312
 80026fc:	f000 fc50 	bl	8002fa0 <USER_TIM2_Delay>
  {
 8002700:	e6db      	b.n	80024ba <main+0x22>
 8002702:	bf00      	nop
 8002704:	f3af 8000 	nop.w
 8002708:	2c2e064e 	.word	0x2c2e064e
 800270c:	3f4a680b 	.word	0x3f4a680b
 8002710:	200002a0 	.word	0x200002a0
 8002714:	200002a4 	.word	0x200002a4
 8002718:	200002ac 	.word	0x200002ac
 800271c:	200002b0 	.word	0x200002b0
 8002720:	42c80000 	.word	0x42c80000
 8002724:	20000000 	.word	0x20000000
 8002728:	40533333 	.word	0x40533333
 800272c:	200002a8 	.word	0x200002a8
 8002730:	20000278 	.word	0x20000278
 8002734:	20000288 	.word	0x20000288
 8002738:	08008870 	.word	0x08008870
 800273c:	40590000 	.word	0x40590000
 8002740:	0800887c 	.word	0x0800887c
 8002744:	200002b4 	.word	0x200002b4
 8002748:	08008894 	.word	0x08008894
 800274c:	200002c8 	.word	0x200002c8
 8002750:	20000001 	.word	0x20000001

08002754 <USER_RCC_ClockEnable>:
  }

}

void USER_RCC_ClockEnable( void )
{
 8002754:	b480      	push	{r7}
 8002756:	af00      	add	r7, sp, #0

  // RCC_APB2ENR modified to IO port A clock enable

  RCC->APB2ENR |= 	RCC_APB2ENR_IOPAEN;	// To set IOPAEN bit
 8002758:	4b35      	ldr	r3, [pc, #212]	; (8002830 <USER_RCC_ClockEnable+0xdc>)
 800275a:	699b      	ldr	r3, [r3, #24]
 800275c:	4a34      	ldr	r2, [pc, #208]	; (8002830 <USER_RCC_ClockEnable+0xdc>)
 800275e:	f043 0304 	orr.w	r3, r3, #4
 8002762:	6193      	str	r3, [r2, #24]

  // RCC_APB2ENR modified to IO port B clock enable

  RCC->APB2ENR |= 	RCC_APB2ENR_IOPBEN;	// To set IOPBEN bit
 8002764:	4b32      	ldr	r3, [pc, #200]	; (8002830 <USER_RCC_ClockEnable+0xdc>)
 8002766:	699b      	ldr	r3, [r3, #24]
 8002768:	4a31      	ldr	r2, [pc, #196]	; (8002830 <USER_RCC_ClockEnable+0xdc>)
 800276a:	f043 0308 	orr.w	r3, r3, #8
 800276e:	6193      	str	r3, [r2, #24]

  // RCC_APB2ENR modified to IO port C clock enable

  RCC->APB2ENR	|=	RCC_APB2ENR_IOPCEN;	// To set IOPCEN bit
 8002770:	4b2f      	ldr	r3, [pc, #188]	; (8002830 <USER_RCC_ClockEnable+0xdc>)
 8002772:	699b      	ldr	r3, [r3, #24]
 8002774:	4a2e      	ldr	r2, [pc, #184]	; (8002830 <USER_RCC_ClockEnable+0xdc>)
 8002776:	f043 0310 	orr.w	r3, r3, #16
 800277a:	6193      	str	r3, [r2, #24]

  // RCC_APB1ENR modified to enable the clock for TIM2

  RCC->APB1ENR |= 	RCC_APB1ENR_TIM2EN;	// To set TIM2EN bit
 800277c:	4b2c      	ldr	r3, [pc, #176]	; (8002830 <USER_RCC_ClockEnable+0xdc>)
 800277e:	69db      	ldr	r3, [r3, #28]
 8002780:	4a2b      	ldr	r2, [pc, #172]	; (8002830 <USER_RCC_ClockEnable+0xdc>)
 8002782:	f043 0301 	orr.w	r3, r3, #1
 8002786:	61d3      	str	r3, [r2, #28]

  // RCC_APB2ENR and RCC_CFGR modified to enable and adjust the clock for ADC1

  RCC->APB2ENR	|=	RCC_APB2ENR_ADC1EN;	// Enable clock for ADC1
 8002788:	4b29      	ldr	r3, [pc, #164]	; (8002830 <USER_RCC_ClockEnable+0xdc>)
 800278a:	699b      	ldr	r3, [r3, #24]
 800278c:	4a28      	ldr	r2, [pc, #160]	; (8002830 <USER_RCC_ClockEnable+0xdc>)
 800278e:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8002792:	6193      	str	r3, [r2, #24]
  RCC->CFGR	|=	RCC_CFGR_ADCPRE;        // Adjust ADC input clock
 8002794:	4b26      	ldr	r3, [pc, #152]	; (8002830 <USER_RCC_ClockEnable+0xdc>)
 8002796:	685b      	ldr	r3, [r3, #4]
 8002798:	4a25      	ldr	r2, [pc, #148]	; (8002830 <USER_RCC_ClockEnable+0xdc>)
 800279a:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
 800279e:	6053      	str	r3, [r2, #4]

  // RCC_APB2ENR modified to enable the clock for USART1

  RCC->APB2ENR |= RCC_APB2ENR_USART1EN; 	// To set USART1EN bit
 80027a0:	4b23      	ldr	r3, [pc, #140]	; (8002830 <USER_RCC_ClockEnable+0xdc>)
 80027a2:	699b      	ldr	r3, [r3, #24]
 80027a4:	4a22      	ldr	r2, [pc, #136]	; (8002830 <USER_RCC_ClockEnable+0xdc>)
 80027a6:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 80027aa:	6193      	str	r3, [r2, #24]

  /* System Clock (SYSCLK) configuration for 64 MHz */

  // Two wait states latency, if SYSCLK > 48 MHz

  FLASH->ACR	&=	~( 0x5UL << 0U );	
 80027ac:	4b21      	ldr	r3, [pc, #132]	; (8002834 <USER_RCC_ClockEnable+0xe0>)
 80027ae:	681b      	ldr	r3, [r3, #0]
 80027b0:	4a20      	ldr	r2, [pc, #128]	; (8002834 <USER_RCC_ClockEnable+0xe0>)
 80027b2:	f023 0305 	bic.w	r3, r3, #5
 80027b6:	6013      	str	r3, [r2, #0]
  FLASH->ACR	|=	( 0x2UL << 0U );	
 80027b8:	4b1e      	ldr	r3, [pc, #120]	; (8002834 <USER_RCC_ClockEnable+0xe0>)
 80027ba:	681b      	ldr	r3, [r3, #0]
 80027bc:	4a1d      	ldr	r2, [pc, #116]	; (8002834 <USER_RCC_ClockEnable+0xe0>)
 80027be:	f043 0302 	orr.w	r3, r3, #2
 80027c2:	6013      	str	r3, [r2, #0]
  
  // PLL HSI clock /2 selected as PLL input clock
  
  RCC->CFGR	&=	~( 0x1UL << 16U )
 80027c4:	4b1a      	ldr	r3, [pc, #104]	; (8002830 <USER_RCC_ClockEnable+0xdc>)
 80027c6:	685b      	ldr	r3, [r3, #4]
 80027c8:	4a19      	ldr	r2, [pc, #100]	; (8002830 <USER_RCC_ClockEnable+0xdc>)
 80027ca:	f423 339d 	bic.w	r3, r3, #80384	; 0x13a00
 80027ce:	f423 73f8 	bic.w	r3, r3, #496	; 0x1f0
 80027d2:	6053      	str	r3, [r2, #4]
		&	~( 0x3UL << 8U )        // APB1 pre-scaler /2 (APB1 must not exceed 36 MHz)
		&	~( 0xFUL << 4U );	// AHB pre-scaler /1

  // PLL input clock x 16 (PLLMUL bits)

  RCC->CFGR	|=	( 0xFUL << 18U )	
 80027d4:	4b16      	ldr	r3, [pc, #88]	; (8002830 <USER_RCC_ClockEnable+0xdc>)
 80027d6:	685b      	ldr	r3, [r3, #4]
 80027d8:	4a15      	ldr	r2, [pc, #84]	; (8002830 <USER_RCC_ClockEnable+0xdc>)
 80027da:	f443 1370 	orr.w	r3, r3, #3932160	; 0x3c0000
 80027de:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 80027e2:	6053      	str	r3, [r2, #4]
		|	( 0X4UL << 8U );	// APB1 pre-scaler /2
  RCC->CR	|=	( 0x1UL << 24U );	// PLL2 ON
 80027e4:	4b12      	ldr	r3, [pc, #72]	; (8002830 <USER_RCC_ClockEnable+0xdc>)
 80027e6:	681b      	ldr	r3, [r3, #0]
 80027e8:	4a11      	ldr	r2, [pc, #68]	; (8002830 <USER_RCC_ClockEnable+0xdc>)
 80027ea:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 80027ee:	6013      	str	r3, [r2, #0]

  // Wait until PLL is locked

  while( !(RCC->CR & ~( 0x1UL << 25U )));
 80027f0:	bf00      	nop
 80027f2:	4b0f      	ldr	r3, [pc, #60]	; (8002830 <USER_RCC_ClockEnable+0xdc>)
 80027f4:	681b      	ldr	r3, [r3, #0]
 80027f6:	f023 7300 	bic.w	r3, r3, #33554432	; 0x2000000
 80027fa:	2b00      	cmp	r3, #0
 80027fc:	d0f9      	beq.n	80027f2 <USER_RCC_ClockEnable+0x9e>

  // PLL used as system clock (SW bits)

  RCC->CFGR	&=	~( 0x1UL << 0U );
 80027fe:	4b0c      	ldr	r3, [pc, #48]	; (8002830 <USER_RCC_ClockEnable+0xdc>)
 8002800:	685b      	ldr	r3, [r3, #4]
 8002802:	4a0b      	ldr	r2, [pc, #44]	; (8002830 <USER_RCC_ClockEnable+0xdc>)
 8002804:	f023 0301 	bic.w	r3, r3, #1
 8002808:	6053      	str	r3, [r2, #4]
  RCC->CFGR	|=	( 0x2UL << 0U );
 800280a:	4b09      	ldr	r3, [pc, #36]	; (8002830 <USER_RCC_ClockEnable+0xdc>)
 800280c:	685b      	ldr	r3, [r3, #4]
 800280e:	4a08      	ldr	r2, [pc, #32]	; (8002830 <USER_RCC_ClockEnable+0xdc>)
 8002810:	f043 0302 	orr.w	r3, r3, #2
 8002814:	6053      	str	r3, [r2, #4]

  // Wait until PLL is switched

  while( 0x8UL != ( RCC->CFGR & 0xCUL ));
 8002816:	bf00      	nop
 8002818:	4b05      	ldr	r3, [pc, #20]	; (8002830 <USER_RCC_ClockEnable+0xdc>)
 800281a:	685b      	ldr	r3, [r3, #4]
 800281c:	f003 030c 	and.w	r3, r3, #12
 8002820:	2b08      	cmp	r3, #8
 8002822:	d1f9      	bne.n	8002818 <USER_RCC_ClockEnable+0xc4>

}
 8002824:	bf00      	nop
 8002826:	bf00      	nop
 8002828:	46bd      	mov	sp, r7
 800282a:	bc80      	pop	{r7}
 800282c:	4770      	bx	lr
 800282e:	bf00      	nop
 8002830:	40021000 	.word	0x40021000
 8002834:	40022000 	.word	0x40022000

08002838 <USER_GPIO_Init>:

void USER_GPIO_Init( void )
{
 8002838:	b480      	push	{r7}
 800283a:	af00      	add	r7, sp, #0
  // Pin PA0 as analog input

  GPIOA->CRL	&=	~( GPIO_CRL_MODE0 )
 800283c:	4b52      	ldr	r3, [pc, #328]	; (8002988 <USER_GPIO_Init+0x150>)
 800283e:	681b      	ldr	r3, [r3, #0]
 8002840:	4a51      	ldr	r2, [pc, #324]	; (8002988 <USER_GPIO_Init+0x150>)
 8002842:	f023 030f 	bic.w	r3, r3, #15
 8002846:	6013      	str	r3, [r2, #0]
		&	~( GPIO_CRL_CNF0 );

  // Pin PA9 (USART1_TX) as alternate function output push-pull, max speed 10MHz

  GPIOA->CRH	&=	~( GPIO_CRH_CNF9_0 )
 8002848:	4b4f      	ldr	r3, [pc, #316]	; (8002988 <USER_GPIO_Init+0x150>)
 800284a:	685b      	ldr	r3, [r3, #4]
 800284c:	4a4e      	ldr	r2, [pc, #312]	; (8002988 <USER_GPIO_Init+0x150>)
 800284e:	f023 0360 	bic.w	r3, r3, #96	; 0x60
 8002852:	6053      	str	r3, [r2, #4]
  		&	~( GPIO_CRH_MODE9 );

  GPIOA->CRH	|=	 ( GPIO_CRH_CNF9 )
 8002854:	4b4c      	ldr	r3, [pc, #304]	; (8002988 <USER_GPIO_Init+0x150>)
 8002856:	685b      	ldr	r3, [r3, #4]
 8002858:	4a4b      	ldr	r2, [pc, #300]	; (8002988 <USER_GPIO_Init+0x150>)
 800285a:	f043 0390 	orr.w	r3, r3, #144	; 0x90
 800285e:	6053      	str	r3, [r2, #4]
  		|	 ( GPIO_CRH_MODE9_0 );
   		
  // Pin PB10 (Row 1) as output

  GPIOB->CRH	&=	~( GPIO_CRH_CNF10 )
 8002860:	4b4a      	ldr	r3, [pc, #296]	; (800298c <USER_GPIO_Init+0x154>)
 8002862:	685b      	ldr	r3, [r3, #4]
 8002864:	4a49      	ldr	r2, [pc, #292]	; (800298c <USER_GPIO_Init+0x154>)
 8002866:	f423 6360 	bic.w	r3, r3, #3584	; 0xe00
 800286a:	6053      	str	r3, [r2, #4]
		&	~( GPIO_CRH_MODE10_0 );

  GPIOB->CRH 	|=	 ( GPIO_CRH_MODE10_1 );
 800286c:	4b47      	ldr	r3, [pc, #284]	; (800298c <USER_GPIO_Init+0x154>)
 800286e:	685b      	ldr	r3, [r3, #4]
 8002870:	4a46      	ldr	r2, [pc, #280]	; (800298c <USER_GPIO_Init+0x154>)
 8002872:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8002876:	6053      	str	r3, [r2, #4]
  GPIOB->ODR 	|=	 ( GPIO_ODR_10 );
 8002878:	4b44      	ldr	r3, [pc, #272]	; (800298c <USER_GPIO_Init+0x154>)
 800287a:	68db      	ldr	r3, [r3, #12]
 800287c:	4a43      	ldr	r2, [pc, #268]	; (800298c <USER_GPIO_Init+0x154>)
 800287e:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 8002882:	60d3      	str	r3, [r2, #12]

  // Pin PB6 (Row 2) as output

  GPIOB->CRL	&=	~( GPIO_CRL_CNF6 )
 8002884:	4b41      	ldr	r3, [pc, #260]	; (800298c <USER_GPIO_Init+0x154>)
 8002886:	681b      	ldr	r3, [r3, #0]
 8002888:	4a40      	ldr	r2, [pc, #256]	; (800298c <USER_GPIO_Init+0x154>)
 800288a:	f023 6360 	bic.w	r3, r3, #234881024	; 0xe000000
 800288e:	6013      	str	r3, [r2, #0]
		&	~( GPIO_CRL_MODE6_0 );

  GPIOB->CRL 	|=	 ( GPIO_CRL_MODE6_1 );
 8002890:	4b3e      	ldr	r3, [pc, #248]	; (800298c <USER_GPIO_Init+0x154>)
 8002892:	681b      	ldr	r3, [r3, #0]
 8002894:	4a3d      	ldr	r2, [pc, #244]	; (800298c <USER_GPIO_Init+0x154>)
 8002896:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 800289a:	6013      	str	r3, [r2, #0]
  GPIOB->ODR 	|=	 ( GPIO_ODR6 );
 800289c:	4b3b      	ldr	r3, [pc, #236]	; (800298c <USER_GPIO_Init+0x154>)
 800289e:	68db      	ldr	r3, [r3, #12]
 80028a0:	4a3a      	ldr	r2, [pc, #232]	; (800298c <USER_GPIO_Init+0x154>)
 80028a2:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80028a6:	60d3      	str	r3, [r2, #12]

  // Pin PB5 (Row 3) as output

  GPIOB->CRL	&=	~( GPIO_CRL_CNF5 )
 80028a8:	4b38      	ldr	r3, [pc, #224]	; (800298c <USER_GPIO_Init+0x154>)
 80028aa:	681b      	ldr	r3, [r3, #0]
 80028ac:	4a37      	ldr	r2, [pc, #220]	; (800298c <USER_GPIO_Init+0x154>)
 80028ae:	f423 0360 	bic.w	r3, r3, #14680064	; 0xe00000
 80028b2:	6013      	str	r3, [r2, #0]
		&	~( GPIO_CRL_MODE5_0 );

  GPIOB->CRL 	|=	 ( GPIO_CRL_MODE5_1 );
 80028b4:	4b35      	ldr	r3, [pc, #212]	; (800298c <USER_GPIO_Init+0x154>)
 80028b6:	681b      	ldr	r3, [r3, #0]
 80028b8:	4a34      	ldr	r2, [pc, #208]	; (800298c <USER_GPIO_Init+0x154>)
 80028ba:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 80028be:	6013      	str	r3, [r2, #0]
  GPIOB->ODR 	|=	 ( GPIO_ODR5 );
 80028c0:	4b32      	ldr	r3, [pc, #200]	; (800298c <USER_GPIO_Init+0x154>)
 80028c2:	68db      	ldr	r3, [r3, #12]
 80028c4:	4a31      	ldr	r2, [pc, #196]	; (800298c <USER_GPIO_Init+0x154>)
 80028c6:	f043 0320 	orr.w	r3, r3, #32
 80028ca:	60d3      	str	r3, [r2, #12]

  // Pin PB7 (Row 4) as output

  GPIOB->CRL	&=	~( GPIO_CRL_CNF7 )
 80028cc:	4b2f      	ldr	r3, [pc, #188]	; (800298c <USER_GPIO_Init+0x154>)
 80028ce:	681b      	ldr	r3, [r3, #0]
 80028d0:	4a2e      	ldr	r2, [pc, #184]	; (800298c <USER_GPIO_Init+0x154>)
 80028d2:	f023 4360 	bic.w	r3, r3, #3758096384	; 0xe0000000
 80028d6:	6013      	str	r3, [r2, #0]
		&	~( GPIO_CRL_MODE7_0 );

  GPIOB->CRL 	|=	 ( GPIO_CRL_MODE7_1 );
 80028d8:	4b2c      	ldr	r3, [pc, #176]	; (800298c <USER_GPIO_Init+0x154>)
 80028da:	681b      	ldr	r3, [r3, #0]
 80028dc:	4a2b      	ldr	r2, [pc, #172]	; (800298c <USER_GPIO_Init+0x154>)
 80028de:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 80028e2:	6013      	str	r3, [r2, #0]
  GPIOB->ODR 	|=	 ( GPIO_ODR7 );
 80028e4:	4b29      	ldr	r3, [pc, #164]	; (800298c <USER_GPIO_Init+0x154>)
 80028e6:	68db      	ldr	r3, [r3, #12]
 80028e8:	4a28      	ldr	r2, [pc, #160]	; (800298c <USER_GPIO_Init+0x154>)
 80028ea:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80028ee:	60d3      	str	r3, [r2, #12]

  // Pin PB1 (Col 1) as input pull up

  GPIOB->CRL	&=	~( GPIO_CRL_MODE1 )
 80028f0:	4b26      	ldr	r3, [pc, #152]	; (800298c <USER_GPIO_Init+0x154>)
 80028f2:	681b      	ldr	r3, [r3, #0]
 80028f4:	4a25      	ldr	r2, [pc, #148]	; (800298c <USER_GPIO_Init+0x154>)
 80028f6:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 80028fa:	6013      	str	r3, [r2, #0]
		&	~( GPIO_CRL_CNF1_0 );

  GPIOB->CRL	|= 	 ( GPIO_CRL_CNF1_1 );
 80028fc:	4b23      	ldr	r3, [pc, #140]	; (800298c <USER_GPIO_Init+0x154>)
 80028fe:	681b      	ldr	r3, [r3, #0]
 8002900:	4a22      	ldr	r2, [pc, #136]	; (800298c <USER_GPIO_Init+0x154>)
 8002902:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8002906:	6013      	str	r3, [r2, #0]
  GPIOB->ODR	|=	 ( GPIO_ODR1 );
 8002908:	4b20      	ldr	r3, [pc, #128]	; (800298c <USER_GPIO_Init+0x154>)
 800290a:	68db      	ldr	r3, [r3, #12]
 800290c:	4a1f      	ldr	r2, [pc, #124]	; (800298c <USER_GPIO_Init+0x154>)
 800290e:	f043 0302 	orr.w	r3, r3, #2
 8002912:	60d3      	str	r3, [r2, #12]

  // Pin PB15 (Col 2) as input pull up

  GPIOB->CRH	&=	~( GPIO_CRH_MODE15 )
 8002914:	4b1d      	ldr	r3, [pc, #116]	; (800298c <USER_GPIO_Init+0x154>)
 8002916:	685b      	ldr	r3, [r3, #4]
 8002918:	4a1c      	ldr	r2, [pc, #112]	; (800298c <USER_GPIO_Init+0x154>)
 800291a:	f023 43e0 	bic.w	r3, r3, #1879048192	; 0x70000000
 800291e:	6053      	str	r3, [r2, #4]
		&	~( GPIO_CRH_CNF15_0 );

  GPIOB->CRH	|= 	 ( GPIO_CRH_CNF15_1 );
 8002920:	4b1a      	ldr	r3, [pc, #104]	; (800298c <USER_GPIO_Init+0x154>)
 8002922:	685b      	ldr	r3, [r3, #4]
 8002924:	4a19      	ldr	r2, [pc, #100]	; (800298c <USER_GPIO_Init+0x154>)
 8002926:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 800292a:	6053      	str	r3, [r2, #4]
  GPIOB->ODR	|=	 ( GPIO_ODR15 );
 800292c:	4b17      	ldr	r3, [pc, #92]	; (800298c <USER_GPIO_Init+0x154>)
 800292e:	68db      	ldr	r3, [r3, #12]
 8002930:	4a16      	ldr	r2, [pc, #88]	; (800298c <USER_GPIO_Init+0x154>)
 8002932:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8002936:	60d3      	str	r3, [r2, #12]

  // Pin PB14 (Col 3) as input pull up

  GPIOB->CRH	&=	~( GPIO_CRH_MODE14 )
 8002938:	4b14      	ldr	r3, [pc, #80]	; (800298c <USER_GPIO_Init+0x154>)
 800293a:	685b      	ldr	r3, [r3, #4]
 800293c:	4a13      	ldr	r2, [pc, #76]	; (800298c <USER_GPIO_Init+0x154>)
 800293e:	f023 63e0 	bic.w	r3, r3, #117440512	; 0x7000000
 8002942:	6053      	str	r3, [r2, #4]
		&	~( GPIO_CRH_CNF14_0 );

  GPIOB->CRH	|= 	 ( GPIO_CRH_CNF14_1 );
 8002944:	4b11      	ldr	r3, [pc, #68]	; (800298c <USER_GPIO_Init+0x154>)
 8002946:	685b      	ldr	r3, [r3, #4]
 8002948:	4a10      	ldr	r2, [pc, #64]	; (800298c <USER_GPIO_Init+0x154>)
 800294a:	f043 6300 	orr.w	r3, r3, #134217728	; 0x8000000
 800294e:	6053      	str	r3, [r2, #4]
  GPIOB->ODR	|=	 ( GPIO_ODR14 );
 8002950:	4b0e      	ldr	r3, [pc, #56]	; (800298c <USER_GPIO_Init+0x154>)
 8002952:	68db      	ldr	r3, [r3, #12]
 8002954:	4a0d      	ldr	r2, [pc, #52]	; (800298c <USER_GPIO_Init+0x154>)
 8002956:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 800295a:	60d3      	str	r3, [r2, #12]

  // Pin PB13 (Col 4) as input pull up

  GPIOB->CRH	&=	~( GPIO_CRH_MODE13 )
 800295c:	4b0b      	ldr	r3, [pc, #44]	; (800298c <USER_GPIO_Init+0x154>)
 800295e:	685b      	ldr	r3, [r3, #4]
 8002960:	4a0a      	ldr	r2, [pc, #40]	; (800298c <USER_GPIO_Init+0x154>)
 8002962:	f023 73a8 	bic.w	r3, r3, #22020096	; 0x1500000
 8002966:	6053      	str	r3, [r2, #4]
		&	~( GPIO_CRH_CNF13_0 );

  GPIOB->CRH	|= 	 ( GPIO_CRH_CNF13_1 );
 8002968:	4b08      	ldr	r3, [pc, #32]	; (800298c <USER_GPIO_Init+0x154>)
 800296a:	685b      	ldr	r3, [r3, #4]
 800296c:	4a07      	ldr	r2, [pc, #28]	; (800298c <USER_GPIO_Init+0x154>)
 800296e:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 8002972:	6053      	str	r3, [r2, #4]
  GPIOB->ODR	|=	 ( GPIO_ODR13 );
 8002974:	4b05      	ldr	r3, [pc, #20]	; (800298c <USER_GPIO_Init+0x154>)
 8002976:	68db      	ldr	r3, [r3, #12]
 8002978:	4a04      	ldr	r2, [pc, #16]	; (800298c <USER_GPIO_Init+0x154>)
 800297a:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 800297e:	60d3      	str	r3, [r2, #12]
}
 8002980:	bf00      	nop
 8002982:	46bd      	mov	sp, r7
 8002984:	bc80      	pop	{r7}
 8002986:	4770      	bx	lr
 8002988:	40010800 	.word	0x40010800
 800298c:	40010c00 	.word	0x40010c00

08002990 <USER_MATRIX_KEYBOARD_Read>:
    {'4', '5', '6', 'B'},
    {'7', '8', '9', 'C'},
    {'*', '0', '#', 'D'}
};

char USER_MATRIX_KEYBOARD_Read( void ) {
 8002990:	b480      	push	{r7}
 8002992:	b083      	sub	sp, #12
 8002994:	af00      	add	r7, sp, #0

  char selectedKey;

  for (unsigned short int i = 0; i < NUMBER_OF_ELEMENTS; i++) {
 8002996:	2300      	movs	r3, #0
 8002998:	80bb      	strh	r3, [r7, #4]
 800299a:	e032      	b.n	8002a02 <USER_MATRIX_KEYBOARD_Read+0x72>

      GPIOB->BSRR = (1 << (R_POSITIONS[i] + 16));
 800299c:	88bb      	ldrh	r3, [r7, #4]
 800299e:	4a1d      	ldr	r2, [pc, #116]	; (8002a14 <USER_MATRIX_KEYBOARD_Read+0x84>)
 80029a0:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
 80029a4:	3310      	adds	r3, #16
 80029a6:	2201      	movs	r2, #1
 80029a8:	409a      	lsls	r2, r3
 80029aa:	4b1b      	ldr	r3, [pc, #108]	; (8002a18 <USER_MATRIX_KEYBOARD_Read+0x88>)
 80029ac:	611a      	str	r2, [r3, #16]

      for (unsigned short int j = 0; j < NUMBER_OF_ELEMENTS; j++) {
 80029ae:	2300      	movs	r3, #0
 80029b0:	807b      	strh	r3, [r7, #2]
 80029b2:	e016      	b.n	80029e2 <USER_MATRIX_KEYBOARD_Read+0x52>

	  if ((GPIOB->IDR & (1 << C_POSITIONS[j])) == 0) {
 80029b4:	4b18      	ldr	r3, [pc, #96]	; (8002a18 <USER_MATRIX_KEYBOARD_Read+0x88>)
 80029b6:	689b      	ldr	r3, [r3, #8]
 80029b8:	887a      	ldrh	r2, [r7, #2]
 80029ba:	4918      	ldr	r1, [pc, #96]	; (8002a1c <USER_MATRIX_KEYBOARD_Read+0x8c>)
 80029bc:	f831 2012 	ldrh.w	r2, [r1, r2, lsl #1]
 80029c0:	4611      	mov	r1, r2
 80029c2:	2201      	movs	r2, #1
 80029c4:	408a      	lsls	r2, r1
 80029c6:	4013      	ands	r3, r2
 80029c8:	2b00      	cmp	r3, #0
 80029ca:	d107      	bne.n	80029dc <USER_MATRIX_KEYBOARD_Read+0x4c>
	      selectedKey = keys[i][j];
 80029cc:	88ba      	ldrh	r2, [r7, #4]
 80029ce:	887b      	ldrh	r3, [r7, #2]
 80029d0:	4913      	ldr	r1, [pc, #76]	; (8002a20 <USER_MATRIX_KEYBOARD_Read+0x90>)
 80029d2:	0092      	lsls	r2, r2, #2
 80029d4:	440a      	add	r2, r1
 80029d6:	4413      	add	r3, r2
 80029d8:	781b      	ldrb	r3, [r3, #0]
 80029da:	71fb      	strb	r3, [r7, #7]
      for (unsigned short int j = 0; j < NUMBER_OF_ELEMENTS; j++) {
 80029dc:	887b      	ldrh	r3, [r7, #2]
 80029de:	3301      	adds	r3, #1
 80029e0:	807b      	strh	r3, [r7, #2]
 80029e2:	887b      	ldrh	r3, [r7, #2]
 80029e4:	2b03      	cmp	r3, #3
 80029e6:	d9e5      	bls.n	80029b4 <USER_MATRIX_KEYBOARD_Read+0x24>
	  }
      }

      GPIOB->BSRR = (1 << R_POSITIONS[i]);
 80029e8:	88bb      	ldrh	r3, [r7, #4]
 80029ea:	4a0a      	ldr	r2, [pc, #40]	; (8002a14 <USER_MATRIX_KEYBOARD_Read+0x84>)
 80029ec:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
 80029f0:	461a      	mov	r2, r3
 80029f2:	2301      	movs	r3, #1
 80029f4:	fa03 f202 	lsl.w	r2, r3, r2
 80029f8:	4b07      	ldr	r3, [pc, #28]	; (8002a18 <USER_MATRIX_KEYBOARD_Read+0x88>)
 80029fa:	611a      	str	r2, [r3, #16]
  for (unsigned short int i = 0; i < NUMBER_OF_ELEMENTS; i++) {
 80029fc:	88bb      	ldrh	r3, [r7, #4]
 80029fe:	3301      	adds	r3, #1
 8002a00:	80bb      	strh	r3, [r7, #4]
 8002a02:	88bb      	ldrh	r3, [r7, #4]
 8002a04:	2b03      	cmp	r3, #3
 8002a06:	d9c9      	bls.n	800299c <USER_MATRIX_KEYBOARD_Read+0xc>
  }

  return selectedKey;
 8002a08:	79fb      	ldrb	r3, [r7, #7]
}
 8002a0a:	4618      	mov	r0, r3
 8002a0c:	370c      	adds	r7, #12
 8002a0e:	46bd      	mov	sp, r7
 8002a10:	bc80      	pop	{r7}
 8002a12:	4770      	bx	lr
 8002a14:	20000004 	.word	0x20000004
 8002a18:	40010c00 	.word	0x40010c00
 8002a1c:	2000000c 	.word	0x2000000c
 8002a20:	20000014 	.word	0x20000014

08002a24 <rtGetInf>:
/*
 * Initialize rtInf needed by the generated code.
 * Inf is initialized as non-signaling. Assumes IEEE.
 */
real_T rtGetInf(void)
{
 8002a24:	b580      	push	{r7, lr}
 8002a26:	b088      	sub	sp, #32
 8002a28:	af00      	add	r7, sp, #0
  size_t bitsPerReal = sizeof(real_T) * (NumBitsPerChar);
 8002a2a:	2340      	movs	r3, #64	; 0x40
 8002a2c:	617b      	str	r3, [r7, #20]
  real_T inf = 0.0;
 8002a2e:	f04f 0200 	mov.w	r2, #0
 8002a32:	f04f 0300 	mov.w	r3, #0
 8002a36:	e9c7 2306 	strd	r2, r3, [r7, #24]
  if (bitsPerReal == 32U) {
 8002a3a:	697b      	ldr	r3, [r7, #20]
 8002a3c:	2b20      	cmp	r3, #32
 8002a3e:	d10a      	bne.n	8002a56 <rtGetInf+0x32>
    inf = rtGetInfF();
 8002a40:	f000 f836 	bl	8002ab0 <rtGetInfF>
 8002a44:	4603      	mov	r3, r0
 8002a46:	4618      	mov	r0, r3
 8002a48:	f7fd fcfe 	bl	8000448 <__aeabi_f2d>
 8002a4c:	4602      	mov	r2, r0
 8002a4e:	460b      	mov	r3, r1
 8002a50:	e9c7 2306 	strd	r2, r3, [r7, #24]
 8002a54:	e022      	b.n	8002a9c <rtGetInf+0x78>
  } else {
    uint16_T one = 1U;
 8002a56:	2301      	movs	r3, #1
 8002a58:	823b      	strh	r3, [r7, #16]
    enum {
      LittleEndian,
      BigEndian
    } machByteOrder = (*((uint8_T *) &one) == 1U) ? LittleEndian : BigEndian;
 8002a5a:	f107 0310 	add.w	r3, r7, #16
 8002a5e:	781b      	ldrb	r3, [r3, #0]
 8002a60:	2b01      	cmp	r3, #1
 8002a62:	bf14      	ite	ne
 8002a64:	2301      	movne	r3, #1
 8002a66:	2300      	moveq	r3, #0
 8002a68:	b2db      	uxtb	r3, r3
 8002a6a:	74fb      	strb	r3, [r7, #19]
    switch (machByteOrder) {
 8002a6c:	7cfb      	ldrb	r3, [r7, #19]
 8002a6e:	2b00      	cmp	r3, #0
 8002a70:	d002      	beq.n	8002a78 <rtGetInf+0x54>
 8002a72:	2b01      	cmp	r3, #1
 8002a74:	d009      	beq.n	8002a8a <rtGetInf+0x66>
 8002a76:	e011      	b.n	8002a9c <rtGetInf+0x78>
        union {
          LittleEndianIEEEDouble bitVal;
          real_T fltVal;
        } tmpVal;

        tmpVal.bitVal.words.wordH = 0x7FF00000U;
 8002a78:	4b0c      	ldr	r3, [pc, #48]	; (8002aac <rtGetInf+0x88>)
 8002a7a:	60fb      	str	r3, [r7, #12]
        tmpVal.bitVal.words.wordL = 0x00000000U;
 8002a7c:	2300      	movs	r3, #0
 8002a7e:	60bb      	str	r3, [r7, #8]
        inf = tmpVal.fltVal;
 8002a80:	e9d7 2302 	ldrd	r2, r3, [r7, #8]
 8002a84:	e9c7 2306 	strd	r2, r3, [r7, #24]
        break;
 8002a88:	e008      	b.n	8002a9c <rtGetInf+0x78>
        union {
          BigEndianIEEEDouble bitVal;
          real_T fltVal;
        } tmpVal;

        tmpVal.bitVal.words.wordH = 0x7FF00000U;
 8002a8a:	4b08      	ldr	r3, [pc, #32]	; (8002aac <rtGetInf+0x88>)
 8002a8c:	603b      	str	r3, [r7, #0]
        tmpVal.bitVal.words.wordL = 0x00000000U;
 8002a8e:	2300      	movs	r3, #0
 8002a90:	607b      	str	r3, [r7, #4]
        inf = tmpVal.fltVal;
 8002a92:	e9d7 2300 	ldrd	r2, r3, [r7]
 8002a96:	e9c7 2306 	strd	r2, r3, [r7, #24]
        break;
 8002a9a:	bf00      	nop
      }
    }
  }

  return inf;
 8002a9c:	e9d7 2306 	ldrd	r2, r3, [r7, #24]
}
 8002aa0:	4610      	mov	r0, r2
 8002aa2:	4619      	mov	r1, r3
 8002aa4:	3720      	adds	r7, #32
 8002aa6:	46bd      	mov	sp, r7
 8002aa8:	bd80      	pop	{r7, pc}
 8002aaa:	bf00      	nop
 8002aac:	7ff00000 	.word	0x7ff00000

08002ab0 <rtGetInfF>:
/*
 * Initialize rtInfF needed by the generated code.
 * Inf is initialized as non-signaling. Assumes IEEE.
 */
real32_T rtGetInfF(void)
{
 8002ab0:	b480      	push	{r7}
 8002ab2:	b083      	sub	sp, #12
 8002ab4:	af00      	add	r7, sp, #0
  IEEESingle infF;
  infF.wordL.wordLuint = 0x7F800000U;
 8002ab6:	f04f 43ff 	mov.w	r3, #2139095040	; 0x7f800000
 8002aba:	607b      	str	r3, [r7, #4]
  return infF.wordL.wordLreal;
 8002abc:	687b      	ldr	r3, [r7, #4]
}
 8002abe:	4618      	mov	r0, r3
 8002ac0:	370c      	adds	r7, #12
 8002ac2:	46bd      	mov	sp, r7
 8002ac4:	bc80      	pop	{r7}
 8002ac6:	4770      	bx	lr

08002ac8 <rtGetMinusInf>:
/*
 * Initialize rtMinusInf needed by the generated code.
 * Inf is initialized as non-signaling. Assumes IEEE.
 */
real_T rtGetMinusInf(void)
{
 8002ac8:	b580      	push	{r7, lr}
 8002aca:	b088      	sub	sp, #32
 8002acc:	af00      	add	r7, sp, #0
  size_t bitsPerReal = sizeof(real_T) * (NumBitsPerChar);
 8002ace:	2340      	movs	r3, #64	; 0x40
 8002ad0:	617b      	str	r3, [r7, #20]
  real_T minf = 0.0;
 8002ad2:	f04f 0200 	mov.w	r2, #0
 8002ad6:	f04f 0300 	mov.w	r3, #0
 8002ada:	e9c7 2306 	strd	r2, r3, [r7, #24]
  if (bitsPerReal == 32U) {
 8002ade:	697b      	ldr	r3, [r7, #20]
 8002ae0:	2b20      	cmp	r3, #32
 8002ae2:	d10a      	bne.n	8002afa <rtGetMinusInf+0x32>
    minf = rtGetMinusInfF();
 8002ae4:	f000 f836 	bl	8002b54 <rtGetMinusInfF>
 8002ae8:	4603      	mov	r3, r0
 8002aea:	4618      	mov	r0, r3
 8002aec:	f7fd fcac 	bl	8000448 <__aeabi_f2d>
 8002af0:	4602      	mov	r2, r0
 8002af2:	460b      	mov	r3, r1
 8002af4:	e9c7 2306 	strd	r2, r3, [r7, #24]
 8002af8:	e022      	b.n	8002b40 <rtGetMinusInf+0x78>
  } else {
    uint16_T one = 1U;
 8002afa:	2301      	movs	r3, #1
 8002afc:	823b      	strh	r3, [r7, #16]
    enum {
      LittleEndian,
      BigEndian
    } machByteOrder = (*((uint8_T *) &one) == 1U) ? LittleEndian : BigEndian;
 8002afe:	f107 0310 	add.w	r3, r7, #16
 8002b02:	781b      	ldrb	r3, [r3, #0]
 8002b04:	2b01      	cmp	r3, #1
 8002b06:	bf14      	ite	ne
 8002b08:	2301      	movne	r3, #1
 8002b0a:	2300      	moveq	r3, #0
 8002b0c:	b2db      	uxtb	r3, r3
 8002b0e:	74fb      	strb	r3, [r7, #19]
    switch (machByteOrder) {
 8002b10:	7cfb      	ldrb	r3, [r7, #19]
 8002b12:	2b00      	cmp	r3, #0
 8002b14:	d002      	beq.n	8002b1c <rtGetMinusInf+0x54>
 8002b16:	2b01      	cmp	r3, #1
 8002b18:	d009      	beq.n	8002b2e <rtGetMinusInf+0x66>
 8002b1a:	e011      	b.n	8002b40 <rtGetMinusInf+0x78>
        union {
          LittleEndianIEEEDouble bitVal;
          real_T fltVal;
        } tmpVal;

        tmpVal.bitVal.words.wordH = 0xFFF00000U;
 8002b1c:	4b0c      	ldr	r3, [pc, #48]	; (8002b50 <rtGetMinusInf+0x88>)
 8002b1e:	60fb      	str	r3, [r7, #12]
        tmpVal.bitVal.words.wordL = 0x00000000U;
 8002b20:	2300      	movs	r3, #0
 8002b22:	60bb      	str	r3, [r7, #8]
        minf = tmpVal.fltVal;
 8002b24:	e9d7 2302 	ldrd	r2, r3, [r7, #8]
 8002b28:	e9c7 2306 	strd	r2, r3, [r7, #24]
        break;
 8002b2c:	e008      	b.n	8002b40 <rtGetMinusInf+0x78>
        union {
          BigEndianIEEEDouble bitVal;
          real_T fltVal;
        } tmpVal;

        tmpVal.bitVal.words.wordH = 0xFFF00000U;
 8002b2e:	4b08      	ldr	r3, [pc, #32]	; (8002b50 <rtGetMinusInf+0x88>)
 8002b30:	603b      	str	r3, [r7, #0]
        tmpVal.bitVal.words.wordL = 0x00000000U;
 8002b32:	2300      	movs	r3, #0
 8002b34:	607b      	str	r3, [r7, #4]
        minf = tmpVal.fltVal;
 8002b36:	e9d7 2300 	ldrd	r2, r3, [r7]
 8002b3a:	e9c7 2306 	strd	r2, r3, [r7, #24]
        break;
 8002b3e:	bf00      	nop
      }
    }
  }

  return minf;
 8002b40:	e9d7 2306 	ldrd	r2, r3, [r7, #24]
}
 8002b44:	4610      	mov	r0, r2
 8002b46:	4619      	mov	r1, r3
 8002b48:	3720      	adds	r7, #32
 8002b4a:	46bd      	mov	sp, r7
 8002b4c:	bd80      	pop	{r7, pc}
 8002b4e:	bf00      	nop
 8002b50:	fff00000 	.word	0xfff00000

08002b54 <rtGetMinusInfF>:
/*
 * Initialize rtMinusInfF needed by the generated code.
 * Inf is initialized as non-signaling. Assumes IEEE.
 */
real32_T rtGetMinusInfF(void)
{
 8002b54:	b480      	push	{r7}
 8002b56:	b083      	sub	sp, #12
 8002b58:	af00      	add	r7, sp, #0
  IEEESingle minfF;
  minfF.wordL.wordLuint = 0xFF800000U;
 8002b5a:	4b04      	ldr	r3, [pc, #16]	; (8002b6c <rtGetMinusInfF+0x18>)
 8002b5c:	607b      	str	r3, [r7, #4]
  return minfF.wordL.wordLreal;
 8002b5e:	687b      	ldr	r3, [r7, #4]
}
 8002b60:	4618      	mov	r0, r3
 8002b62:	370c      	adds	r7, #12
 8002b64:	46bd      	mov	sp, r7
 8002b66:	bc80      	pop	{r7}
 8002b68:	4770      	bx	lr
 8002b6a:	bf00      	nop
 8002b6c:	ff800000 	.word	0xff800000

08002b70 <rtGetNaN>:
/*
 * Initialize rtNaN needed by the generated code.
 * NaN is initialized as non-signaling. Assumes IEEE.
 */
real_T rtGetNaN(void)
{
 8002b70:	b580      	push	{r7, lr}
 8002b72:	b088      	sub	sp, #32
 8002b74:	af00      	add	r7, sp, #0
  size_t bitsPerReal = sizeof(real_T) * (NumBitsPerChar);
 8002b76:	2340      	movs	r3, #64	; 0x40
 8002b78:	617b      	str	r3, [r7, #20]
  real_T nan = 0.0;
 8002b7a:	f04f 0200 	mov.w	r2, #0
 8002b7e:	f04f 0300 	mov.w	r3, #0
 8002b82:	e9c7 2306 	strd	r2, r3, [r7, #24]
  if (bitsPerReal == 32U) {
 8002b86:	697b      	ldr	r3, [r7, #20]
 8002b88:	2b20      	cmp	r3, #32
 8002b8a:	d10a      	bne.n	8002ba2 <rtGetNaN+0x32>
    nan = rtGetNaNF();
 8002b8c:	f000 f838 	bl	8002c00 <rtGetNaNF>
 8002b90:	4603      	mov	r3, r0
 8002b92:	4618      	mov	r0, r3
 8002b94:	f7fd fc58 	bl	8000448 <__aeabi_f2d>
 8002b98:	4602      	mov	r2, r0
 8002b9a:	460b      	mov	r3, r1
 8002b9c:	e9c7 2306 	strd	r2, r3, [r7, #24]
 8002ba0:	e024      	b.n	8002bec <rtGetNaN+0x7c>
  } else {
    uint16_T one = 1U;
 8002ba2:	2301      	movs	r3, #1
 8002ba4:	823b      	strh	r3, [r7, #16]
    enum {
      LittleEndian,
      BigEndian
    } machByteOrder = (*((uint8_T *) &one) == 1U) ? LittleEndian : BigEndian;
 8002ba6:	f107 0310 	add.w	r3, r7, #16
 8002baa:	781b      	ldrb	r3, [r3, #0]
 8002bac:	2b01      	cmp	r3, #1
 8002bae:	bf14      	ite	ne
 8002bb0:	2301      	movne	r3, #1
 8002bb2:	2300      	moveq	r3, #0
 8002bb4:	b2db      	uxtb	r3, r3
 8002bb6:	74fb      	strb	r3, [r7, #19]
    switch (machByteOrder) {
 8002bb8:	7cfb      	ldrb	r3, [r7, #19]
 8002bba:	2b00      	cmp	r3, #0
 8002bbc:	d002      	beq.n	8002bc4 <rtGetNaN+0x54>
 8002bbe:	2b01      	cmp	r3, #1
 8002bc0:	d009      	beq.n	8002bd6 <rtGetNaN+0x66>
 8002bc2:	e013      	b.n	8002bec <rtGetNaN+0x7c>
        union {
          LittleEndianIEEEDouble bitVal;
          real_T fltVal;
        } tmpVal;

        tmpVal.bitVal.words.wordH = 0xFFF80000U;
 8002bc4:	4b0d      	ldr	r3, [pc, #52]	; (8002bfc <rtGetNaN+0x8c>)
 8002bc6:	60fb      	str	r3, [r7, #12]
        tmpVal.bitVal.words.wordL = 0x00000000U;
 8002bc8:	2300      	movs	r3, #0
 8002bca:	60bb      	str	r3, [r7, #8]
        nan = tmpVal.fltVal;
 8002bcc:	e9d7 2302 	ldrd	r2, r3, [r7, #8]
 8002bd0:	e9c7 2306 	strd	r2, r3, [r7, #24]
        break;
 8002bd4:	e00a      	b.n	8002bec <rtGetNaN+0x7c>
        union {
          BigEndianIEEEDouble bitVal;
          real_T fltVal;
        } tmpVal;

        tmpVal.bitVal.words.wordH = 0x7FFFFFFFU;
 8002bd6:	f06f 4300 	mvn.w	r3, #2147483648	; 0x80000000
 8002bda:	603b      	str	r3, [r7, #0]
        tmpVal.bitVal.words.wordL = 0xFFFFFFFFU;
 8002bdc:	f04f 33ff 	mov.w	r3, #4294967295
 8002be0:	607b      	str	r3, [r7, #4]
        nan = tmpVal.fltVal;
 8002be2:	e9d7 2300 	ldrd	r2, r3, [r7]
 8002be6:	e9c7 2306 	strd	r2, r3, [r7, #24]
        break;
 8002bea:	bf00      	nop
      }
    }
  }

  return nan;
 8002bec:	e9d7 2306 	ldrd	r2, r3, [r7, #24]
}
 8002bf0:	4610      	mov	r0, r2
 8002bf2:	4619      	mov	r1, r3
 8002bf4:	3720      	adds	r7, #32
 8002bf6:	46bd      	mov	sp, r7
 8002bf8:	bd80      	pop	{r7, pc}
 8002bfa:	bf00      	nop
 8002bfc:	fff80000 	.word	0xfff80000

08002c00 <rtGetNaNF>:
/*
 * Initialize rtNaNF needed by the generated code.
 * NaN is initialized as non-signaling. Assumes IEEE.
 */
real32_T rtGetNaNF(void)
{
 8002c00:	b480      	push	{r7}
 8002c02:	b085      	sub	sp, #20
 8002c04:	af00      	add	r7, sp, #0
  IEEESingle nanF = { { 0 } };
 8002c06:	f04f 0300 	mov.w	r3, #0
 8002c0a:	60bb      	str	r3, [r7, #8]

  uint16_T one = 1U;
 8002c0c:	2301      	movs	r3, #1
 8002c0e:	80fb      	strh	r3, [r7, #6]
  enum {
    LittleEndian,
    BigEndian
  } machByteOrder = (*((uint8_T *) &one) == 1U) ? LittleEndian : BigEndian;
 8002c10:	1dbb      	adds	r3, r7, #6
 8002c12:	781b      	ldrb	r3, [r3, #0]
 8002c14:	2b01      	cmp	r3, #1
 8002c16:	bf14      	ite	ne
 8002c18:	2301      	movne	r3, #1
 8002c1a:	2300      	moveq	r3, #0
 8002c1c:	b2db      	uxtb	r3, r3
 8002c1e:	73fb      	strb	r3, [r7, #15]
  switch (machByteOrder) {
 8002c20:	7bfb      	ldrb	r3, [r7, #15]
 8002c22:	2b00      	cmp	r3, #0
 8002c24:	d002      	beq.n	8002c2c <rtGetNaNF+0x2c>
 8002c26:	2b01      	cmp	r3, #1
 8002c28:	d003      	beq.n	8002c32 <rtGetNaNF+0x32>
 8002c2a:	e006      	b.n	8002c3a <rtGetNaNF+0x3a>
   case LittleEndian:
    {
      nanF.wordL.wordLuint = 0xFFC00000U;
 8002c2c:	4b06      	ldr	r3, [pc, #24]	; (8002c48 <rtGetNaNF+0x48>)
 8002c2e:	60bb      	str	r3, [r7, #8]
      break;
 8002c30:	e003      	b.n	8002c3a <rtGetNaNF+0x3a>
    }

   case BigEndian:
    {
      nanF.wordL.wordLuint = 0x7FFFFFFFU;
 8002c32:	f06f 4300 	mvn.w	r3, #2147483648	; 0x80000000
 8002c36:	60bb      	str	r3, [r7, #8]
      break;
 8002c38:	bf00      	nop
    }
  }

  return nanF.wordL.wordLreal;
 8002c3a:	68bb      	ldr	r3, [r7, #8]
}
 8002c3c:	4618      	mov	r0, r3
 8002c3e:	3714      	adds	r7, #20
 8002c40:	46bd      	mov	sp, r7
 8002c42:	bc80      	pop	{r7}
 8002c44:	4770      	bx	lr
 8002c46:	bf00      	nop
 8002c48:	ffc00000 	.word	0xffc00000

08002c4c <rt_InitInfAndNaN>:
/*
 * Initialize the rtInf, rtMinusInf, and rtNaN needed by the
 * generated code. NaN is initialized as non-signaling. Assumes IEEE.
 */
void rt_InitInfAndNaN(size_t realSize)
{
 8002c4c:	b580      	push	{r7, lr}
 8002c4e:	b082      	sub	sp, #8
 8002c50:	af00      	add	r7, sp, #0
 8002c52:	6078      	str	r0, [r7, #4]
  (void) (realSize);
  rtNaN = rtGetNaN();
 8002c54:	f7ff ff8c 	bl	8002b70 <rtGetNaN>
 8002c58:	4602      	mov	r2, r0
 8002c5a:	460b      	mov	r3, r1
 8002c5c:	4911      	ldr	r1, [pc, #68]	; (8002ca4 <rt_InitInfAndNaN+0x58>)
 8002c5e:	e9c1 2300 	strd	r2, r3, [r1]
  rtNaNF = rtGetNaNF();
 8002c62:	f7ff ffcd 	bl	8002c00 <rtGetNaNF>
 8002c66:	4603      	mov	r3, r0
 8002c68:	4a0f      	ldr	r2, [pc, #60]	; (8002ca8 <rt_InitInfAndNaN+0x5c>)
 8002c6a:	6013      	str	r3, [r2, #0]
  rtInf = rtGetInf();
 8002c6c:	f7ff feda 	bl	8002a24 <rtGetInf>
 8002c70:	4602      	mov	r2, r0
 8002c72:	460b      	mov	r3, r1
 8002c74:	490d      	ldr	r1, [pc, #52]	; (8002cac <rt_InitInfAndNaN+0x60>)
 8002c76:	e9c1 2300 	strd	r2, r3, [r1]
  rtInfF = rtGetInfF();
 8002c7a:	f7ff ff19 	bl	8002ab0 <rtGetInfF>
 8002c7e:	4603      	mov	r3, r0
 8002c80:	4a0b      	ldr	r2, [pc, #44]	; (8002cb0 <rt_InitInfAndNaN+0x64>)
 8002c82:	6013      	str	r3, [r2, #0]
  rtMinusInf = rtGetMinusInf();
 8002c84:	f7ff ff20 	bl	8002ac8 <rtGetMinusInf>
 8002c88:	4602      	mov	r2, r0
 8002c8a:	460b      	mov	r3, r1
 8002c8c:	4909      	ldr	r1, [pc, #36]	; (8002cb4 <rt_InitInfAndNaN+0x68>)
 8002c8e:	e9c1 2300 	strd	r2, r3, [r1]
  rtMinusInfF = rtGetMinusInfF();
 8002c92:	f7ff ff5f 	bl	8002b54 <rtGetMinusInfF>
 8002c96:	4603      	mov	r3, r0
 8002c98:	4a07      	ldr	r2, [pc, #28]	; (8002cb8 <rt_InitInfAndNaN+0x6c>)
 8002c9a:	6013      	str	r3, [r2, #0]
}
 8002c9c:	bf00      	nop
 8002c9e:	3708      	adds	r7, #8
 8002ca0:	46bd      	mov	sp, r7
 8002ca2:	bd80      	pop	{r7, pc}
 8002ca4:	200002f0 	.word	0x200002f0
 8002ca8:	20000300 	.word	0x20000300
 8002cac:	200002e0 	.word	0x200002e0
 8002cb0:	200002f8 	.word	0x200002f8
 8002cb4:	200002e8 	.word	0x200002e8
 8002cb8:	200002fc 	.word	0x200002fc

08002cbc <rtIsInf>:

/* Test if value is infinite */
boolean_T rtIsInf(real_T value)
{
 8002cbc:	b580      	push	{r7, lr}
 8002cbe:	b082      	sub	sp, #8
 8002cc0:	af00      	add	r7, sp, #0
 8002cc2:	e9c7 0100 	strd	r0, r1, [r7]
  return (boolean_T)((value==rtInf || value==rtMinusInf) ? 1U : 0U);
 8002cc6:	4b0d      	ldr	r3, [pc, #52]	; (8002cfc <rtIsInf+0x40>)
 8002cc8:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002ccc:	e9d7 0100 	ldrd	r0, r1, [r7]
 8002cd0:	f7fd fe7a 	bl	80009c8 <__aeabi_dcmpeq>
 8002cd4:	4603      	mov	r3, r0
 8002cd6:	2b00      	cmp	r3, #0
 8002cd8:	d109      	bne.n	8002cee <rtIsInf+0x32>
 8002cda:	4b09      	ldr	r3, [pc, #36]	; (8002d00 <rtIsInf+0x44>)
 8002cdc:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002ce0:	e9d7 0100 	ldrd	r0, r1, [r7]
 8002ce4:	f7fd fe70 	bl	80009c8 <__aeabi_dcmpeq>
 8002ce8:	4603      	mov	r3, r0
 8002cea:	2b00      	cmp	r3, #0
 8002cec:	d001      	beq.n	8002cf2 <rtIsInf+0x36>
 8002cee:	2301      	movs	r3, #1
 8002cf0:	e000      	b.n	8002cf4 <rtIsInf+0x38>
 8002cf2:	2300      	movs	r3, #0
}
 8002cf4:	4618      	mov	r0, r3
 8002cf6:	3708      	adds	r7, #8
 8002cf8:	46bd      	mov	sp, r7
 8002cfa:	bd80      	pop	{r7, pc}
 8002cfc:	200002e0 	.word	0x200002e0
 8002d00:	200002e8 	.word	0x200002e8

08002d04 <rtIsNaN>:
  return (boolean_T)(((value)==rtInfF || (value)==rtMinusInfF) ? 1U : 0U);
}

/* Test if value is not a number */
boolean_T rtIsNaN(real_T value)
{
 8002d04:	b580      	push	{r7, lr}
 8002d06:	b08a      	sub	sp, #40	; 0x28
 8002d08:	af00      	add	r7, sp, #0
 8002d0a:	e9c7 0100 	strd	r0, r1, [r7]
  boolean_T result = (boolean_T) 0;
 8002d0e:	2300      	movs	r3, #0
 8002d10:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
  size_t bitsPerReal = sizeof(real_T) * (NumBitsPerChar);
 8002d14:	2340      	movs	r3, #64	; 0x40
 8002d16:	623b      	str	r3, [r7, #32]
  if (bitsPerReal == 32U) {
 8002d18:	6a3b      	ldr	r3, [r7, #32]
 8002d1a:	2b20      	cmp	r3, #32
 8002d1c:	d10b      	bne.n	8002d36 <rtIsNaN+0x32>
    result = rtIsNaNF((real32_T)value);
 8002d1e:	e9d7 0100 	ldrd	r0, r1, [r7]
 8002d22:	f7fd fee1 	bl	8000ae8 <__aeabi_d2f>
 8002d26:	4603      	mov	r3, r0
 8002d28:	4618      	mov	r0, r3
 8002d2a:	f000 f84d 	bl	8002dc8 <rtIsNaNF>
 8002d2e:	4603      	mov	r3, r0
 8002d30:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
 8002d34:	e040      	b.n	8002db8 <rtIsNaN+0xb4>
  } else {
    uint16_T one = 1U;
 8002d36:	2301      	movs	r3, #1
 8002d38:	83bb      	strh	r3, [r7, #28]
    enum {
      LittleEndian,
      BigEndian
    } machByteOrder = (*((uint8_T *) &one) == 1U) ? LittleEndian : BigEndian;
 8002d3a:	f107 031c 	add.w	r3, r7, #28
 8002d3e:	781b      	ldrb	r3, [r3, #0]
 8002d40:	2b01      	cmp	r3, #1
 8002d42:	bf14      	ite	ne
 8002d44:	2301      	movne	r3, #1
 8002d46:	2300      	moveq	r3, #0
 8002d48:	b2db      	uxtb	r3, r3
 8002d4a:	77fb      	strb	r3, [r7, #31]
    switch (machByteOrder) {
 8002d4c:	7ffb      	ldrb	r3, [r7, #31]
 8002d4e:	2b00      	cmp	r3, #0
 8002d50:	d002      	beq.n	8002d58 <rtIsNaN+0x54>
 8002d52:	2b01      	cmp	r3, #1
 8002d54:	d018      	beq.n	8002d88 <rtIsNaN+0x84>
 8002d56:	e02f      	b.n	8002db8 <rtIsNaN+0xb4>
        union {
          LittleEndianIEEEDouble bitVal;
          real_T fltVal;
        } tmpVal;

        tmpVal.fltVal = value;
 8002d58:	e9d7 2300 	ldrd	r2, r3, [r7]
 8002d5c:	e9c7 2304 	strd	r2, r3, [r7, #16]
        result = (boolean_T)((tmpVal.bitVal.words.wordH & 0x7FF00000) ==
 8002d60:	697a      	ldr	r2, [r7, #20]
 8002d62:	4b18      	ldr	r3, [pc, #96]	; (8002dc4 <rtIsNaN+0xc0>)
 8002d64:	4013      	ands	r3, r2
                             0x7FF00000 &&
 8002d66:	4a17      	ldr	r2, [pc, #92]	; (8002dc4 <rtIsNaN+0xc0>)
 8002d68:	4293      	cmp	r3, r2
 8002d6a:	d109      	bne.n	8002d80 <rtIsNaN+0x7c>
                             ( (tmpVal.bitVal.words.wordH & 0x000FFFFF) != 0 ||
 8002d6c:	697b      	ldr	r3, [r7, #20]
 8002d6e:	f3c3 0313 	ubfx	r3, r3, #0, #20
                             0x7FF00000 &&
 8002d72:	2b00      	cmp	r3, #0
 8002d74:	d102      	bne.n	8002d7c <rtIsNaN+0x78>
                              (tmpVal.bitVal.words.wordL != 0) ));
 8002d76:	693b      	ldr	r3, [r7, #16]
                             ( (tmpVal.bitVal.words.wordH & 0x000FFFFF) != 0 ||
 8002d78:	2b00      	cmp	r3, #0
 8002d7a:	d001      	beq.n	8002d80 <rtIsNaN+0x7c>
                             0x7FF00000 &&
 8002d7c:	2301      	movs	r3, #1
 8002d7e:	e000      	b.n	8002d82 <rtIsNaN+0x7e>
 8002d80:	2300      	movs	r3, #0
        result = (boolean_T)((tmpVal.bitVal.words.wordH & 0x7FF00000) ==
 8002d82:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
        break;
 8002d86:	e017      	b.n	8002db8 <rtIsNaN+0xb4>
        union {
          BigEndianIEEEDouble bitVal;
          real_T fltVal;
        } tmpVal;

        tmpVal.fltVal = value;
 8002d88:	e9d7 2300 	ldrd	r2, r3, [r7]
 8002d8c:	e9c7 2302 	strd	r2, r3, [r7, #8]
        result = (boolean_T)((tmpVal.bitVal.words.wordH & 0x7FF00000) ==
 8002d90:	68ba      	ldr	r2, [r7, #8]
 8002d92:	4b0c      	ldr	r3, [pc, #48]	; (8002dc4 <rtIsNaN+0xc0>)
 8002d94:	4013      	ands	r3, r2
                             0x7FF00000 &&
 8002d96:	4a0b      	ldr	r2, [pc, #44]	; (8002dc4 <rtIsNaN+0xc0>)
 8002d98:	4293      	cmp	r3, r2
 8002d9a:	d109      	bne.n	8002db0 <rtIsNaN+0xac>
                             ( (tmpVal.bitVal.words.wordH & 0x000FFFFF) != 0 ||
 8002d9c:	68bb      	ldr	r3, [r7, #8]
 8002d9e:	f3c3 0313 	ubfx	r3, r3, #0, #20
                             0x7FF00000 &&
 8002da2:	2b00      	cmp	r3, #0
 8002da4:	d102      	bne.n	8002dac <rtIsNaN+0xa8>
                              (tmpVal.bitVal.words.wordL != 0) ));
 8002da6:	68fb      	ldr	r3, [r7, #12]
                             ( (tmpVal.bitVal.words.wordH & 0x000FFFFF) != 0 ||
 8002da8:	2b00      	cmp	r3, #0
 8002daa:	d001      	beq.n	8002db0 <rtIsNaN+0xac>
                             0x7FF00000 &&
 8002dac:	2301      	movs	r3, #1
 8002dae:	e000      	b.n	8002db2 <rtIsNaN+0xae>
 8002db0:	2300      	movs	r3, #0
        result = (boolean_T)((tmpVal.bitVal.words.wordH & 0x7FF00000) ==
 8002db2:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
        break;
 8002db6:	bf00      	nop
      }
    }
  }

  return result;
 8002db8:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
}
 8002dbc:	4618      	mov	r0, r3
 8002dbe:	3728      	adds	r7, #40	; 0x28
 8002dc0:	46bd      	mov	sp, r7
 8002dc2:	bd80      	pop	{r7, pc}
 8002dc4:	7ff00000 	.word	0x7ff00000

08002dc8 <rtIsNaNF>:

/* Test if single-precision value is not a number */
boolean_T rtIsNaNF(real32_T value)
{
 8002dc8:	b480      	push	{r7}
 8002dca:	b085      	sub	sp, #20
 8002dcc:	af00      	add	r7, sp, #0
 8002dce:	6078      	str	r0, [r7, #4]
  IEEESingle tmp;
  tmp.wordL.wordLreal = value;
 8002dd0:	687b      	ldr	r3, [r7, #4]
 8002dd2:	60fb      	str	r3, [r7, #12]
  return (boolean_T)( (tmp.wordL.wordLuint & 0x7F800000) == 0x7F800000 &&
 8002dd4:	68fb      	ldr	r3, [r7, #12]
 8002dd6:	f003 43ff 	and.w	r3, r3, #2139095040	; 0x7f800000
 8002dda:	f1b3 4fff 	cmp.w	r3, #2139095040	; 0x7f800000
 8002dde:	d106      	bne.n	8002dee <rtIsNaNF+0x26>
                     (tmp.wordL.wordLuint & 0x007FFFFF) != 0 );
 8002de0:	68fb      	ldr	r3, [r7, #12]
 8002de2:	f3c3 0316 	ubfx	r3, r3, #0, #23
  return (boolean_T)( (tmp.wordL.wordLuint & 0x7F800000) == 0x7F800000 &&
 8002de6:	2b00      	cmp	r3, #0
 8002de8:	d001      	beq.n	8002dee <rtIsNaNF+0x26>
 8002dea:	2301      	movs	r3, #1
 8002dec:	e000      	b.n	8002df0 <rtIsNaNF+0x28>
 8002dee:	2300      	movs	r3, #0
 8002df0:	b2db      	uxtb	r3, r3
}
 8002df2:	4618      	mov	r0, r3
 8002df4:	3714      	adds	r7, #20
 8002df6:	46bd      	mov	sp, r7
 8002df8:	bc80      	pop	{r7}
 8002dfa:	4770      	bx	lr

08002dfc <_getpid>:
void initialise_monitor_handles()
{
}

int _getpid(void)
{
 8002dfc:	b480      	push	{r7}
 8002dfe:	af00      	add	r7, sp, #0
  return 1;
 8002e00:	2301      	movs	r3, #1
}
 8002e02:	4618      	mov	r0, r3
 8002e04:	46bd      	mov	sp, r7
 8002e06:	bc80      	pop	{r7}
 8002e08:	4770      	bx	lr

08002e0a <_kill>:

int _kill(int pid, int sig)
{
 8002e0a:	b580      	push	{r7, lr}
 8002e0c:	b082      	sub	sp, #8
 8002e0e:	af00      	add	r7, sp, #0
 8002e10:	6078      	str	r0, [r7, #4]
 8002e12:	6039      	str	r1, [r7, #0]
  (void)pid;
  (void)sig;
  errno = EINVAL;
 8002e14:	f001 f99c 	bl	8004150 <__errno>
 8002e18:	4603      	mov	r3, r0
 8002e1a:	2216      	movs	r2, #22
 8002e1c:	601a      	str	r2, [r3, #0]
  return -1;
 8002e1e:	f04f 33ff 	mov.w	r3, #4294967295
}
 8002e22:	4618      	mov	r0, r3
 8002e24:	3708      	adds	r7, #8
 8002e26:	46bd      	mov	sp, r7
 8002e28:	bd80      	pop	{r7, pc}

08002e2a <_exit>:

void _exit (int status)
{
 8002e2a:	b580      	push	{r7, lr}
 8002e2c:	b082      	sub	sp, #8
 8002e2e:	af00      	add	r7, sp, #0
 8002e30:	6078      	str	r0, [r7, #4]
  _kill(status, -1);
 8002e32:	f04f 31ff 	mov.w	r1, #4294967295
 8002e36:	6878      	ldr	r0, [r7, #4]
 8002e38:	f7ff ffe7 	bl	8002e0a <_kill>
  while (1) {}    /* Make sure we hang here */
 8002e3c:	e7fe      	b.n	8002e3c <_exit+0x12>

08002e3e <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8002e3e:	b580      	push	{r7, lr}
 8002e40:	b086      	sub	sp, #24
 8002e42:	af00      	add	r7, sp, #0
 8002e44:	60f8      	str	r0, [r7, #12]
 8002e46:	60b9      	str	r1, [r7, #8]
 8002e48:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8002e4a:	2300      	movs	r3, #0
 8002e4c:	617b      	str	r3, [r7, #20]
 8002e4e:	e00a      	b.n	8002e66 <_read+0x28>
  {
    *ptr++ = __io_getchar();
 8002e50:	f3af 8000 	nop.w
 8002e54:	4601      	mov	r1, r0
 8002e56:	68bb      	ldr	r3, [r7, #8]
 8002e58:	1c5a      	adds	r2, r3, #1
 8002e5a:	60ba      	str	r2, [r7, #8]
 8002e5c:	b2ca      	uxtb	r2, r1
 8002e5e:	701a      	strb	r2, [r3, #0]
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8002e60:	697b      	ldr	r3, [r7, #20]
 8002e62:	3301      	adds	r3, #1
 8002e64:	617b      	str	r3, [r7, #20]
 8002e66:	697a      	ldr	r2, [r7, #20]
 8002e68:	687b      	ldr	r3, [r7, #4]
 8002e6a:	429a      	cmp	r2, r3
 8002e6c:	dbf0      	blt.n	8002e50 <_read+0x12>
  }

  return len;
 8002e6e:	687b      	ldr	r3, [r7, #4]
}
 8002e70:	4618      	mov	r0, r3
 8002e72:	3718      	adds	r7, #24
 8002e74:	46bd      	mov	sp, r7
 8002e76:	bd80      	pop	{r7, pc}

08002e78 <_close>:
  }
  return len;
}

int _close(int file)
{
 8002e78:	b480      	push	{r7}
 8002e7a:	b083      	sub	sp, #12
 8002e7c:	af00      	add	r7, sp, #0
 8002e7e:	6078      	str	r0, [r7, #4]
  (void)file;
  return -1;
 8002e80:	f04f 33ff 	mov.w	r3, #4294967295
}
 8002e84:	4618      	mov	r0, r3
 8002e86:	370c      	adds	r7, #12
 8002e88:	46bd      	mov	sp, r7
 8002e8a:	bc80      	pop	{r7}
 8002e8c:	4770      	bx	lr

08002e8e <_fstat>:


int _fstat(int file, struct stat *st)
{
 8002e8e:	b480      	push	{r7}
 8002e90:	b083      	sub	sp, #12
 8002e92:	af00      	add	r7, sp, #0
 8002e94:	6078      	str	r0, [r7, #4]
 8002e96:	6039      	str	r1, [r7, #0]
  (void)file;
  st->st_mode = S_IFCHR;
 8002e98:	683b      	ldr	r3, [r7, #0]
 8002e9a:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 8002e9e:	605a      	str	r2, [r3, #4]
  return 0;
 8002ea0:	2300      	movs	r3, #0
}
 8002ea2:	4618      	mov	r0, r3
 8002ea4:	370c      	adds	r7, #12
 8002ea6:	46bd      	mov	sp, r7
 8002ea8:	bc80      	pop	{r7}
 8002eaa:	4770      	bx	lr

08002eac <_isatty>:

int _isatty(int file)
{
 8002eac:	b480      	push	{r7}
 8002eae:	b083      	sub	sp, #12
 8002eb0:	af00      	add	r7, sp, #0
 8002eb2:	6078      	str	r0, [r7, #4]
  (void)file;
  return 1;
 8002eb4:	2301      	movs	r3, #1
}
 8002eb6:	4618      	mov	r0, r3
 8002eb8:	370c      	adds	r7, #12
 8002eba:	46bd      	mov	sp, r7
 8002ebc:	bc80      	pop	{r7}
 8002ebe:	4770      	bx	lr

08002ec0 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 8002ec0:	b480      	push	{r7}
 8002ec2:	b085      	sub	sp, #20
 8002ec4:	af00      	add	r7, sp, #0
 8002ec6:	60f8      	str	r0, [r7, #12]
 8002ec8:	60b9      	str	r1, [r7, #8]
 8002eca:	607a      	str	r2, [r7, #4]
  (void)file;
  (void)ptr;
  (void)dir;
  return 0;
 8002ecc:	2300      	movs	r3, #0
}
 8002ece:	4618      	mov	r0, r3
 8002ed0:	3714      	adds	r7, #20
 8002ed2:	46bd      	mov	sp, r7
 8002ed4:	bc80      	pop	{r7}
 8002ed6:	4770      	bx	lr

08002ed8 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 8002ed8:	b580      	push	{r7, lr}
 8002eda:	b086      	sub	sp, #24
 8002edc:	af00      	add	r7, sp, #0
 8002ede:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 8002ee0:	4a14      	ldr	r2, [pc, #80]	; (8002f34 <_sbrk+0x5c>)
 8002ee2:	4b15      	ldr	r3, [pc, #84]	; (8002f38 <_sbrk+0x60>)
 8002ee4:	1ad3      	subs	r3, r2, r3
 8002ee6:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 8002ee8:	697b      	ldr	r3, [r7, #20]
 8002eea:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 8002eec:	4b13      	ldr	r3, [pc, #76]	; (8002f3c <_sbrk+0x64>)
 8002eee:	681b      	ldr	r3, [r3, #0]
 8002ef0:	2b00      	cmp	r3, #0
 8002ef2:	d102      	bne.n	8002efa <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 8002ef4:	4b11      	ldr	r3, [pc, #68]	; (8002f3c <_sbrk+0x64>)
 8002ef6:	4a12      	ldr	r2, [pc, #72]	; (8002f40 <_sbrk+0x68>)
 8002ef8:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 8002efa:	4b10      	ldr	r3, [pc, #64]	; (8002f3c <_sbrk+0x64>)
 8002efc:	681a      	ldr	r2, [r3, #0]
 8002efe:	687b      	ldr	r3, [r7, #4]
 8002f00:	4413      	add	r3, r2
 8002f02:	693a      	ldr	r2, [r7, #16]
 8002f04:	429a      	cmp	r2, r3
 8002f06:	d207      	bcs.n	8002f18 <_sbrk+0x40>
  {
    errno = ENOMEM;
 8002f08:	f001 f922 	bl	8004150 <__errno>
 8002f0c:	4603      	mov	r3, r0
 8002f0e:	220c      	movs	r2, #12
 8002f10:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 8002f12:	f04f 33ff 	mov.w	r3, #4294967295
 8002f16:	e009      	b.n	8002f2c <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 8002f18:	4b08      	ldr	r3, [pc, #32]	; (8002f3c <_sbrk+0x64>)
 8002f1a:	681b      	ldr	r3, [r3, #0]
 8002f1c:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 8002f1e:	4b07      	ldr	r3, [pc, #28]	; (8002f3c <_sbrk+0x64>)
 8002f20:	681a      	ldr	r2, [r3, #0]
 8002f22:	687b      	ldr	r3, [r7, #4]
 8002f24:	4413      	add	r3, r2
 8002f26:	4a05      	ldr	r2, [pc, #20]	; (8002f3c <_sbrk+0x64>)
 8002f28:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 8002f2a:	68fb      	ldr	r3, [r7, #12]
}
 8002f2c:	4618      	mov	r0, r3
 8002f2e:	3718      	adds	r7, #24
 8002f30:	46bd      	mov	sp, r7
 8002f32:	bd80      	pop	{r7, pc}
 8002f34:	20005000 	.word	0x20005000
 8002f38:	00000400 	.word	0x00000400
 8002f3c:	20000304 	.word	0x20000304
 8002f40:	20000458 	.word	0x20000458

08002f44 <USER_TIM2_Init>:
 */

#include "main.h"
#include "timer.h"

void USER_TIM2_Init( void ) {
 8002f44:	b480      	push	{r7}
 8002f46:	af00      	add	r7, sp, #0

	TIM2->SMCR	&=	~(TIM_SMCR_SMS);	//	Step 1 - Enable internal clock source
 8002f48:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8002f4c:	689b      	ldr	r3, [r3, #8]
 8002f4e:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 8002f52:	f023 0307 	bic.w	r3, r3, #7
 8002f56:	6093      	str	r3, [r2, #8]
	TIM2->CR1	&=	~(TIM_CR1_UDIS);	//	Step 2 - UEV enabled
 8002f58:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8002f5c:	681b      	ldr	r3, [r3, #0]
 8002f5e:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 8002f62:	f023 0302 	bic.w	r3, r3, #2
 8002f66:	6013      	str	r3, [r2, #0]
	TIM2->CR1	&=	~(TIM_CR1_DIR);		// 		Counter as upcounter
 8002f68:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8002f6c:	681b      	ldr	r3, [r3, #0]
 8002f6e:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 8002f72:	f023 0310 	bic.w	r3, r3, #16
 8002f76:	6013      	str	r3, [r2, #0]
	TIM2->CR1	&=	~(TIM_CR1_CMS);		//		Edge-aligned mode
 8002f78:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8002f7c:	681b      	ldr	r3, [r3, #0]
 8002f7e:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 8002f82:	f023 0360 	bic.w	r3, r3, #96	; 0x60
 8002f86:	6013      	str	r3, [r2, #0]
	TIM2->SR	&=	~(TIM_SR_UIF);		//	Step 3 - Clear Update Interrupt Flag
 8002f88:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8002f8c:	691b      	ldr	r3, [r3, #16]
 8002f8e:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 8002f92:	f023 0301 	bic.w	r3, r3, #1
 8002f96:	6113      	str	r3, [r2, #16]
}
 8002f98:	bf00      	nop
 8002f9a:	46bd      	mov	sp, r7
 8002f9c:	bc80      	pop	{r7}
 8002f9e:	4770      	bx	lr

08002fa0 <USER_TIM2_Delay>:

void USER_TIM2_Delay( uint16_t TIM_PSC, uint16_t TIM_CNT ) {
 8002fa0:	b480      	push	{r7}
 8002fa2:	b083      	sub	sp, #12
 8002fa4:	af00      	add	r7, sp, #0
 8002fa6:	4603      	mov	r3, r0
 8002fa8:	460a      	mov	r2, r1
 8002faa:	80fb      	strh	r3, [r7, #6]
 8002fac:	4613      	mov	r3, r2
 8002fae:	80bb      	strh	r3, [r7, #4]

	TIM2->PSC	=	TIM_PSC;		//	Configure initial prescaler and count values
 8002fb0:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 8002fb4:	88fb      	ldrh	r3, [r7, #6]
 8002fb6:	6293      	str	r3, [r2, #40]	; 0x28
	TIM2->CNT	=	TIM_CNT;
 8002fb8:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 8002fbc:	88bb      	ldrh	r3, [r7, #4]
 8002fbe:	6253      	str	r3, [r2, #36]	; 0x24

	TIM2->CR1	|=	TIM_CR1_CEN;		//	Enable TIM2 timer to start counting
 8002fc0:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8002fc4:	681b      	ldr	r3, [r3, #0]
 8002fc6:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 8002fca:	f043 0301 	orr.w	r3, r3, #1
 8002fce:	6013      	str	r3, [r2, #0]

	while(!( TIM2->SR & TIM_SR_UIF ));		//	Wait for UIF
 8002fd0:	bf00      	nop
 8002fd2:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8002fd6:	691b      	ldr	r3, [r3, #16]
 8002fd8:	f003 0301 	and.w	r3, r3, #1
 8002fdc:	2b00      	cmp	r3, #0
 8002fde:	d0f8      	beq.n	8002fd2 <USER_TIM2_Delay+0x32>
	TIM2->CR1	&=	~(TIM_CR1_CEN);		//	Stop TIM2 timer
 8002fe0:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8002fe4:	681b      	ldr	r3, [r3, #0]
 8002fe6:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 8002fea:	f023 0301 	bic.w	r3, r3, #1
 8002fee:	6013      	str	r3, [r2, #0]

	TIM2->SR	&=	~(TIM_SR_UIF);		//	Clear UIF
 8002ff0:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8002ff4:	691b      	ldr	r3, [r3, #16]
 8002ff6:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 8002ffa:	f023 0301 	bic.w	r3, r3, #1
 8002ffe:	6113      	str	r3, [r2, #16]
}
 8003000:	bf00      	nop
 8003002:	370c      	adds	r7, #12
 8003004:	46bd      	mov	sp, r7
 8003006:	bc80      	pop	{r7}
 8003008:	4770      	bx	lr
	...

0800300c <USER_USART1_Init>:

#include "main.h"
#include "uart.h"

void USER_USART1_Init( void ) 
{
 800300c:	b480      	push	{r7}
 800300e:	af00      	add	r7, sp, #0
	
  USART1->CR1	|=	 USART_CR1_UE;		//	Step 1 - USART enabled
 8003010:	4b11      	ldr	r3, [pc, #68]	; (8003058 <USER_USART1_Init+0x4c>)
 8003012:	68db      	ldr	r3, [r3, #12]
 8003014:	4a10      	ldr	r2, [pc, #64]	; (8003058 <USER_USART1_Init+0x4c>)
 8003016:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 800301a:	60d3      	str	r3, [r2, #12]
  USART1->CR1	&=	~USART_CR1_M;		//	Step 2 - 8 Data bits
 800301c:	4b0e      	ldr	r3, [pc, #56]	; (8003058 <USER_USART1_Init+0x4c>)
 800301e:	68db      	ldr	r3, [r3, #12]
 8003020:	4a0d      	ldr	r2, [pc, #52]	; (8003058 <USER_USART1_Init+0x4c>)
 8003022:	f423 53ff 	bic.w	r3, r3, #8160	; 0x1fe0
 8003026:	f023 031f 	bic.w	r3, r3, #31
 800302a:	60d3      	str	r3, [r2, #12]
  USART1->CR2	&=	~USART_CR2_STOP;	//	Step 3 - 1 Stop bit
 800302c:	4b0a      	ldr	r3, [pc, #40]	; (8003058 <USER_USART1_Init+0x4c>)
 800302e:	691b      	ldr	r3, [r3, #16]
 8003030:	4a09      	ldr	r2, [pc, #36]	; (8003058 <USER_USART1_Init+0x4c>)
 8003032:	f423 537f 	bic.w	r3, r3, #16320	; 0x3fc0
 8003036:	f023 033f 	bic.w	r3, r3, #63	; 0x3f
 800303a:	6113      	str	r3, [r2, #16]
  USART1->BRR	 =	 USARTDIV;		//	Step 5 - Desired baud rate
 800303c:	4b06      	ldr	r3, [pc, #24]	; (8003058 <USER_USART1_Init+0x4c>)
 800303e:	f240 222b 	movw	r2, #555	; 0x22b
 8003042:	609a      	str	r2, [r3, #8]
  USART1->CR1	|= 	 USART_CR1_TE;		//	Step 6 - Transmitter enabled
 8003044:	4b04      	ldr	r3, [pc, #16]	; (8003058 <USER_USART1_Init+0x4c>)
 8003046:	68db      	ldr	r3, [r3, #12]
 8003048:	4a03      	ldr	r2, [pc, #12]	; (8003058 <USER_USART1_Init+0x4c>)
 800304a:	f043 0308 	orr.w	r3, r3, #8
 800304e:	60d3      	str	r3, [r2, #12]
	
}
 8003050:	bf00      	nop
 8003052:	46bd      	mov	sp, r7
 8003054:	bc80      	pop	{r7}
 8003056:	4770      	bx	lr
 8003058:	40013800 	.word	0x40013800

0800305c <_write>:
 *
 * It redirects standard output stream in C to USART peripheral
 * device */

int _write( int file, char *ptr, int len )
{
 800305c:	b480      	push	{r7}
 800305e:	b087      	sub	sp, #28
 8003060:	af00      	add	r7, sp, #0
 8003062:	60f8      	str	r0, [r7, #12]
 8003064:	60b9      	str	r1, [r7, #8]
 8003066:	607a      	str	r2, [r7, #4]

  int DataIdx;

  for( DataIdx = 0 ; DataIdx < len; DataIdx++ ) {
 8003068:	2300      	movs	r3, #0
 800306a:	617b      	str	r3, [r7, #20]
 800306c:	e00f      	b.n	800308e <_write+0x32>
    while(!( USART1->SR & USART_SR_TXE ));	// Wait until USART_DR is empty
 800306e:	bf00      	nop
 8003070:	4b0c      	ldr	r3, [pc, #48]	; (80030a4 <_write+0x48>)
 8003072:	681b      	ldr	r3, [r3, #0]
 8003074:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8003078:	2b00      	cmp	r3, #0
 800307a:	d0f9      	beq.n	8003070 <_write+0x14>
    USART1->DR = *ptr++;			// Transmit data
 800307c:	68bb      	ldr	r3, [r7, #8]
 800307e:	1c5a      	adds	r2, r3, #1
 8003080:	60ba      	str	r2, [r7, #8]
 8003082:	781a      	ldrb	r2, [r3, #0]
 8003084:	4b07      	ldr	r3, [pc, #28]	; (80030a4 <_write+0x48>)
 8003086:	605a      	str	r2, [r3, #4]
  for( DataIdx = 0 ; DataIdx < len; DataIdx++ ) {
 8003088:	697b      	ldr	r3, [r7, #20]
 800308a:	3301      	adds	r3, #1
 800308c:	617b      	str	r3, [r7, #20]
 800308e:	697a      	ldr	r2, [r7, #20]
 8003090:	687b      	ldr	r3, [r7, #4]
 8003092:	429a      	cmp	r2, r3
 8003094:	dbeb      	blt.n	800306e <_write+0x12>
  }

  return len;
 8003096:	687b      	ldr	r3, [r7, #4]
	
}
 8003098:	4618      	mov	r0, r3
 800309a:	371c      	adds	r7, #28
 800309c:	46bd      	mov	sp, r7
 800309e:	bc80      	pop	{r7}
 80030a0:	4770      	bx	lr
 80030a2:	bf00      	nop
 80030a4:	40013800 	.word	0x40013800

080030a8 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
   ldr   r0, =_estack
 80030a8:	480d      	ldr	r0, [pc, #52]	; (80030e0 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 80030aa:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 80030ac:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 80030b0:	480c      	ldr	r0, [pc, #48]	; (80030e4 <LoopForever+0x6>)
  ldr r1, =_edata
 80030b2:	490d      	ldr	r1, [pc, #52]	; (80030e8 <LoopForever+0xa>)
  ldr r2, =_sidata
 80030b4:	4a0d      	ldr	r2, [pc, #52]	; (80030ec <LoopForever+0xe>)
  movs r3, #0
 80030b6:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80030b8:	e002      	b.n	80030c0 <LoopCopyDataInit>

080030ba <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80030ba:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80030bc:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80030be:	3304      	adds	r3, #4

080030c0 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80030c0:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80030c2:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80030c4:	d3f9      	bcc.n	80030ba <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80030c6:	4a0a      	ldr	r2, [pc, #40]	; (80030f0 <LoopForever+0x12>)
  ldr r4, =_ebss
 80030c8:	4c0a      	ldr	r4, [pc, #40]	; (80030f4 <LoopForever+0x16>)
  movs r3, #0
 80030ca:	2300      	movs	r3, #0
  b LoopFillZerobss
 80030cc:	e001      	b.n	80030d2 <LoopFillZerobss>

080030ce <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80030ce:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80030d0:	3204      	adds	r2, #4

080030d2 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80030d2:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80030d4:	d3fb      	bcc.n	80030ce <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 80030d6:	f001 f841 	bl	800415c <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 80030da:	f7ff f9dd 	bl	8002498 <main>

080030de <LoopForever>:

LoopForever:
  b LoopForever
 80030de:	e7fe      	b.n	80030de <LoopForever>
   ldr   r0, =_estack
 80030e0:	20005000 	.word	0x20005000
  ldr r0, =_sdata
 80030e4:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80030e8:	20000200 	.word	0x20000200
  ldr r2, =_sidata
 80030ec:	08009588 	.word	0x08009588
  ldr r2, =_sbss
 80030f0:	20000200 	.word	0x20000200
  ldr r4, =_ebss
 80030f4:	20000454 	.word	0x20000454

080030f8 <ADC1_2_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80030f8:	e7fe      	b.n	80030f8 <ADC1_2_IRQHandler>

080030fa <__cvt>:
 80030fa:	2b00      	cmp	r3, #0
 80030fc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8003100:	461f      	mov	r7, r3
 8003102:	bfbb      	ittet	lt
 8003104:	f103 4300 	addlt.w	r3, r3, #2147483648	; 0x80000000
 8003108:	461f      	movlt	r7, r3
 800310a:	2300      	movge	r3, #0
 800310c:	232d      	movlt	r3, #45	; 0x2d
 800310e:	b088      	sub	sp, #32
 8003110:	4614      	mov	r4, r2
 8003112:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8003114:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8003116:	7013      	strb	r3, [r2, #0]
 8003118:	9b14      	ldr	r3, [sp, #80]	; 0x50
 800311a:	f8dd a04c 	ldr.w	sl, [sp, #76]	; 0x4c
 800311e:	f023 0820 	bic.w	r8, r3, #32
 8003122:	f1b8 0f46 	cmp.w	r8, #70	; 0x46
 8003126:	d005      	beq.n	8003134 <__cvt+0x3a>
 8003128:	f1b8 0f45 	cmp.w	r8, #69	; 0x45
 800312c:	d100      	bne.n	8003130 <__cvt+0x36>
 800312e:	3501      	adds	r5, #1
 8003130:	2302      	movs	r3, #2
 8003132:	e000      	b.n	8003136 <__cvt+0x3c>
 8003134:	2303      	movs	r3, #3
 8003136:	aa07      	add	r2, sp, #28
 8003138:	9204      	str	r2, [sp, #16]
 800313a:	aa06      	add	r2, sp, #24
 800313c:	e9cd a202 	strd	sl, r2, [sp, #8]
 8003140:	e9cd 3500 	strd	r3, r5, [sp]
 8003144:	4622      	mov	r2, r4
 8003146:	463b      	mov	r3, r7
 8003148:	f001 f8ce 	bl	80042e8 <_dtoa_r>
 800314c:	f1b8 0f47 	cmp.w	r8, #71	; 0x47
 8003150:	4606      	mov	r6, r0
 8003152:	d102      	bne.n	800315a <__cvt+0x60>
 8003154:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8003156:	07db      	lsls	r3, r3, #31
 8003158:	d522      	bpl.n	80031a0 <__cvt+0xa6>
 800315a:	f1b8 0f46 	cmp.w	r8, #70	; 0x46
 800315e:	eb06 0905 	add.w	r9, r6, r5
 8003162:	d110      	bne.n	8003186 <__cvt+0x8c>
 8003164:	7833      	ldrb	r3, [r6, #0]
 8003166:	2b30      	cmp	r3, #48	; 0x30
 8003168:	d10a      	bne.n	8003180 <__cvt+0x86>
 800316a:	2200      	movs	r2, #0
 800316c:	2300      	movs	r3, #0
 800316e:	4620      	mov	r0, r4
 8003170:	4639      	mov	r1, r7
 8003172:	f7fd fc29 	bl	80009c8 <__aeabi_dcmpeq>
 8003176:	b918      	cbnz	r0, 8003180 <__cvt+0x86>
 8003178:	f1c5 0501 	rsb	r5, r5, #1
 800317c:	f8ca 5000 	str.w	r5, [sl]
 8003180:	f8da 3000 	ldr.w	r3, [sl]
 8003184:	4499      	add	r9, r3
 8003186:	2200      	movs	r2, #0
 8003188:	2300      	movs	r3, #0
 800318a:	4620      	mov	r0, r4
 800318c:	4639      	mov	r1, r7
 800318e:	f7fd fc1b 	bl	80009c8 <__aeabi_dcmpeq>
 8003192:	b108      	cbz	r0, 8003198 <__cvt+0x9e>
 8003194:	f8cd 901c 	str.w	r9, [sp, #28]
 8003198:	2230      	movs	r2, #48	; 0x30
 800319a:	9b07      	ldr	r3, [sp, #28]
 800319c:	454b      	cmp	r3, r9
 800319e:	d307      	bcc.n	80031b0 <__cvt+0xb6>
 80031a0:	4630      	mov	r0, r6
 80031a2:	9b07      	ldr	r3, [sp, #28]
 80031a4:	9a15      	ldr	r2, [sp, #84]	; 0x54
 80031a6:	1b9b      	subs	r3, r3, r6
 80031a8:	6013      	str	r3, [r2, #0]
 80031aa:	b008      	add	sp, #32
 80031ac:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80031b0:	1c59      	adds	r1, r3, #1
 80031b2:	9107      	str	r1, [sp, #28]
 80031b4:	701a      	strb	r2, [r3, #0]
 80031b6:	e7f0      	b.n	800319a <__cvt+0xa0>

080031b8 <__exponent>:
 80031b8:	4603      	mov	r3, r0
 80031ba:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80031bc:	2900      	cmp	r1, #0
 80031be:	f803 2b02 	strb.w	r2, [r3], #2
 80031c2:	bfb6      	itet	lt
 80031c4:	222d      	movlt	r2, #45	; 0x2d
 80031c6:	222b      	movge	r2, #43	; 0x2b
 80031c8:	4249      	neglt	r1, r1
 80031ca:	2909      	cmp	r1, #9
 80031cc:	7042      	strb	r2, [r0, #1]
 80031ce:	dd2a      	ble.n	8003226 <__exponent+0x6e>
 80031d0:	f10d 0207 	add.w	r2, sp, #7
 80031d4:	4617      	mov	r7, r2
 80031d6:	260a      	movs	r6, #10
 80031d8:	fb91 f5f6 	sdiv	r5, r1, r6
 80031dc:	4694      	mov	ip, r2
 80031de:	fb06 1415 	mls	r4, r6, r5, r1
 80031e2:	3430      	adds	r4, #48	; 0x30
 80031e4:	f80c 4c01 	strb.w	r4, [ip, #-1]
 80031e8:	460c      	mov	r4, r1
 80031ea:	2c63      	cmp	r4, #99	; 0x63
 80031ec:	4629      	mov	r1, r5
 80031ee:	f102 32ff 	add.w	r2, r2, #4294967295
 80031f2:	dcf1      	bgt.n	80031d8 <__exponent+0x20>
 80031f4:	3130      	adds	r1, #48	; 0x30
 80031f6:	f1ac 0402 	sub.w	r4, ip, #2
 80031fa:	f802 1c01 	strb.w	r1, [r2, #-1]
 80031fe:	4622      	mov	r2, r4
 8003200:	1c41      	adds	r1, r0, #1
 8003202:	42ba      	cmp	r2, r7
 8003204:	d30a      	bcc.n	800321c <__exponent+0x64>
 8003206:	f10d 0209 	add.w	r2, sp, #9
 800320a:	eba2 020c 	sub.w	r2, r2, ip
 800320e:	42bc      	cmp	r4, r7
 8003210:	bf88      	it	hi
 8003212:	2200      	movhi	r2, #0
 8003214:	4413      	add	r3, r2
 8003216:	1a18      	subs	r0, r3, r0
 8003218:	b003      	add	sp, #12
 800321a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800321c:	f812 5b01 	ldrb.w	r5, [r2], #1
 8003220:	f801 5f01 	strb.w	r5, [r1, #1]!
 8003224:	e7ed      	b.n	8003202 <__exponent+0x4a>
 8003226:	2330      	movs	r3, #48	; 0x30
 8003228:	3130      	adds	r1, #48	; 0x30
 800322a:	7083      	strb	r3, [r0, #2]
 800322c:	70c1      	strb	r1, [r0, #3]
 800322e:	1d03      	adds	r3, r0, #4
 8003230:	e7f1      	b.n	8003216 <__exponent+0x5e>
	...

08003234 <_printf_float>:
 8003234:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003238:	b091      	sub	sp, #68	; 0x44
 800323a:	460c      	mov	r4, r1
 800323c:	f8dd 8068 	ldr.w	r8, [sp, #104]	; 0x68
 8003240:	4616      	mov	r6, r2
 8003242:	461f      	mov	r7, r3
 8003244:	4605      	mov	r5, r0
 8003246:	f000 ff39 	bl	80040bc <_localeconv_r>
 800324a:	6803      	ldr	r3, [r0, #0]
 800324c:	4618      	mov	r0, r3
 800324e:	9309      	str	r3, [sp, #36]	; 0x24
 8003250:	f7fc ff8e 	bl	8000170 <strlen>
 8003254:	2300      	movs	r3, #0
 8003256:	930e      	str	r3, [sp, #56]	; 0x38
 8003258:	f8d8 3000 	ldr.w	r3, [r8]
 800325c:	900a      	str	r0, [sp, #40]	; 0x28
 800325e:	3307      	adds	r3, #7
 8003260:	f023 0307 	bic.w	r3, r3, #7
 8003264:	f103 0208 	add.w	r2, r3, #8
 8003268:	f894 9018 	ldrb.w	r9, [r4, #24]
 800326c:	f8d4 b000 	ldr.w	fp, [r4]
 8003270:	f8c8 2000 	str.w	r2, [r8]
 8003274:	e9d3 a800 	ldrd	sl, r8, [r3]
 8003278:	4652      	mov	r2, sl
 800327a:	4643      	mov	r3, r8
 800327c:	e9c4 2312 	strd	r2, r3, [r4, #72]	; 0x48
 8003280:	f028 4300 	bic.w	r3, r8, #2147483648	; 0x80000000
 8003284:	930b      	str	r3, [sp, #44]	; 0x2c
 8003286:	f04f 32ff 	mov.w	r2, #4294967295
 800328a:	4650      	mov	r0, sl
 800328c:	4b9c      	ldr	r3, [pc, #624]	; (8003500 <_printf_float+0x2cc>)
 800328e:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8003290:	f7fd fbcc 	bl	8000a2c <__aeabi_dcmpun>
 8003294:	bb70      	cbnz	r0, 80032f4 <_printf_float+0xc0>
 8003296:	f04f 32ff 	mov.w	r2, #4294967295
 800329a:	4650      	mov	r0, sl
 800329c:	4b98      	ldr	r3, [pc, #608]	; (8003500 <_printf_float+0x2cc>)
 800329e:	990b      	ldr	r1, [sp, #44]	; 0x2c
 80032a0:	f7fd fba6 	bl	80009f0 <__aeabi_dcmple>
 80032a4:	bb30      	cbnz	r0, 80032f4 <_printf_float+0xc0>
 80032a6:	2200      	movs	r2, #0
 80032a8:	2300      	movs	r3, #0
 80032aa:	4650      	mov	r0, sl
 80032ac:	4641      	mov	r1, r8
 80032ae:	f7fd fb95 	bl	80009dc <__aeabi_dcmplt>
 80032b2:	b110      	cbz	r0, 80032ba <_printf_float+0x86>
 80032b4:	232d      	movs	r3, #45	; 0x2d
 80032b6:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 80032ba:	4a92      	ldr	r2, [pc, #584]	; (8003504 <_printf_float+0x2d0>)
 80032bc:	4b92      	ldr	r3, [pc, #584]	; (8003508 <_printf_float+0x2d4>)
 80032be:	f1b9 0f47 	cmp.w	r9, #71	; 0x47
 80032c2:	bf94      	ite	ls
 80032c4:	4690      	movls	r8, r2
 80032c6:	4698      	movhi	r8, r3
 80032c8:	2303      	movs	r3, #3
 80032ca:	f04f 0a00 	mov.w	sl, #0
 80032ce:	6123      	str	r3, [r4, #16]
 80032d0:	f02b 0304 	bic.w	r3, fp, #4
 80032d4:	6023      	str	r3, [r4, #0]
 80032d6:	4633      	mov	r3, r6
 80032d8:	4621      	mov	r1, r4
 80032da:	4628      	mov	r0, r5
 80032dc:	9700      	str	r7, [sp, #0]
 80032de:	aa0f      	add	r2, sp, #60	; 0x3c
 80032e0:	f000 f9d6 	bl	8003690 <_printf_common>
 80032e4:	3001      	adds	r0, #1
 80032e6:	f040 8090 	bne.w	800340a <_printf_float+0x1d6>
 80032ea:	f04f 30ff 	mov.w	r0, #4294967295
 80032ee:	b011      	add	sp, #68	; 0x44
 80032f0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80032f4:	4652      	mov	r2, sl
 80032f6:	4643      	mov	r3, r8
 80032f8:	4650      	mov	r0, sl
 80032fa:	4641      	mov	r1, r8
 80032fc:	f7fd fb96 	bl	8000a2c <__aeabi_dcmpun>
 8003300:	b148      	cbz	r0, 8003316 <_printf_float+0xe2>
 8003302:	f1b8 0f00 	cmp.w	r8, #0
 8003306:	bfb8      	it	lt
 8003308:	232d      	movlt	r3, #45	; 0x2d
 800330a:	4a80      	ldr	r2, [pc, #512]	; (800350c <_printf_float+0x2d8>)
 800330c:	bfb8      	it	lt
 800330e:	f884 3043 	strblt.w	r3, [r4, #67]	; 0x43
 8003312:	4b7f      	ldr	r3, [pc, #508]	; (8003510 <_printf_float+0x2dc>)
 8003314:	e7d3      	b.n	80032be <_printf_float+0x8a>
 8003316:	6863      	ldr	r3, [r4, #4]
 8003318:	f009 01df 	and.w	r1, r9, #223	; 0xdf
 800331c:	1c5a      	adds	r2, r3, #1
 800331e:	d142      	bne.n	80033a6 <_printf_float+0x172>
 8003320:	2306      	movs	r3, #6
 8003322:	6063      	str	r3, [r4, #4]
 8003324:	2200      	movs	r2, #0
 8003326:	9206      	str	r2, [sp, #24]
 8003328:	aa0e      	add	r2, sp, #56	; 0x38
 800332a:	e9cd 9204 	strd	r9, r2, [sp, #16]
 800332e:	aa0d      	add	r2, sp, #52	; 0x34
 8003330:	f44b 6380 	orr.w	r3, fp, #1024	; 0x400
 8003334:	9203      	str	r2, [sp, #12]
 8003336:	f10d 0233 	add.w	r2, sp, #51	; 0x33
 800333a:	e9cd 3201 	strd	r3, r2, [sp, #4]
 800333e:	6023      	str	r3, [r4, #0]
 8003340:	6863      	ldr	r3, [r4, #4]
 8003342:	4652      	mov	r2, sl
 8003344:	9300      	str	r3, [sp, #0]
 8003346:	4628      	mov	r0, r5
 8003348:	4643      	mov	r3, r8
 800334a:	910b      	str	r1, [sp, #44]	; 0x2c
 800334c:	f7ff fed5 	bl	80030fa <__cvt>
 8003350:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8003352:	4680      	mov	r8, r0
 8003354:	2947      	cmp	r1, #71	; 0x47
 8003356:	990d      	ldr	r1, [sp, #52]	; 0x34
 8003358:	d108      	bne.n	800336c <_printf_float+0x138>
 800335a:	1cc8      	adds	r0, r1, #3
 800335c:	db02      	blt.n	8003364 <_printf_float+0x130>
 800335e:	6863      	ldr	r3, [r4, #4]
 8003360:	4299      	cmp	r1, r3
 8003362:	dd40      	ble.n	80033e6 <_printf_float+0x1b2>
 8003364:	f1a9 0902 	sub.w	r9, r9, #2
 8003368:	fa5f f989 	uxtb.w	r9, r9
 800336c:	f1b9 0f65 	cmp.w	r9, #101	; 0x65
 8003370:	d81f      	bhi.n	80033b2 <_printf_float+0x17e>
 8003372:	464a      	mov	r2, r9
 8003374:	3901      	subs	r1, #1
 8003376:	f104 0050 	add.w	r0, r4, #80	; 0x50
 800337a:	910d      	str	r1, [sp, #52]	; 0x34
 800337c:	f7ff ff1c 	bl	80031b8 <__exponent>
 8003380:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8003382:	4682      	mov	sl, r0
 8003384:	1813      	adds	r3, r2, r0
 8003386:	2a01      	cmp	r2, #1
 8003388:	6123      	str	r3, [r4, #16]
 800338a:	dc02      	bgt.n	8003392 <_printf_float+0x15e>
 800338c:	6822      	ldr	r2, [r4, #0]
 800338e:	07d2      	lsls	r2, r2, #31
 8003390:	d501      	bpl.n	8003396 <_printf_float+0x162>
 8003392:	3301      	adds	r3, #1
 8003394:	6123      	str	r3, [r4, #16]
 8003396:	f89d 3033 	ldrb.w	r3, [sp, #51]	; 0x33
 800339a:	2b00      	cmp	r3, #0
 800339c:	d09b      	beq.n	80032d6 <_printf_float+0xa2>
 800339e:	232d      	movs	r3, #45	; 0x2d
 80033a0:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 80033a4:	e797      	b.n	80032d6 <_printf_float+0xa2>
 80033a6:	2947      	cmp	r1, #71	; 0x47
 80033a8:	d1bc      	bne.n	8003324 <_printf_float+0xf0>
 80033aa:	2b00      	cmp	r3, #0
 80033ac:	d1ba      	bne.n	8003324 <_printf_float+0xf0>
 80033ae:	2301      	movs	r3, #1
 80033b0:	e7b7      	b.n	8003322 <_printf_float+0xee>
 80033b2:	f1b9 0f66 	cmp.w	r9, #102	; 0x66
 80033b6:	d118      	bne.n	80033ea <_printf_float+0x1b6>
 80033b8:	2900      	cmp	r1, #0
 80033ba:	6863      	ldr	r3, [r4, #4]
 80033bc:	dd0b      	ble.n	80033d6 <_printf_float+0x1a2>
 80033be:	6121      	str	r1, [r4, #16]
 80033c0:	b913      	cbnz	r3, 80033c8 <_printf_float+0x194>
 80033c2:	6822      	ldr	r2, [r4, #0]
 80033c4:	07d0      	lsls	r0, r2, #31
 80033c6:	d502      	bpl.n	80033ce <_printf_float+0x19a>
 80033c8:	3301      	adds	r3, #1
 80033ca:	440b      	add	r3, r1
 80033cc:	6123      	str	r3, [r4, #16]
 80033ce:	f04f 0a00 	mov.w	sl, #0
 80033d2:	65a1      	str	r1, [r4, #88]	; 0x58
 80033d4:	e7df      	b.n	8003396 <_printf_float+0x162>
 80033d6:	b913      	cbnz	r3, 80033de <_printf_float+0x1aa>
 80033d8:	6822      	ldr	r2, [r4, #0]
 80033da:	07d2      	lsls	r2, r2, #31
 80033dc:	d501      	bpl.n	80033e2 <_printf_float+0x1ae>
 80033de:	3302      	adds	r3, #2
 80033e0:	e7f4      	b.n	80033cc <_printf_float+0x198>
 80033e2:	2301      	movs	r3, #1
 80033e4:	e7f2      	b.n	80033cc <_printf_float+0x198>
 80033e6:	f04f 0967 	mov.w	r9, #103	; 0x67
 80033ea:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80033ec:	4299      	cmp	r1, r3
 80033ee:	db05      	blt.n	80033fc <_printf_float+0x1c8>
 80033f0:	6823      	ldr	r3, [r4, #0]
 80033f2:	6121      	str	r1, [r4, #16]
 80033f4:	07d8      	lsls	r0, r3, #31
 80033f6:	d5ea      	bpl.n	80033ce <_printf_float+0x19a>
 80033f8:	1c4b      	adds	r3, r1, #1
 80033fa:	e7e7      	b.n	80033cc <_printf_float+0x198>
 80033fc:	2900      	cmp	r1, #0
 80033fe:	bfcc      	ite	gt
 8003400:	2201      	movgt	r2, #1
 8003402:	f1c1 0202 	rsble	r2, r1, #2
 8003406:	4413      	add	r3, r2
 8003408:	e7e0      	b.n	80033cc <_printf_float+0x198>
 800340a:	6823      	ldr	r3, [r4, #0]
 800340c:	055a      	lsls	r2, r3, #21
 800340e:	d407      	bmi.n	8003420 <_printf_float+0x1ec>
 8003410:	6923      	ldr	r3, [r4, #16]
 8003412:	4642      	mov	r2, r8
 8003414:	4631      	mov	r1, r6
 8003416:	4628      	mov	r0, r5
 8003418:	47b8      	blx	r7
 800341a:	3001      	adds	r0, #1
 800341c:	d12b      	bne.n	8003476 <_printf_float+0x242>
 800341e:	e764      	b.n	80032ea <_printf_float+0xb6>
 8003420:	f1b9 0f65 	cmp.w	r9, #101	; 0x65
 8003424:	f240 80dd 	bls.w	80035e2 <_printf_float+0x3ae>
 8003428:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	; 0x48
 800342c:	2200      	movs	r2, #0
 800342e:	2300      	movs	r3, #0
 8003430:	f7fd faca 	bl	80009c8 <__aeabi_dcmpeq>
 8003434:	2800      	cmp	r0, #0
 8003436:	d033      	beq.n	80034a0 <_printf_float+0x26c>
 8003438:	2301      	movs	r3, #1
 800343a:	4631      	mov	r1, r6
 800343c:	4628      	mov	r0, r5
 800343e:	4a35      	ldr	r2, [pc, #212]	; (8003514 <_printf_float+0x2e0>)
 8003440:	47b8      	blx	r7
 8003442:	3001      	adds	r0, #1
 8003444:	f43f af51 	beq.w	80032ea <_printf_float+0xb6>
 8003448:	e9dd 230d 	ldrd	r2, r3, [sp, #52]	; 0x34
 800344c:	429a      	cmp	r2, r3
 800344e:	db02      	blt.n	8003456 <_printf_float+0x222>
 8003450:	6823      	ldr	r3, [r4, #0]
 8003452:	07d8      	lsls	r0, r3, #31
 8003454:	d50f      	bpl.n	8003476 <_printf_float+0x242>
 8003456:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 800345a:	4631      	mov	r1, r6
 800345c:	4628      	mov	r0, r5
 800345e:	47b8      	blx	r7
 8003460:	3001      	adds	r0, #1
 8003462:	f43f af42 	beq.w	80032ea <_printf_float+0xb6>
 8003466:	f04f 0800 	mov.w	r8, #0
 800346a:	f104 091a 	add.w	r9, r4, #26
 800346e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8003470:	3b01      	subs	r3, #1
 8003472:	4543      	cmp	r3, r8
 8003474:	dc09      	bgt.n	800348a <_printf_float+0x256>
 8003476:	6823      	ldr	r3, [r4, #0]
 8003478:	079b      	lsls	r3, r3, #30
 800347a:	f100 8104 	bmi.w	8003686 <_printf_float+0x452>
 800347e:	68e0      	ldr	r0, [r4, #12]
 8003480:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8003482:	4298      	cmp	r0, r3
 8003484:	bfb8      	it	lt
 8003486:	4618      	movlt	r0, r3
 8003488:	e731      	b.n	80032ee <_printf_float+0xba>
 800348a:	2301      	movs	r3, #1
 800348c:	464a      	mov	r2, r9
 800348e:	4631      	mov	r1, r6
 8003490:	4628      	mov	r0, r5
 8003492:	47b8      	blx	r7
 8003494:	3001      	adds	r0, #1
 8003496:	f43f af28 	beq.w	80032ea <_printf_float+0xb6>
 800349a:	f108 0801 	add.w	r8, r8, #1
 800349e:	e7e6      	b.n	800346e <_printf_float+0x23a>
 80034a0:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80034a2:	2b00      	cmp	r3, #0
 80034a4:	dc38      	bgt.n	8003518 <_printf_float+0x2e4>
 80034a6:	2301      	movs	r3, #1
 80034a8:	4631      	mov	r1, r6
 80034aa:	4628      	mov	r0, r5
 80034ac:	4a19      	ldr	r2, [pc, #100]	; (8003514 <_printf_float+0x2e0>)
 80034ae:	47b8      	blx	r7
 80034b0:	3001      	adds	r0, #1
 80034b2:	f43f af1a 	beq.w	80032ea <_printf_float+0xb6>
 80034b6:	e9dd 320d 	ldrd	r3, r2, [sp, #52]	; 0x34
 80034ba:	4313      	orrs	r3, r2
 80034bc:	d102      	bne.n	80034c4 <_printf_float+0x290>
 80034be:	6823      	ldr	r3, [r4, #0]
 80034c0:	07d9      	lsls	r1, r3, #31
 80034c2:	d5d8      	bpl.n	8003476 <_printf_float+0x242>
 80034c4:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 80034c8:	4631      	mov	r1, r6
 80034ca:	4628      	mov	r0, r5
 80034cc:	47b8      	blx	r7
 80034ce:	3001      	adds	r0, #1
 80034d0:	f43f af0b 	beq.w	80032ea <_printf_float+0xb6>
 80034d4:	f04f 0900 	mov.w	r9, #0
 80034d8:	f104 0a1a 	add.w	sl, r4, #26
 80034dc:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80034de:	425b      	negs	r3, r3
 80034e0:	454b      	cmp	r3, r9
 80034e2:	dc01      	bgt.n	80034e8 <_printf_float+0x2b4>
 80034e4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80034e6:	e794      	b.n	8003412 <_printf_float+0x1de>
 80034e8:	2301      	movs	r3, #1
 80034ea:	4652      	mov	r2, sl
 80034ec:	4631      	mov	r1, r6
 80034ee:	4628      	mov	r0, r5
 80034f0:	47b8      	blx	r7
 80034f2:	3001      	adds	r0, #1
 80034f4:	f43f aef9 	beq.w	80032ea <_printf_float+0xb6>
 80034f8:	f109 0901 	add.w	r9, r9, #1
 80034fc:	e7ee      	b.n	80034dc <_printf_float+0x2a8>
 80034fe:	bf00      	nop
 8003500:	7fefffff 	.word	0x7fefffff
 8003504:	08009128 	.word	0x08009128
 8003508:	0800912c 	.word	0x0800912c
 800350c:	08009130 	.word	0x08009130
 8003510:	08009134 	.word	0x08009134
 8003514:	08009138 	.word	0x08009138
 8003518:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 800351a:	6da3      	ldr	r3, [r4, #88]	; 0x58
 800351c:	429a      	cmp	r2, r3
 800351e:	bfa8      	it	ge
 8003520:	461a      	movge	r2, r3
 8003522:	2a00      	cmp	r2, #0
 8003524:	4691      	mov	r9, r2
 8003526:	dc37      	bgt.n	8003598 <_printf_float+0x364>
 8003528:	f04f 0b00 	mov.w	fp, #0
 800352c:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 8003530:	f104 021a 	add.w	r2, r4, #26
 8003534:	f8d4 a058 	ldr.w	sl, [r4, #88]	; 0x58
 8003538:	ebaa 0309 	sub.w	r3, sl, r9
 800353c:	455b      	cmp	r3, fp
 800353e:	dc33      	bgt.n	80035a8 <_printf_float+0x374>
 8003540:	e9dd 230d 	ldrd	r2, r3, [sp, #52]	; 0x34
 8003544:	429a      	cmp	r2, r3
 8003546:	db3b      	blt.n	80035c0 <_printf_float+0x38c>
 8003548:	6823      	ldr	r3, [r4, #0]
 800354a:	07da      	lsls	r2, r3, #31
 800354c:	d438      	bmi.n	80035c0 <_printf_float+0x38c>
 800354e:	e9dd 320d 	ldrd	r3, r2, [sp, #52]	; 0x34
 8003552:	eba2 0903 	sub.w	r9, r2, r3
 8003556:	eba2 020a 	sub.w	r2, r2, sl
 800355a:	4591      	cmp	r9, r2
 800355c:	bfa8      	it	ge
 800355e:	4691      	movge	r9, r2
 8003560:	f1b9 0f00 	cmp.w	r9, #0
 8003564:	dc34      	bgt.n	80035d0 <_printf_float+0x39c>
 8003566:	f04f 0800 	mov.w	r8, #0
 800356a:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 800356e:	f104 0a1a 	add.w	sl, r4, #26
 8003572:	e9dd 230d 	ldrd	r2, r3, [sp, #52]	; 0x34
 8003576:	1a9b      	subs	r3, r3, r2
 8003578:	eba3 0309 	sub.w	r3, r3, r9
 800357c:	4543      	cmp	r3, r8
 800357e:	f77f af7a 	ble.w	8003476 <_printf_float+0x242>
 8003582:	2301      	movs	r3, #1
 8003584:	4652      	mov	r2, sl
 8003586:	4631      	mov	r1, r6
 8003588:	4628      	mov	r0, r5
 800358a:	47b8      	blx	r7
 800358c:	3001      	adds	r0, #1
 800358e:	f43f aeac 	beq.w	80032ea <_printf_float+0xb6>
 8003592:	f108 0801 	add.w	r8, r8, #1
 8003596:	e7ec      	b.n	8003572 <_printf_float+0x33e>
 8003598:	4613      	mov	r3, r2
 800359a:	4631      	mov	r1, r6
 800359c:	4642      	mov	r2, r8
 800359e:	4628      	mov	r0, r5
 80035a0:	47b8      	blx	r7
 80035a2:	3001      	adds	r0, #1
 80035a4:	d1c0      	bne.n	8003528 <_printf_float+0x2f4>
 80035a6:	e6a0      	b.n	80032ea <_printf_float+0xb6>
 80035a8:	2301      	movs	r3, #1
 80035aa:	4631      	mov	r1, r6
 80035ac:	4628      	mov	r0, r5
 80035ae:	920b      	str	r2, [sp, #44]	; 0x2c
 80035b0:	47b8      	blx	r7
 80035b2:	3001      	adds	r0, #1
 80035b4:	f43f ae99 	beq.w	80032ea <_printf_float+0xb6>
 80035b8:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80035ba:	f10b 0b01 	add.w	fp, fp, #1
 80035be:	e7b9      	b.n	8003534 <_printf_float+0x300>
 80035c0:	4631      	mov	r1, r6
 80035c2:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 80035c6:	4628      	mov	r0, r5
 80035c8:	47b8      	blx	r7
 80035ca:	3001      	adds	r0, #1
 80035cc:	d1bf      	bne.n	800354e <_printf_float+0x31a>
 80035ce:	e68c      	b.n	80032ea <_printf_float+0xb6>
 80035d0:	464b      	mov	r3, r9
 80035d2:	4631      	mov	r1, r6
 80035d4:	4628      	mov	r0, r5
 80035d6:	eb08 020a 	add.w	r2, r8, sl
 80035da:	47b8      	blx	r7
 80035dc:	3001      	adds	r0, #1
 80035de:	d1c2      	bne.n	8003566 <_printf_float+0x332>
 80035e0:	e683      	b.n	80032ea <_printf_float+0xb6>
 80035e2:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 80035e4:	2a01      	cmp	r2, #1
 80035e6:	dc01      	bgt.n	80035ec <_printf_float+0x3b8>
 80035e8:	07db      	lsls	r3, r3, #31
 80035ea:	d539      	bpl.n	8003660 <_printf_float+0x42c>
 80035ec:	2301      	movs	r3, #1
 80035ee:	4642      	mov	r2, r8
 80035f0:	4631      	mov	r1, r6
 80035f2:	4628      	mov	r0, r5
 80035f4:	47b8      	blx	r7
 80035f6:	3001      	adds	r0, #1
 80035f8:	f43f ae77 	beq.w	80032ea <_printf_float+0xb6>
 80035fc:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 8003600:	4631      	mov	r1, r6
 8003602:	4628      	mov	r0, r5
 8003604:	47b8      	blx	r7
 8003606:	3001      	adds	r0, #1
 8003608:	f43f ae6f 	beq.w	80032ea <_printf_float+0xb6>
 800360c:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	; 0x48
 8003610:	2200      	movs	r2, #0
 8003612:	2300      	movs	r3, #0
 8003614:	f8dd 9038 	ldr.w	r9, [sp, #56]	; 0x38
 8003618:	f7fd f9d6 	bl	80009c8 <__aeabi_dcmpeq>
 800361c:	b9d8      	cbnz	r0, 8003656 <_printf_float+0x422>
 800361e:	f109 33ff 	add.w	r3, r9, #4294967295
 8003622:	f108 0201 	add.w	r2, r8, #1
 8003626:	4631      	mov	r1, r6
 8003628:	4628      	mov	r0, r5
 800362a:	47b8      	blx	r7
 800362c:	3001      	adds	r0, #1
 800362e:	d10e      	bne.n	800364e <_printf_float+0x41a>
 8003630:	e65b      	b.n	80032ea <_printf_float+0xb6>
 8003632:	2301      	movs	r3, #1
 8003634:	464a      	mov	r2, r9
 8003636:	4631      	mov	r1, r6
 8003638:	4628      	mov	r0, r5
 800363a:	47b8      	blx	r7
 800363c:	3001      	adds	r0, #1
 800363e:	f43f ae54 	beq.w	80032ea <_printf_float+0xb6>
 8003642:	f108 0801 	add.w	r8, r8, #1
 8003646:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8003648:	3b01      	subs	r3, #1
 800364a:	4543      	cmp	r3, r8
 800364c:	dcf1      	bgt.n	8003632 <_printf_float+0x3fe>
 800364e:	4653      	mov	r3, sl
 8003650:	f104 0250 	add.w	r2, r4, #80	; 0x50
 8003654:	e6de      	b.n	8003414 <_printf_float+0x1e0>
 8003656:	f04f 0800 	mov.w	r8, #0
 800365a:	f104 091a 	add.w	r9, r4, #26
 800365e:	e7f2      	b.n	8003646 <_printf_float+0x412>
 8003660:	2301      	movs	r3, #1
 8003662:	4642      	mov	r2, r8
 8003664:	e7df      	b.n	8003626 <_printf_float+0x3f2>
 8003666:	2301      	movs	r3, #1
 8003668:	464a      	mov	r2, r9
 800366a:	4631      	mov	r1, r6
 800366c:	4628      	mov	r0, r5
 800366e:	47b8      	blx	r7
 8003670:	3001      	adds	r0, #1
 8003672:	f43f ae3a 	beq.w	80032ea <_printf_float+0xb6>
 8003676:	f108 0801 	add.w	r8, r8, #1
 800367a:	68e3      	ldr	r3, [r4, #12]
 800367c:	990f      	ldr	r1, [sp, #60]	; 0x3c
 800367e:	1a5b      	subs	r3, r3, r1
 8003680:	4543      	cmp	r3, r8
 8003682:	dcf0      	bgt.n	8003666 <_printf_float+0x432>
 8003684:	e6fb      	b.n	800347e <_printf_float+0x24a>
 8003686:	f04f 0800 	mov.w	r8, #0
 800368a:	f104 0919 	add.w	r9, r4, #25
 800368e:	e7f4      	b.n	800367a <_printf_float+0x446>

08003690 <_printf_common>:
 8003690:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8003694:	4616      	mov	r6, r2
 8003696:	4699      	mov	r9, r3
 8003698:	688a      	ldr	r2, [r1, #8]
 800369a:	690b      	ldr	r3, [r1, #16]
 800369c:	4607      	mov	r7, r0
 800369e:	4293      	cmp	r3, r2
 80036a0:	bfb8      	it	lt
 80036a2:	4613      	movlt	r3, r2
 80036a4:	6033      	str	r3, [r6, #0]
 80036a6:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 80036aa:	460c      	mov	r4, r1
 80036ac:	f8dd 8020 	ldr.w	r8, [sp, #32]
 80036b0:	b10a      	cbz	r2, 80036b6 <_printf_common+0x26>
 80036b2:	3301      	adds	r3, #1
 80036b4:	6033      	str	r3, [r6, #0]
 80036b6:	6823      	ldr	r3, [r4, #0]
 80036b8:	0699      	lsls	r1, r3, #26
 80036ba:	bf42      	ittt	mi
 80036bc:	6833      	ldrmi	r3, [r6, #0]
 80036be:	3302      	addmi	r3, #2
 80036c0:	6033      	strmi	r3, [r6, #0]
 80036c2:	6825      	ldr	r5, [r4, #0]
 80036c4:	f015 0506 	ands.w	r5, r5, #6
 80036c8:	d106      	bne.n	80036d8 <_printf_common+0x48>
 80036ca:	f104 0a19 	add.w	sl, r4, #25
 80036ce:	68e3      	ldr	r3, [r4, #12]
 80036d0:	6832      	ldr	r2, [r6, #0]
 80036d2:	1a9b      	subs	r3, r3, r2
 80036d4:	42ab      	cmp	r3, r5
 80036d6:	dc2b      	bgt.n	8003730 <_printf_common+0xa0>
 80036d8:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 80036dc:	1e13      	subs	r3, r2, #0
 80036de:	6822      	ldr	r2, [r4, #0]
 80036e0:	bf18      	it	ne
 80036e2:	2301      	movne	r3, #1
 80036e4:	0692      	lsls	r2, r2, #26
 80036e6:	d430      	bmi.n	800374a <_printf_common+0xba>
 80036e8:	4649      	mov	r1, r9
 80036ea:	4638      	mov	r0, r7
 80036ec:	f104 0243 	add.w	r2, r4, #67	; 0x43
 80036f0:	47c0      	blx	r8
 80036f2:	3001      	adds	r0, #1
 80036f4:	d023      	beq.n	800373e <_printf_common+0xae>
 80036f6:	6823      	ldr	r3, [r4, #0]
 80036f8:	6922      	ldr	r2, [r4, #16]
 80036fa:	f003 0306 	and.w	r3, r3, #6
 80036fe:	2b04      	cmp	r3, #4
 8003700:	bf14      	ite	ne
 8003702:	2500      	movne	r5, #0
 8003704:	6833      	ldreq	r3, [r6, #0]
 8003706:	f04f 0600 	mov.w	r6, #0
 800370a:	bf08      	it	eq
 800370c:	68e5      	ldreq	r5, [r4, #12]
 800370e:	f104 041a 	add.w	r4, r4, #26
 8003712:	bf08      	it	eq
 8003714:	1aed      	subeq	r5, r5, r3
 8003716:	f854 3c12 	ldr.w	r3, [r4, #-18]
 800371a:	bf08      	it	eq
 800371c:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8003720:	4293      	cmp	r3, r2
 8003722:	bfc4      	itt	gt
 8003724:	1a9b      	subgt	r3, r3, r2
 8003726:	18ed      	addgt	r5, r5, r3
 8003728:	42b5      	cmp	r5, r6
 800372a:	d11a      	bne.n	8003762 <_printf_common+0xd2>
 800372c:	2000      	movs	r0, #0
 800372e:	e008      	b.n	8003742 <_printf_common+0xb2>
 8003730:	2301      	movs	r3, #1
 8003732:	4652      	mov	r2, sl
 8003734:	4649      	mov	r1, r9
 8003736:	4638      	mov	r0, r7
 8003738:	47c0      	blx	r8
 800373a:	3001      	adds	r0, #1
 800373c:	d103      	bne.n	8003746 <_printf_common+0xb6>
 800373e:	f04f 30ff 	mov.w	r0, #4294967295
 8003742:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8003746:	3501      	adds	r5, #1
 8003748:	e7c1      	b.n	80036ce <_printf_common+0x3e>
 800374a:	2030      	movs	r0, #48	; 0x30
 800374c:	18e1      	adds	r1, r4, r3
 800374e:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 8003752:	1c5a      	adds	r2, r3, #1
 8003754:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 8003758:	4422      	add	r2, r4
 800375a:	3302      	adds	r3, #2
 800375c:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 8003760:	e7c2      	b.n	80036e8 <_printf_common+0x58>
 8003762:	2301      	movs	r3, #1
 8003764:	4622      	mov	r2, r4
 8003766:	4649      	mov	r1, r9
 8003768:	4638      	mov	r0, r7
 800376a:	47c0      	blx	r8
 800376c:	3001      	adds	r0, #1
 800376e:	d0e6      	beq.n	800373e <_printf_common+0xae>
 8003770:	3601      	adds	r6, #1
 8003772:	e7d9      	b.n	8003728 <_printf_common+0x98>

08003774 <_printf_i>:
 8003774:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8003778:	7e0f      	ldrb	r7, [r1, #24]
 800377a:	4691      	mov	r9, r2
 800377c:	2f78      	cmp	r7, #120	; 0x78
 800377e:	4680      	mov	r8, r0
 8003780:	460c      	mov	r4, r1
 8003782:	469a      	mov	sl, r3
 8003784:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8003786:	f101 0243 	add.w	r2, r1, #67	; 0x43
 800378a:	d807      	bhi.n	800379c <_printf_i+0x28>
 800378c:	2f62      	cmp	r7, #98	; 0x62
 800378e:	d80a      	bhi.n	80037a6 <_printf_i+0x32>
 8003790:	2f00      	cmp	r7, #0
 8003792:	f000 80d5 	beq.w	8003940 <_printf_i+0x1cc>
 8003796:	2f58      	cmp	r7, #88	; 0x58
 8003798:	f000 80c1 	beq.w	800391e <_printf_i+0x1aa>
 800379c:	f104 0542 	add.w	r5, r4, #66	; 0x42
 80037a0:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 80037a4:	e03a      	b.n	800381c <_printf_i+0xa8>
 80037a6:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 80037aa:	2b15      	cmp	r3, #21
 80037ac:	d8f6      	bhi.n	800379c <_printf_i+0x28>
 80037ae:	a101      	add	r1, pc, #4	; (adr r1, 80037b4 <_printf_i+0x40>)
 80037b0:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 80037b4:	0800380d 	.word	0x0800380d
 80037b8:	08003821 	.word	0x08003821
 80037bc:	0800379d 	.word	0x0800379d
 80037c0:	0800379d 	.word	0x0800379d
 80037c4:	0800379d 	.word	0x0800379d
 80037c8:	0800379d 	.word	0x0800379d
 80037cc:	08003821 	.word	0x08003821
 80037d0:	0800379d 	.word	0x0800379d
 80037d4:	0800379d 	.word	0x0800379d
 80037d8:	0800379d 	.word	0x0800379d
 80037dc:	0800379d 	.word	0x0800379d
 80037e0:	08003927 	.word	0x08003927
 80037e4:	0800384d 	.word	0x0800384d
 80037e8:	080038e1 	.word	0x080038e1
 80037ec:	0800379d 	.word	0x0800379d
 80037f0:	0800379d 	.word	0x0800379d
 80037f4:	08003949 	.word	0x08003949
 80037f8:	0800379d 	.word	0x0800379d
 80037fc:	0800384d 	.word	0x0800384d
 8003800:	0800379d 	.word	0x0800379d
 8003804:	0800379d 	.word	0x0800379d
 8003808:	080038e9 	.word	0x080038e9
 800380c:	682b      	ldr	r3, [r5, #0]
 800380e:	1d1a      	adds	r2, r3, #4
 8003810:	681b      	ldr	r3, [r3, #0]
 8003812:	602a      	str	r2, [r5, #0]
 8003814:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8003818:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 800381c:	2301      	movs	r3, #1
 800381e:	e0a0      	b.n	8003962 <_printf_i+0x1ee>
 8003820:	6820      	ldr	r0, [r4, #0]
 8003822:	682b      	ldr	r3, [r5, #0]
 8003824:	0607      	lsls	r7, r0, #24
 8003826:	f103 0104 	add.w	r1, r3, #4
 800382a:	6029      	str	r1, [r5, #0]
 800382c:	d501      	bpl.n	8003832 <_printf_i+0xbe>
 800382e:	681e      	ldr	r6, [r3, #0]
 8003830:	e003      	b.n	800383a <_printf_i+0xc6>
 8003832:	0646      	lsls	r6, r0, #25
 8003834:	d5fb      	bpl.n	800382e <_printf_i+0xba>
 8003836:	f9b3 6000 	ldrsh.w	r6, [r3]
 800383a:	2e00      	cmp	r6, #0
 800383c:	da03      	bge.n	8003846 <_printf_i+0xd2>
 800383e:	232d      	movs	r3, #45	; 0x2d
 8003840:	4276      	negs	r6, r6
 8003842:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8003846:	230a      	movs	r3, #10
 8003848:	4859      	ldr	r0, [pc, #356]	; (80039b0 <_printf_i+0x23c>)
 800384a:	e012      	b.n	8003872 <_printf_i+0xfe>
 800384c:	682b      	ldr	r3, [r5, #0]
 800384e:	6820      	ldr	r0, [r4, #0]
 8003850:	1d19      	adds	r1, r3, #4
 8003852:	6029      	str	r1, [r5, #0]
 8003854:	0605      	lsls	r5, r0, #24
 8003856:	d501      	bpl.n	800385c <_printf_i+0xe8>
 8003858:	681e      	ldr	r6, [r3, #0]
 800385a:	e002      	b.n	8003862 <_printf_i+0xee>
 800385c:	0641      	lsls	r1, r0, #25
 800385e:	d5fb      	bpl.n	8003858 <_printf_i+0xe4>
 8003860:	881e      	ldrh	r6, [r3, #0]
 8003862:	2f6f      	cmp	r7, #111	; 0x6f
 8003864:	bf0c      	ite	eq
 8003866:	2308      	moveq	r3, #8
 8003868:	230a      	movne	r3, #10
 800386a:	4851      	ldr	r0, [pc, #324]	; (80039b0 <_printf_i+0x23c>)
 800386c:	2100      	movs	r1, #0
 800386e:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 8003872:	6865      	ldr	r5, [r4, #4]
 8003874:	2d00      	cmp	r5, #0
 8003876:	bfa8      	it	ge
 8003878:	6821      	ldrge	r1, [r4, #0]
 800387a:	60a5      	str	r5, [r4, #8]
 800387c:	bfa4      	itt	ge
 800387e:	f021 0104 	bicge.w	r1, r1, #4
 8003882:	6021      	strge	r1, [r4, #0]
 8003884:	b90e      	cbnz	r6, 800388a <_printf_i+0x116>
 8003886:	2d00      	cmp	r5, #0
 8003888:	d04b      	beq.n	8003922 <_printf_i+0x1ae>
 800388a:	4615      	mov	r5, r2
 800388c:	fbb6 f1f3 	udiv	r1, r6, r3
 8003890:	fb03 6711 	mls	r7, r3, r1, r6
 8003894:	5dc7      	ldrb	r7, [r0, r7]
 8003896:	f805 7d01 	strb.w	r7, [r5, #-1]!
 800389a:	4637      	mov	r7, r6
 800389c:	42bb      	cmp	r3, r7
 800389e:	460e      	mov	r6, r1
 80038a0:	d9f4      	bls.n	800388c <_printf_i+0x118>
 80038a2:	2b08      	cmp	r3, #8
 80038a4:	d10b      	bne.n	80038be <_printf_i+0x14a>
 80038a6:	6823      	ldr	r3, [r4, #0]
 80038a8:	07de      	lsls	r6, r3, #31
 80038aa:	d508      	bpl.n	80038be <_printf_i+0x14a>
 80038ac:	6923      	ldr	r3, [r4, #16]
 80038ae:	6861      	ldr	r1, [r4, #4]
 80038b0:	4299      	cmp	r1, r3
 80038b2:	bfde      	ittt	le
 80038b4:	2330      	movle	r3, #48	; 0x30
 80038b6:	f805 3c01 	strble.w	r3, [r5, #-1]
 80038ba:	f105 35ff 	addle.w	r5, r5, #4294967295
 80038be:	1b52      	subs	r2, r2, r5
 80038c0:	6122      	str	r2, [r4, #16]
 80038c2:	464b      	mov	r3, r9
 80038c4:	4621      	mov	r1, r4
 80038c6:	4640      	mov	r0, r8
 80038c8:	f8cd a000 	str.w	sl, [sp]
 80038cc:	aa03      	add	r2, sp, #12
 80038ce:	f7ff fedf 	bl	8003690 <_printf_common>
 80038d2:	3001      	adds	r0, #1
 80038d4:	d14a      	bne.n	800396c <_printf_i+0x1f8>
 80038d6:	f04f 30ff 	mov.w	r0, #4294967295
 80038da:	b004      	add	sp, #16
 80038dc:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80038e0:	6823      	ldr	r3, [r4, #0]
 80038e2:	f043 0320 	orr.w	r3, r3, #32
 80038e6:	6023      	str	r3, [r4, #0]
 80038e8:	2778      	movs	r7, #120	; 0x78
 80038ea:	4832      	ldr	r0, [pc, #200]	; (80039b4 <_printf_i+0x240>)
 80038ec:	f884 7045 	strb.w	r7, [r4, #69]	; 0x45
 80038f0:	6823      	ldr	r3, [r4, #0]
 80038f2:	6829      	ldr	r1, [r5, #0]
 80038f4:	061f      	lsls	r7, r3, #24
 80038f6:	f851 6b04 	ldr.w	r6, [r1], #4
 80038fa:	d402      	bmi.n	8003902 <_printf_i+0x18e>
 80038fc:	065f      	lsls	r7, r3, #25
 80038fe:	bf48      	it	mi
 8003900:	b2b6      	uxthmi	r6, r6
 8003902:	07df      	lsls	r7, r3, #31
 8003904:	bf48      	it	mi
 8003906:	f043 0320 	orrmi.w	r3, r3, #32
 800390a:	6029      	str	r1, [r5, #0]
 800390c:	bf48      	it	mi
 800390e:	6023      	strmi	r3, [r4, #0]
 8003910:	b91e      	cbnz	r6, 800391a <_printf_i+0x1a6>
 8003912:	6823      	ldr	r3, [r4, #0]
 8003914:	f023 0320 	bic.w	r3, r3, #32
 8003918:	6023      	str	r3, [r4, #0]
 800391a:	2310      	movs	r3, #16
 800391c:	e7a6      	b.n	800386c <_printf_i+0xf8>
 800391e:	4824      	ldr	r0, [pc, #144]	; (80039b0 <_printf_i+0x23c>)
 8003920:	e7e4      	b.n	80038ec <_printf_i+0x178>
 8003922:	4615      	mov	r5, r2
 8003924:	e7bd      	b.n	80038a2 <_printf_i+0x12e>
 8003926:	682b      	ldr	r3, [r5, #0]
 8003928:	6826      	ldr	r6, [r4, #0]
 800392a:	1d18      	adds	r0, r3, #4
 800392c:	6961      	ldr	r1, [r4, #20]
 800392e:	6028      	str	r0, [r5, #0]
 8003930:	0635      	lsls	r5, r6, #24
 8003932:	681b      	ldr	r3, [r3, #0]
 8003934:	d501      	bpl.n	800393a <_printf_i+0x1c6>
 8003936:	6019      	str	r1, [r3, #0]
 8003938:	e002      	b.n	8003940 <_printf_i+0x1cc>
 800393a:	0670      	lsls	r0, r6, #25
 800393c:	d5fb      	bpl.n	8003936 <_printf_i+0x1c2>
 800393e:	8019      	strh	r1, [r3, #0]
 8003940:	2300      	movs	r3, #0
 8003942:	4615      	mov	r5, r2
 8003944:	6123      	str	r3, [r4, #16]
 8003946:	e7bc      	b.n	80038c2 <_printf_i+0x14e>
 8003948:	682b      	ldr	r3, [r5, #0]
 800394a:	2100      	movs	r1, #0
 800394c:	1d1a      	adds	r2, r3, #4
 800394e:	602a      	str	r2, [r5, #0]
 8003950:	681d      	ldr	r5, [r3, #0]
 8003952:	6862      	ldr	r2, [r4, #4]
 8003954:	4628      	mov	r0, r5
 8003956:	f000 fc28 	bl	80041aa <memchr>
 800395a:	b108      	cbz	r0, 8003960 <_printf_i+0x1ec>
 800395c:	1b40      	subs	r0, r0, r5
 800395e:	6060      	str	r0, [r4, #4]
 8003960:	6863      	ldr	r3, [r4, #4]
 8003962:	6123      	str	r3, [r4, #16]
 8003964:	2300      	movs	r3, #0
 8003966:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 800396a:	e7aa      	b.n	80038c2 <_printf_i+0x14e>
 800396c:	462a      	mov	r2, r5
 800396e:	4649      	mov	r1, r9
 8003970:	4640      	mov	r0, r8
 8003972:	6923      	ldr	r3, [r4, #16]
 8003974:	47d0      	blx	sl
 8003976:	3001      	adds	r0, #1
 8003978:	d0ad      	beq.n	80038d6 <_printf_i+0x162>
 800397a:	6823      	ldr	r3, [r4, #0]
 800397c:	079b      	lsls	r3, r3, #30
 800397e:	d413      	bmi.n	80039a8 <_printf_i+0x234>
 8003980:	68e0      	ldr	r0, [r4, #12]
 8003982:	9b03      	ldr	r3, [sp, #12]
 8003984:	4298      	cmp	r0, r3
 8003986:	bfb8      	it	lt
 8003988:	4618      	movlt	r0, r3
 800398a:	e7a6      	b.n	80038da <_printf_i+0x166>
 800398c:	2301      	movs	r3, #1
 800398e:	4632      	mov	r2, r6
 8003990:	4649      	mov	r1, r9
 8003992:	4640      	mov	r0, r8
 8003994:	47d0      	blx	sl
 8003996:	3001      	adds	r0, #1
 8003998:	d09d      	beq.n	80038d6 <_printf_i+0x162>
 800399a:	3501      	adds	r5, #1
 800399c:	68e3      	ldr	r3, [r4, #12]
 800399e:	9903      	ldr	r1, [sp, #12]
 80039a0:	1a5b      	subs	r3, r3, r1
 80039a2:	42ab      	cmp	r3, r5
 80039a4:	dcf2      	bgt.n	800398c <_printf_i+0x218>
 80039a6:	e7eb      	b.n	8003980 <_printf_i+0x20c>
 80039a8:	2500      	movs	r5, #0
 80039aa:	f104 0619 	add.w	r6, r4, #25
 80039ae:	e7f5      	b.n	800399c <_printf_i+0x228>
 80039b0:	0800913a 	.word	0x0800913a
 80039b4:	0800914b 	.word	0x0800914b

080039b8 <_scanf_float>:
 80039b8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80039bc:	b087      	sub	sp, #28
 80039be:	9303      	str	r3, [sp, #12]
 80039c0:	688b      	ldr	r3, [r1, #8]
 80039c2:	4617      	mov	r7, r2
 80039c4:	1e5a      	subs	r2, r3, #1
 80039c6:	f5b2 7fae 	cmp.w	r2, #348	; 0x15c
 80039ca:	bf85      	ittet	hi
 80039cc:	f46f 75ae 	mvnhi.w	r5, #348	; 0x15c
 80039d0:	195b      	addhi	r3, r3, r5
 80039d2:	2300      	movls	r3, #0
 80039d4:	9302      	strhi	r3, [sp, #8]
 80039d6:	bf88      	it	hi
 80039d8:	f240 135d 	movwhi	r3, #349	; 0x15d
 80039dc:	468b      	mov	fp, r1
 80039de:	f04f 0500 	mov.w	r5, #0
 80039e2:	bf8c      	ite	hi
 80039e4:	608b      	strhi	r3, [r1, #8]
 80039e6:	9302      	strls	r3, [sp, #8]
 80039e8:	680b      	ldr	r3, [r1, #0]
 80039ea:	4680      	mov	r8, r0
 80039ec:	f443 63f0 	orr.w	r3, r3, #1920	; 0x780
 80039f0:	f84b 3b1c 	str.w	r3, [fp], #28
 80039f4:	460c      	mov	r4, r1
 80039f6:	465e      	mov	r6, fp
 80039f8:	46aa      	mov	sl, r5
 80039fa:	46a9      	mov	r9, r5
 80039fc:	e9cd 5504 	strd	r5, r5, [sp, #16]
 8003a00:	9501      	str	r5, [sp, #4]
 8003a02:	68a2      	ldr	r2, [r4, #8]
 8003a04:	b152      	cbz	r2, 8003a1c <_scanf_float+0x64>
 8003a06:	683b      	ldr	r3, [r7, #0]
 8003a08:	781b      	ldrb	r3, [r3, #0]
 8003a0a:	2b4e      	cmp	r3, #78	; 0x4e
 8003a0c:	d864      	bhi.n	8003ad8 <_scanf_float+0x120>
 8003a0e:	2b40      	cmp	r3, #64	; 0x40
 8003a10:	d83c      	bhi.n	8003a8c <_scanf_float+0xd4>
 8003a12:	f1a3 012b 	sub.w	r1, r3, #43	; 0x2b
 8003a16:	b2c8      	uxtb	r0, r1
 8003a18:	280e      	cmp	r0, #14
 8003a1a:	d93a      	bls.n	8003a92 <_scanf_float+0xda>
 8003a1c:	f1b9 0f00 	cmp.w	r9, #0
 8003a20:	d003      	beq.n	8003a2a <_scanf_float+0x72>
 8003a22:	6823      	ldr	r3, [r4, #0]
 8003a24:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 8003a28:	6023      	str	r3, [r4, #0]
 8003a2a:	f10a 3aff 	add.w	sl, sl, #4294967295
 8003a2e:	f1ba 0f01 	cmp.w	sl, #1
 8003a32:	f200 8113 	bhi.w	8003c5c <_scanf_float+0x2a4>
 8003a36:	455e      	cmp	r6, fp
 8003a38:	f200 8105 	bhi.w	8003c46 <_scanf_float+0x28e>
 8003a3c:	2501      	movs	r5, #1
 8003a3e:	4628      	mov	r0, r5
 8003a40:	b007      	add	sp, #28
 8003a42:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8003a46:	f1a3 0261 	sub.w	r2, r3, #97	; 0x61
 8003a4a:	2a0d      	cmp	r2, #13
 8003a4c:	d8e6      	bhi.n	8003a1c <_scanf_float+0x64>
 8003a4e:	a101      	add	r1, pc, #4	; (adr r1, 8003a54 <_scanf_float+0x9c>)
 8003a50:	f851 f022 	ldr.w	pc, [r1, r2, lsl #2]
 8003a54:	08003b93 	.word	0x08003b93
 8003a58:	08003a1d 	.word	0x08003a1d
 8003a5c:	08003a1d 	.word	0x08003a1d
 8003a60:	08003a1d 	.word	0x08003a1d
 8003a64:	08003bf3 	.word	0x08003bf3
 8003a68:	08003bcb 	.word	0x08003bcb
 8003a6c:	08003a1d 	.word	0x08003a1d
 8003a70:	08003a1d 	.word	0x08003a1d
 8003a74:	08003ba1 	.word	0x08003ba1
 8003a78:	08003a1d 	.word	0x08003a1d
 8003a7c:	08003a1d 	.word	0x08003a1d
 8003a80:	08003a1d 	.word	0x08003a1d
 8003a84:	08003a1d 	.word	0x08003a1d
 8003a88:	08003b59 	.word	0x08003b59
 8003a8c:	f1a3 0241 	sub.w	r2, r3, #65	; 0x41
 8003a90:	e7db      	b.n	8003a4a <_scanf_float+0x92>
 8003a92:	290e      	cmp	r1, #14
 8003a94:	d8c2      	bhi.n	8003a1c <_scanf_float+0x64>
 8003a96:	a001      	add	r0, pc, #4	; (adr r0, 8003a9c <_scanf_float+0xe4>)
 8003a98:	f850 f021 	ldr.w	pc, [r0, r1, lsl #2]
 8003a9c:	08003b4b 	.word	0x08003b4b
 8003aa0:	08003a1d 	.word	0x08003a1d
 8003aa4:	08003b4b 	.word	0x08003b4b
 8003aa8:	08003bdf 	.word	0x08003bdf
 8003aac:	08003a1d 	.word	0x08003a1d
 8003ab0:	08003af9 	.word	0x08003af9
 8003ab4:	08003b35 	.word	0x08003b35
 8003ab8:	08003b35 	.word	0x08003b35
 8003abc:	08003b35 	.word	0x08003b35
 8003ac0:	08003b35 	.word	0x08003b35
 8003ac4:	08003b35 	.word	0x08003b35
 8003ac8:	08003b35 	.word	0x08003b35
 8003acc:	08003b35 	.word	0x08003b35
 8003ad0:	08003b35 	.word	0x08003b35
 8003ad4:	08003b35 	.word	0x08003b35
 8003ad8:	2b6e      	cmp	r3, #110	; 0x6e
 8003ada:	d809      	bhi.n	8003af0 <_scanf_float+0x138>
 8003adc:	2b60      	cmp	r3, #96	; 0x60
 8003ade:	d8b2      	bhi.n	8003a46 <_scanf_float+0x8e>
 8003ae0:	2b54      	cmp	r3, #84	; 0x54
 8003ae2:	d077      	beq.n	8003bd4 <_scanf_float+0x21c>
 8003ae4:	2b59      	cmp	r3, #89	; 0x59
 8003ae6:	d199      	bne.n	8003a1c <_scanf_float+0x64>
 8003ae8:	2d07      	cmp	r5, #7
 8003aea:	d197      	bne.n	8003a1c <_scanf_float+0x64>
 8003aec:	2508      	movs	r5, #8
 8003aee:	e029      	b.n	8003b44 <_scanf_float+0x18c>
 8003af0:	2b74      	cmp	r3, #116	; 0x74
 8003af2:	d06f      	beq.n	8003bd4 <_scanf_float+0x21c>
 8003af4:	2b79      	cmp	r3, #121	; 0x79
 8003af6:	e7f6      	b.n	8003ae6 <_scanf_float+0x12e>
 8003af8:	6821      	ldr	r1, [r4, #0]
 8003afa:	05c8      	lsls	r0, r1, #23
 8003afc:	d51a      	bpl.n	8003b34 <_scanf_float+0x17c>
 8003afe:	9b02      	ldr	r3, [sp, #8]
 8003b00:	f021 0180 	bic.w	r1, r1, #128	; 0x80
 8003b04:	6021      	str	r1, [r4, #0]
 8003b06:	f109 0901 	add.w	r9, r9, #1
 8003b0a:	b11b      	cbz	r3, 8003b14 <_scanf_float+0x15c>
 8003b0c:	3b01      	subs	r3, #1
 8003b0e:	3201      	adds	r2, #1
 8003b10:	9302      	str	r3, [sp, #8]
 8003b12:	60a2      	str	r2, [r4, #8]
 8003b14:	68a3      	ldr	r3, [r4, #8]
 8003b16:	3b01      	subs	r3, #1
 8003b18:	60a3      	str	r3, [r4, #8]
 8003b1a:	6923      	ldr	r3, [r4, #16]
 8003b1c:	3301      	adds	r3, #1
 8003b1e:	6123      	str	r3, [r4, #16]
 8003b20:	687b      	ldr	r3, [r7, #4]
 8003b22:	3b01      	subs	r3, #1
 8003b24:	2b00      	cmp	r3, #0
 8003b26:	607b      	str	r3, [r7, #4]
 8003b28:	f340 8084 	ble.w	8003c34 <_scanf_float+0x27c>
 8003b2c:	683b      	ldr	r3, [r7, #0]
 8003b2e:	3301      	adds	r3, #1
 8003b30:	603b      	str	r3, [r7, #0]
 8003b32:	e766      	b.n	8003a02 <_scanf_float+0x4a>
 8003b34:	eb1a 0f05 	cmn.w	sl, r5
 8003b38:	f47f af70 	bne.w	8003a1c <_scanf_float+0x64>
 8003b3c:	6822      	ldr	r2, [r4, #0]
 8003b3e:	f422 72c0 	bic.w	r2, r2, #384	; 0x180
 8003b42:	6022      	str	r2, [r4, #0]
 8003b44:	f806 3b01 	strb.w	r3, [r6], #1
 8003b48:	e7e4      	b.n	8003b14 <_scanf_float+0x15c>
 8003b4a:	6822      	ldr	r2, [r4, #0]
 8003b4c:	0610      	lsls	r0, r2, #24
 8003b4e:	f57f af65 	bpl.w	8003a1c <_scanf_float+0x64>
 8003b52:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 8003b56:	e7f4      	b.n	8003b42 <_scanf_float+0x18a>
 8003b58:	f1ba 0f00 	cmp.w	sl, #0
 8003b5c:	d10e      	bne.n	8003b7c <_scanf_float+0x1c4>
 8003b5e:	f1b9 0f00 	cmp.w	r9, #0
 8003b62:	d10e      	bne.n	8003b82 <_scanf_float+0x1ca>
 8003b64:	6822      	ldr	r2, [r4, #0]
 8003b66:	f402 61e0 	and.w	r1, r2, #1792	; 0x700
 8003b6a:	f5b1 6fe0 	cmp.w	r1, #1792	; 0x700
 8003b6e:	d108      	bne.n	8003b82 <_scanf_float+0x1ca>
 8003b70:	f422 62f0 	bic.w	r2, r2, #1920	; 0x780
 8003b74:	f04f 0a01 	mov.w	sl, #1
 8003b78:	6022      	str	r2, [r4, #0]
 8003b7a:	e7e3      	b.n	8003b44 <_scanf_float+0x18c>
 8003b7c:	f1ba 0f02 	cmp.w	sl, #2
 8003b80:	d055      	beq.n	8003c2e <_scanf_float+0x276>
 8003b82:	2d01      	cmp	r5, #1
 8003b84:	d002      	beq.n	8003b8c <_scanf_float+0x1d4>
 8003b86:	2d04      	cmp	r5, #4
 8003b88:	f47f af48 	bne.w	8003a1c <_scanf_float+0x64>
 8003b8c:	3501      	adds	r5, #1
 8003b8e:	b2ed      	uxtb	r5, r5
 8003b90:	e7d8      	b.n	8003b44 <_scanf_float+0x18c>
 8003b92:	f1ba 0f01 	cmp.w	sl, #1
 8003b96:	f47f af41 	bne.w	8003a1c <_scanf_float+0x64>
 8003b9a:	f04f 0a02 	mov.w	sl, #2
 8003b9e:	e7d1      	b.n	8003b44 <_scanf_float+0x18c>
 8003ba0:	b97d      	cbnz	r5, 8003bc2 <_scanf_float+0x20a>
 8003ba2:	f1b9 0f00 	cmp.w	r9, #0
 8003ba6:	f47f af3c 	bne.w	8003a22 <_scanf_float+0x6a>
 8003baa:	6822      	ldr	r2, [r4, #0]
 8003bac:	f402 61e0 	and.w	r1, r2, #1792	; 0x700
 8003bb0:	f5b1 6fe0 	cmp.w	r1, #1792	; 0x700
 8003bb4:	f47f af39 	bne.w	8003a2a <_scanf_float+0x72>
 8003bb8:	f422 62f0 	bic.w	r2, r2, #1920	; 0x780
 8003bbc:	2501      	movs	r5, #1
 8003bbe:	6022      	str	r2, [r4, #0]
 8003bc0:	e7c0      	b.n	8003b44 <_scanf_float+0x18c>
 8003bc2:	2d03      	cmp	r5, #3
 8003bc4:	d0e2      	beq.n	8003b8c <_scanf_float+0x1d4>
 8003bc6:	2d05      	cmp	r5, #5
 8003bc8:	e7de      	b.n	8003b88 <_scanf_float+0x1d0>
 8003bca:	2d02      	cmp	r5, #2
 8003bcc:	f47f af26 	bne.w	8003a1c <_scanf_float+0x64>
 8003bd0:	2503      	movs	r5, #3
 8003bd2:	e7b7      	b.n	8003b44 <_scanf_float+0x18c>
 8003bd4:	2d06      	cmp	r5, #6
 8003bd6:	f47f af21 	bne.w	8003a1c <_scanf_float+0x64>
 8003bda:	2507      	movs	r5, #7
 8003bdc:	e7b2      	b.n	8003b44 <_scanf_float+0x18c>
 8003bde:	6822      	ldr	r2, [r4, #0]
 8003be0:	0591      	lsls	r1, r2, #22
 8003be2:	f57f af1b 	bpl.w	8003a1c <_scanf_float+0x64>
 8003be6:	f422 7220 	bic.w	r2, r2, #640	; 0x280
 8003bea:	6022      	str	r2, [r4, #0]
 8003bec:	f8cd 9004 	str.w	r9, [sp, #4]
 8003bf0:	e7a8      	b.n	8003b44 <_scanf_float+0x18c>
 8003bf2:	6822      	ldr	r2, [r4, #0]
 8003bf4:	f402 61a0 	and.w	r1, r2, #1280	; 0x500
 8003bf8:	f5b1 6f80 	cmp.w	r1, #1024	; 0x400
 8003bfc:	d006      	beq.n	8003c0c <_scanf_float+0x254>
 8003bfe:	0550      	lsls	r0, r2, #21
 8003c00:	f57f af0c 	bpl.w	8003a1c <_scanf_float+0x64>
 8003c04:	f1b9 0f00 	cmp.w	r9, #0
 8003c08:	f43f af0f 	beq.w	8003a2a <_scanf_float+0x72>
 8003c0c:	0591      	lsls	r1, r2, #22
 8003c0e:	bf58      	it	pl
 8003c10:	9901      	ldrpl	r1, [sp, #4]
 8003c12:	f422 62f0 	bic.w	r2, r2, #1920	; 0x780
 8003c16:	bf58      	it	pl
 8003c18:	eba9 0101 	subpl.w	r1, r9, r1
 8003c1c:	f442 72c0 	orr.w	r2, r2, #384	; 0x180
 8003c20:	f04f 0900 	mov.w	r9, #0
 8003c24:	bf58      	it	pl
 8003c26:	e9cd 1604 	strdpl	r1, r6, [sp, #16]
 8003c2a:	6022      	str	r2, [r4, #0]
 8003c2c:	e78a      	b.n	8003b44 <_scanf_float+0x18c>
 8003c2e:	f04f 0a03 	mov.w	sl, #3
 8003c32:	e787      	b.n	8003b44 <_scanf_float+0x18c>
 8003c34:	4639      	mov	r1, r7
 8003c36:	4640      	mov	r0, r8
 8003c38:	f8d4 3180 	ldr.w	r3, [r4, #384]	; 0x180
 8003c3c:	4798      	blx	r3
 8003c3e:	2800      	cmp	r0, #0
 8003c40:	f43f aedf 	beq.w	8003a02 <_scanf_float+0x4a>
 8003c44:	e6ea      	b.n	8003a1c <_scanf_float+0x64>
 8003c46:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
 8003c4a:	463a      	mov	r2, r7
 8003c4c:	4640      	mov	r0, r8
 8003c4e:	f816 1d01 	ldrb.w	r1, [r6, #-1]!
 8003c52:	4798      	blx	r3
 8003c54:	6923      	ldr	r3, [r4, #16]
 8003c56:	3b01      	subs	r3, #1
 8003c58:	6123      	str	r3, [r4, #16]
 8003c5a:	e6ec      	b.n	8003a36 <_scanf_float+0x7e>
 8003c5c:	1e6b      	subs	r3, r5, #1
 8003c5e:	2b06      	cmp	r3, #6
 8003c60:	d825      	bhi.n	8003cae <_scanf_float+0x2f6>
 8003c62:	2d02      	cmp	r5, #2
 8003c64:	d836      	bhi.n	8003cd4 <_scanf_float+0x31c>
 8003c66:	455e      	cmp	r6, fp
 8003c68:	f67f aee8 	bls.w	8003a3c <_scanf_float+0x84>
 8003c6c:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
 8003c70:	463a      	mov	r2, r7
 8003c72:	4640      	mov	r0, r8
 8003c74:	f816 1d01 	ldrb.w	r1, [r6, #-1]!
 8003c78:	4798      	blx	r3
 8003c7a:	6923      	ldr	r3, [r4, #16]
 8003c7c:	3b01      	subs	r3, #1
 8003c7e:	6123      	str	r3, [r4, #16]
 8003c80:	e7f1      	b.n	8003c66 <_scanf_float+0x2ae>
 8003c82:	9802      	ldr	r0, [sp, #8]
 8003c84:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
 8003c88:	f810 1d01 	ldrb.w	r1, [r0, #-1]!
 8003c8c:	463a      	mov	r2, r7
 8003c8e:	9002      	str	r0, [sp, #8]
 8003c90:	4640      	mov	r0, r8
 8003c92:	4798      	blx	r3
 8003c94:	6923      	ldr	r3, [r4, #16]
 8003c96:	3b01      	subs	r3, #1
 8003c98:	6123      	str	r3, [r4, #16]
 8003c9a:	f10a 3aff 	add.w	sl, sl, #4294967295
 8003c9e:	fa5f fa8a 	uxtb.w	sl, sl
 8003ca2:	f1ba 0f02 	cmp.w	sl, #2
 8003ca6:	d1ec      	bne.n	8003c82 <_scanf_float+0x2ca>
 8003ca8:	3d03      	subs	r5, #3
 8003caa:	b2ed      	uxtb	r5, r5
 8003cac:	1b76      	subs	r6, r6, r5
 8003cae:	6823      	ldr	r3, [r4, #0]
 8003cb0:	05da      	lsls	r2, r3, #23
 8003cb2:	d52f      	bpl.n	8003d14 <_scanf_float+0x35c>
 8003cb4:	055b      	lsls	r3, r3, #21
 8003cb6:	d510      	bpl.n	8003cda <_scanf_float+0x322>
 8003cb8:	455e      	cmp	r6, fp
 8003cba:	f67f aebf 	bls.w	8003a3c <_scanf_float+0x84>
 8003cbe:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
 8003cc2:	463a      	mov	r2, r7
 8003cc4:	4640      	mov	r0, r8
 8003cc6:	f816 1d01 	ldrb.w	r1, [r6, #-1]!
 8003cca:	4798      	blx	r3
 8003ccc:	6923      	ldr	r3, [r4, #16]
 8003cce:	3b01      	subs	r3, #1
 8003cd0:	6123      	str	r3, [r4, #16]
 8003cd2:	e7f1      	b.n	8003cb8 <_scanf_float+0x300>
 8003cd4:	46aa      	mov	sl, r5
 8003cd6:	9602      	str	r6, [sp, #8]
 8003cd8:	e7df      	b.n	8003c9a <_scanf_float+0x2e2>
 8003cda:	f816 1c01 	ldrb.w	r1, [r6, #-1]
 8003cde:	6923      	ldr	r3, [r4, #16]
 8003ce0:	2965      	cmp	r1, #101	; 0x65
 8003ce2:	f103 33ff 	add.w	r3, r3, #4294967295
 8003ce6:	f106 35ff 	add.w	r5, r6, #4294967295
 8003cea:	6123      	str	r3, [r4, #16]
 8003cec:	d00c      	beq.n	8003d08 <_scanf_float+0x350>
 8003cee:	2945      	cmp	r1, #69	; 0x45
 8003cf0:	d00a      	beq.n	8003d08 <_scanf_float+0x350>
 8003cf2:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
 8003cf6:	463a      	mov	r2, r7
 8003cf8:	4640      	mov	r0, r8
 8003cfa:	4798      	blx	r3
 8003cfc:	6923      	ldr	r3, [r4, #16]
 8003cfe:	f816 1c02 	ldrb.w	r1, [r6, #-2]
 8003d02:	3b01      	subs	r3, #1
 8003d04:	1eb5      	subs	r5, r6, #2
 8003d06:	6123      	str	r3, [r4, #16]
 8003d08:	463a      	mov	r2, r7
 8003d0a:	4640      	mov	r0, r8
 8003d0c:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
 8003d10:	4798      	blx	r3
 8003d12:	462e      	mov	r6, r5
 8003d14:	6825      	ldr	r5, [r4, #0]
 8003d16:	f015 0510 	ands.w	r5, r5, #16
 8003d1a:	d155      	bne.n	8003dc8 <_scanf_float+0x410>
 8003d1c:	7035      	strb	r5, [r6, #0]
 8003d1e:	6823      	ldr	r3, [r4, #0]
 8003d20:	f403 63c0 	and.w	r3, r3, #1536	; 0x600
 8003d24:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8003d28:	d11d      	bne.n	8003d66 <_scanf_float+0x3ae>
 8003d2a:	9b01      	ldr	r3, [sp, #4]
 8003d2c:	454b      	cmp	r3, r9
 8003d2e:	eba3 0209 	sub.w	r2, r3, r9
 8003d32:	d125      	bne.n	8003d80 <_scanf_float+0x3c8>
 8003d34:	2200      	movs	r2, #0
 8003d36:	4659      	mov	r1, fp
 8003d38:	4640      	mov	r0, r8
 8003d3a:	f002 fc69 	bl	8006610 <_strtod_r>
 8003d3e:	9b03      	ldr	r3, [sp, #12]
 8003d40:	f8d4 c000 	ldr.w	ip, [r4]
 8003d44:	681b      	ldr	r3, [r3, #0]
 8003d46:	f01c 0f02 	tst.w	ip, #2
 8003d4a:	4606      	mov	r6, r0
 8003d4c:	460f      	mov	r7, r1
 8003d4e:	f103 0204 	add.w	r2, r3, #4
 8003d52:	d020      	beq.n	8003d96 <_scanf_float+0x3de>
 8003d54:	9903      	ldr	r1, [sp, #12]
 8003d56:	600a      	str	r2, [r1, #0]
 8003d58:	681b      	ldr	r3, [r3, #0]
 8003d5a:	e9c3 6700 	strd	r6, r7, [r3]
 8003d5e:	68e3      	ldr	r3, [r4, #12]
 8003d60:	3301      	adds	r3, #1
 8003d62:	60e3      	str	r3, [r4, #12]
 8003d64:	e66b      	b.n	8003a3e <_scanf_float+0x86>
 8003d66:	9b04      	ldr	r3, [sp, #16]
 8003d68:	2b00      	cmp	r3, #0
 8003d6a:	d0e3      	beq.n	8003d34 <_scanf_float+0x37c>
 8003d6c:	9905      	ldr	r1, [sp, #20]
 8003d6e:	230a      	movs	r3, #10
 8003d70:	462a      	mov	r2, r5
 8003d72:	4640      	mov	r0, r8
 8003d74:	3101      	adds	r1, #1
 8003d76:	f002 fccf 	bl	8006718 <_strtol_r>
 8003d7a:	9b04      	ldr	r3, [sp, #16]
 8003d7c:	9e05      	ldr	r6, [sp, #20]
 8003d7e:	1ac2      	subs	r2, r0, r3
 8003d80:	f204 136f 	addw	r3, r4, #367	; 0x16f
 8003d84:	429e      	cmp	r6, r3
 8003d86:	bf28      	it	cs
 8003d88:	f504 76b7 	addcs.w	r6, r4, #366	; 0x16e
 8003d8c:	4630      	mov	r0, r6
 8003d8e:	490f      	ldr	r1, [pc, #60]	; (8003dcc <_scanf_float+0x414>)
 8003d90:	f000 f928 	bl	8003fe4 <siprintf>
 8003d94:	e7ce      	b.n	8003d34 <_scanf_float+0x37c>
 8003d96:	f01c 0f04 	tst.w	ip, #4
 8003d9a:	d1db      	bne.n	8003d54 <_scanf_float+0x39c>
 8003d9c:	f8dd c00c 	ldr.w	ip, [sp, #12]
 8003da0:	f8cc 2000 	str.w	r2, [ip]
 8003da4:	f8d3 8000 	ldr.w	r8, [r3]
 8003da8:	4602      	mov	r2, r0
 8003daa:	460b      	mov	r3, r1
 8003dac:	f7fc fe3e 	bl	8000a2c <__aeabi_dcmpun>
 8003db0:	b128      	cbz	r0, 8003dbe <_scanf_float+0x406>
 8003db2:	4807      	ldr	r0, [pc, #28]	; (8003dd0 <_scanf_float+0x418>)
 8003db4:	f000 fa08 	bl	80041c8 <nanf>
 8003db8:	f8c8 0000 	str.w	r0, [r8]
 8003dbc:	e7cf      	b.n	8003d5e <_scanf_float+0x3a6>
 8003dbe:	4630      	mov	r0, r6
 8003dc0:	4639      	mov	r1, r7
 8003dc2:	f7fc fe91 	bl	8000ae8 <__aeabi_d2f>
 8003dc6:	e7f7      	b.n	8003db8 <_scanf_float+0x400>
 8003dc8:	2500      	movs	r5, #0
 8003dca:	e638      	b.n	8003a3e <_scanf_float+0x86>
 8003dcc:	0800915c 	.word	0x0800915c
 8003dd0:	080094ed 	.word	0x080094ed

08003dd4 <std>:
 8003dd4:	2300      	movs	r3, #0
 8003dd6:	b510      	push	{r4, lr}
 8003dd8:	4604      	mov	r4, r0
 8003dda:	e9c0 3300 	strd	r3, r3, [r0]
 8003dde:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8003de2:	6083      	str	r3, [r0, #8]
 8003de4:	8181      	strh	r1, [r0, #12]
 8003de6:	6643      	str	r3, [r0, #100]	; 0x64
 8003de8:	81c2      	strh	r2, [r0, #14]
 8003dea:	6183      	str	r3, [r0, #24]
 8003dec:	4619      	mov	r1, r3
 8003dee:	2208      	movs	r2, #8
 8003df0:	305c      	adds	r0, #92	; 0x5c
 8003df2:	f000 f95a 	bl	80040aa <memset>
 8003df6:	4b0d      	ldr	r3, [pc, #52]	; (8003e2c <std+0x58>)
 8003df8:	6224      	str	r4, [r4, #32]
 8003dfa:	6263      	str	r3, [r4, #36]	; 0x24
 8003dfc:	4b0c      	ldr	r3, [pc, #48]	; (8003e30 <std+0x5c>)
 8003dfe:	62a3      	str	r3, [r4, #40]	; 0x28
 8003e00:	4b0c      	ldr	r3, [pc, #48]	; (8003e34 <std+0x60>)
 8003e02:	62e3      	str	r3, [r4, #44]	; 0x2c
 8003e04:	4b0c      	ldr	r3, [pc, #48]	; (8003e38 <std+0x64>)
 8003e06:	6323      	str	r3, [r4, #48]	; 0x30
 8003e08:	4b0c      	ldr	r3, [pc, #48]	; (8003e3c <std+0x68>)
 8003e0a:	429c      	cmp	r4, r3
 8003e0c:	d006      	beq.n	8003e1c <std+0x48>
 8003e0e:	f103 0268 	add.w	r2, r3, #104	; 0x68
 8003e12:	4294      	cmp	r4, r2
 8003e14:	d002      	beq.n	8003e1c <std+0x48>
 8003e16:	33d0      	adds	r3, #208	; 0xd0
 8003e18:	429c      	cmp	r4, r3
 8003e1a:	d105      	bne.n	8003e28 <std+0x54>
 8003e1c:	f104 0058 	add.w	r0, r4, #88	; 0x58
 8003e20:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8003e24:	f000 b9be 	b.w	80041a4 <__retarget_lock_init_recursive>
 8003e28:	bd10      	pop	{r4, pc}
 8003e2a:	bf00      	nop
 8003e2c:	08004025 	.word	0x08004025
 8003e30:	08004047 	.word	0x08004047
 8003e34:	0800407f 	.word	0x0800407f
 8003e38:	080040a3 	.word	0x080040a3
 8003e3c:	20000308 	.word	0x20000308

08003e40 <stdio_exit_handler>:
 8003e40:	4a02      	ldr	r2, [pc, #8]	; (8003e4c <stdio_exit_handler+0xc>)
 8003e42:	4903      	ldr	r1, [pc, #12]	; (8003e50 <stdio_exit_handler+0x10>)
 8003e44:	4803      	ldr	r0, [pc, #12]	; (8003e54 <stdio_exit_handler+0x14>)
 8003e46:	f000 b869 	b.w	8003f1c <_fwalk_sglue>
 8003e4a:	bf00      	nop
 8003e4c:	20000024 	.word	0x20000024
 8003e50:	08006d55 	.word	0x08006d55
 8003e54:	20000030 	.word	0x20000030

08003e58 <cleanup_stdio>:
 8003e58:	6841      	ldr	r1, [r0, #4]
 8003e5a:	4b0c      	ldr	r3, [pc, #48]	; (8003e8c <cleanup_stdio+0x34>)
 8003e5c:	b510      	push	{r4, lr}
 8003e5e:	4299      	cmp	r1, r3
 8003e60:	4604      	mov	r4, r0
 8003e62:	d001      	beq.n	8003e68 <cleanup_stdio+0x10>
 8003e64:	f002 ff76 	bl	8006d54 <_fflush_r>
 8003e68:	68a1      	ldr	r1, [r4, #8]
 8003e6a:	4b09      	ldr	r3, [pc, #36]	; (8003e90 <cleanup_stdio+0x38>)
 8003e6c:	4299      	cmp	r1, r3
 8003e6e:	d002      	beq.n	8003e76 <cleanup_stdio+0x1e>
 8003e70:	4620      	mov	r0, r4
 8003e72:	f002 ff6f 	bl	8006d54 <_fflush_r>
 8003e76:	68e1      	ldr	r1, [r4, #12]
 8003e78:	4b06      	ldr	r3, [pc, #24]	; (8003e94 <cleanup_stdio+0x3c>)
 8003e7a:	4299      	cmp	r1, r3
 8003e7c:	d004      	beq.n	8003e88 <cleanup_stdio+0x30>
 8003e7e:	4620      	mov	r0, r4
 8003e80:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8003e84:	f002 bf66 	b.w	8006d54 <_fflush_r>
 8003e88:	bd10      	pop	{r4, pc}
 8003e8a:	bf00      	nop
 8003e8c:	20000308 	.word	0x20000308
 8003e90:	20000370 	.word	0x20000370
 8003e94:	200003d8 	.word	0x200003d8

08003e98 <global_stdio_init.part.0>:
 8003e98:	b510      	push	{r4, lr}
 8003e9a:	4b0b      	ldr	r3, [pc, #44]	; (8003ec8 <global_stdio_init.part.0+0x30>)
 8003e9c:	4c0b      	ldr	r4, [pc, #44]	; (8003ecc <global_stdio_init.part.0+0x34>)
 8003e9e:	4a0c      	ldr	r2, [pc, #48]	; (8003ed0 <global_stdio_init.part.0+0x38>)
 8003ea0:	4620      	mov	r0, r4
 8003ea2:	601a      	str	r2, [r3, #0]
 8003ea4:	2104      	movs	r1, #4
 8003ea6:	2200      	movs	r2, #0
 8003ea8:	f7ff ff94 	bl	8003dd4 <std>
 8003eac:	f104 0068 	add.w	r0, r4, #104	; 0x68
 8003eb0:	2201      	movs	r2, #1
 8003eb2:	2109      	movs	r1, #9
 8003eb4:	f7ff ff8e 	bl	8003dd4 <std>
 8003eb8:	f104 00d0 	add.w	r0, r4, #208	; 0xd0
 8003ebc:	2202      	movs	r2, #2
 8003ebe:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8003ec2:	2112      	movs	r1, #18
 8003ec4:	f7ff bf86 	b.w	8003dd4 <std>
 8003ec8:	20000440 	.word	0x20000440
 8003ecc:	20000308 	.word	0x20000308
 8003ed0:	08003e41 	.word	0x08003e41

08003ed4 <__sfp_lock_acquire>:
 8003ed4:	4801      	ldr	r0, [pc, #4]	; (8003edc <__sfp_lock_acquire+0x8>)
 8003ed6:	f000 b966 	b.w	80041a6 <__retarget_lock_acquire_recursive>
 8003eda:	bf00      	nop
 8003edc:	20000449 	.word	0x20000449

08003ee0 <__sfp_lock_release>:
 8003ee0:	4801      	ldr	r0, [pc, #4]	; (8003ee8 <__sfp_lock_release+0x8>)
 8003ee2:	f000 b961 	b.w	80041a8 <__retarget_lock_release_recursive>
 8003ee6:	bf00      	nop
 8003ee8:	20000449 	.word	0x20000449

08003eec <__sinit>:
 8003eec:	b510      	push	{r4, lr}
 8003eee:	4604      	mov	r4, r0
 8003ef0:	f7ff fff0 	bl	8003ed4 <__sfp_lock_acquire>
 8003ef4:	6a23      	ldr	r3, [r4, #32]
 8003ef6:	b11b      	cbz	r3, 8003f00 <__sinit+0x14>
 8003ef8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8003efc:	f7ff bff0 	b.w	8003ee0 <__sfp_lock_release>
 8003f00:	4b04      	ldr	r3, [pc, #16]	; (8003f14 <__sinit+0x28>)
 8003f02:	6223      	str	r3, [r4, #32]
 8003f04:	4b04      	ldr	r3, [pc, #16]	; (8003f18 <__sinit+0x2c>)
 8003f06:	681b      	ldr	r3, [r3, #0]
 8003f08:	2b00      	cmp	r3, #0
 8003f0a:	d1f5      	bne.n	8003ef8 <__sinit+0xc>
 8003f0c:	f7ff ffc4 	bl	8003e98 <global_stdio_init.part.0>
 8003f10:	e7f2      	b.n	8003ef8 <__sinit+0xc>
 8003f12:	bf00      	nop
 8003f14:	08003e59 	.word	0x08003e59
 8003f18:	20000440 	.word	0x20000440

08003f1c <_fwalk_sglue>:
 8003f1c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8003f20:	4607      	mov	r7, r0
 8003f22:	4688      	mov	r8, r1
 8003f24:	4614      	mov	r4, r2
 8003f26:	2600      	movs	r6, #0
 8003f28:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 8003f2c:	f1b9 0901 	subs.w	r9, r9, #1
 8003f30:	d505      	bpl.n	8003f3e <_fwalk_sglue+0x22>
 8003f32:	6824      	ldr	r4, [r4, #0]
 8003f34:	2c00      	cmp	r4, #0
 8003f36:	d1f7      	bne.n	8003f28 <_fwalk_sglue+0xc>
 8003f38:	4630      	mov	r0, r6
 8003f3a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8003f3e:	89ab      	ldrh	r3, [r5, #12]
 8003f40:	2b01      	cmp	r3, #1
 8003f42:	d907      	bls.n	8003f54 <_fwalk_sglue+0x38>
 8003f44:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8003f48:	3301      	adds	r3, #1
 8003f4a:	d003      	beq.n	8003f54 <_fwalk_sglue+0x38>
 8003f4c:	4629      	mov	r1, r5
 8003f4e:	4638      	mov	r0, r7
 8003f50:	47c0      	blx	r8
 8003f52:	4306      	orrs	r6, r0
 8003f54:	3568      	adds	r5, #104	; 0x68
 8003f56:	e7e9      	b.n	8003f2c <_fwalk_sglue+0x10>

08003f58 <iprintf>:
 8003f58:	b40f      	push	{r0, r1, r2, r3}
 8003f5a:	b507      	push	{r0, r1, r2, lr}
 8003f5c:	4906      	ldr	r1, [pc, #24]	; (8003f78 <iprintf+0x20>)
 8003f5e:	ab04      	add	r3, sp, #16
 8003f60:	6808      	ldr	r0, [r1, #0]
 8003f62:	f853 2b04 	ldr.w	r2, [r3], #4
 8003f66:	6881      	ldr	r1, [r0, #8]
 8003f68:	9301      	str	r3, [sp, #4]
 8003f6a:	f002 fd57 	bl	8006a1c <_vfiprintf_r>
 8003f6e:	b003      	add	sp, #12
 8003f70:	f85d eb04 	ldr.w	lr, [sp], #4
 8003f74:	b004      	add	sp, #16
 8003f76:	4770      	bx	lr
 8003f78:	2000007c 	.word	0x2000007c

08003f7c <sniprintf>:
 8003f7c:	b40c      	push	{r2, r3}
 8003f7e:	b530      	push	{r4, r5, lr}
 8003f80:	4b17      	ldr	r3, [pc, #92]	; (8003fe0 <sniprintf+0x64>)
 8003f82:	1e0c      	subs	r4, r1, #0
 8003f84:	681d      	ldr	r5, [r3, #0]
 8003f86:	b09d      	sub	sp, #116	; 0x74
 8003f88:	da08      	bge.n	8003f9c <sniprintf+0x20>
 8003f8a:	238b      	movs	r3, #139	; 0x8b
 8003f8c:	f04f 30ff 	mov.w	r0, #4294967295
 8003f90:	602b      	str	r3, [r5, #0]
 8003f92:	b01d      	add	sp, #116	; 0x74
 8003f94:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 8003f98:	b002      	add	sp, #8
 8003f9a:	4770      	bx	lr
 8003f9c:	f44f 7302 	mov.w	r3, #520	; 0x208
 8003fa0:	f8ad 3014 	strh.w	r3, [sp, #20]
 8003fa4:	bf0c      	ite	eq
 8003fa6:	4623      	moveq	r3, r4
 8003fa8:	f104 33ff 	addne.w	r3, r4, #4294967295
 8003fac:	9304      	str	r3, [sp, #16]
 8003fae:	9307      	str	r3, [sp, #28]
 8003fb0:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8003fb4:	9002      	str	r0, [sp, #8]
 8003fb6:	9006      	str	r0, [sp, #24]
 8003fb8:	f8ad 3016 	strh.w	r3, [sp, #22]
 8003fbc:	4628      	mov	r0, r5
 8003fbe:	ab21      	add	r3, sp, #132	; 0x84
 8003fc0:	9a20      	ldr	r2, [sp, #128]	; 0x80
 8003fc2:	a902      	add	r1, sp, #8
 8003fc4:	9301      	str	r3, [sp, #4]
 8003fc6:	f002 fc03 	bl	80067d0 <_svfiprintf_r>
 8003fca:	1c43      	adds	r3, r0, #1
 8003fcc:	bfbc      	itt	lt
 8003fce:	238b      	movlt	r3, #139	; 0x8b
 8003fd0:	602b      	strlt	r3, [r5, #0]
 8003fd2:	2c00      	cmp	r4, #0
 8003fd4:	d0dd      	beq.n	8003f92 <sniprintf+0x16>
 8003fd6:	2200      	movs	r2, #0
 8003fd8:	9b02      	ldr	r3, [sp, #8]
 8003fda:	701a      	strb	r2, [r3, #0]
 8003fdc:	e7d9      	b.n	8003f92 <sniprintf+0x16>
 8003fde:	bf00      	nop
 8003fe0:	2000007c 	.word	0x2000007c

08003fe4 <siprintf>:
 8003fe4:	b40e      	push	{r1, r2, r3}
 8003fe6:	f06f 4100 	mvn.w	r1, #2147483648	; 0x80000000
 8003fea:	b500      	push	{lr}
 8003fec:	b09c      	sub	sp, #112	; 0x70
 8003fee:	ab1d      	add	r3, sp, #116	; 0x74
 8003ff0:	9002      	str	r0, [sp, #8]
 8003ff2:	9006      	str	r0, [sp, #24]
 8003ff4:	9107      	str	r1, [sp, #28]
 8003ff6:	9104      	str	r1, [sp, #16]
 8003ff8:	4808      	ldr	r0, [pc, #32]	; (800401c <siprintf+0x38>)
 8003ffa:	4909      	ldr	r1, [pc, #36]	; (8004020 <siprintf+0x3c>)
 8003ffc:	f853 2b04 	ldr.w	r2, [r3], #4
 8004000:	9105      	str	r1, [sp, #20]
 8004002:	6800      	ldr	r0, [r0, #0]
 8004004:	a902      	add	r1, sp, #8
 8004006:	9301      	str	r3, [sp, #4]
 8004008:	f002 fbe2 	bl	80067d0 <_svfiprintf_r>
 800400c:	2200      	movs	r2, #0
 800400e:	9b02      	ldr	r3, [sp, #8]
 8004010:	701a      	strb	r2, [r3, #0]
 8004012:	b01c      	add	sp, #112	; 0x70
 8004014:	f85d eb04 	ldr.w	lr, [sp], #4
 8004018:	b003      	add	sp, #12
 800401a:	4770      	bx	lr
 800401c:	2000007c 	.word	0x2000007c
 8004020:	ffff0208 	.word	0xffff0208

08004024 <__sread>:
 8004024:	b510      	push	{r4, lr}
 8004026:	460c      	mov	r4, r1
 8004028:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800402c:	f000 f86c 	bl	8004108 <_read_r>
 8004030:	2800      	cmp	r0, #0
 8004032:	bfab      	itete	ge
 8004034:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 8004036:	89a3      	ldrhlt	r3, [r4, #12]
 8004038:	181b      	addge	r3, r3, r0
 800403a:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 800403e:	bfac      	ite	ge
 8004040:	6563      	strge	r3, [r4, #84]	; 0x54
 8004042:	81a3      	strhlt	r3, [r4, #12]
 8004044:	bd10      	pop	{r4, pc}

08004046 <__swrite>:
 8004046:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800404a:	461f      	mov	r7, r3
 800404c:	898b      	ldrh	r3, [r1, #12]
 800404e:	4605      	mov	r5, r0
 8004050:	05db      	lsls	r3, r3, #23
 8004052:	460c      	mov	r4, r1
 8004054:	4616      	mov	r6, r2
 8004056:	d505      	bpl.n	8004064 <__swrite+0x1e>
 8004058:	2302      	movs	r3, #2
 800405a:	2200      	movs	r2, #0
 800405c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8004060:	f000 f840 	bl	80040e4 <_lseek_r>
 8004064:	89a3      	ldrh	r3, [r4, #12]
 8004066:	4632      	mov	r2, r6
 8004068:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 800406c:	81a3      	strh	r3, [r4, #12]
 800406e:	4628      	mov	r0, r5
 8004070:	463b      	mov	r3, r7
 8004072:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8004076:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800407a:	f000 b857 	b.w	800412c <_write_r>

0800407e <__sseek>:
 800407e:	b510      	push	{r4, lr}
 8004080:	460c      	mov	r4, r1
 8004082:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8004086:	f000 f82d 	bl	80040e4 <_lseek_r>
 800408a:	1c43      	adds	r3, r0, #1
 800408c:	89a3      	ldrh	r3, [r4, #12]
 800408e:	bf15      	itete	ne
 8004090:	6560      	strne	r0, [r4, #84]	; 0x54
 8004092:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 8004096:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 800409a:	81a3      	strheq	r3, [r4, #12]
 800409c:	bf18      	it	ne
 800409e:	81a3      	strhne	r3, [r4, #12]
 80040a0:	bd10      	pop	{r4, pc}

080040a2 <__sclose>:
 80040a2:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80040a6:	f000 b80d 	b.w	80040c4 <_close_r>

080040aa <memset>:
 80040aa:	4603      	mov	r3, r0
 80040ac:	4402      	add	r2, r0
 80040ae:	4293      	cmp	r3, r2
 80040b0:	d100      	bne.n	80040b4 <memset+0xa>
 80040b2:	4770      	bx	lr
 80040b4:	f803 1b01 	strb.w	r1, [r3], #1
 80040b8:	e7f9      	b.n	80040ae <memset+0x4>
	...

080040bc <_localeconv_r>:
 80040bc:	4800      	ldr	r0, [pc, #0]	; (80040c0 <_localeconv_r+0x4>)
 80040be:	4770      	bx	lr
 80040c0:	20000170 	.word	0x20000170

080040c4 <_close_r>:
 80040c4:	b538      	push	{r3, r4, r5, lr}
 80040c6:	2300      	movs	r3, #0
 80040c8:	4d05      	ldr	r5, [pc, #20]	; (80040e0 <_close_r+0x1c>)
 80040ca:	4604      	mov	r4, r0
 80040cc:	4608      	mov	r0, r1
 80040ce:	602b      	str	r3, [r5, #0]
 80040d0:	f7fe fed2 	bl	8002e78 <_close>
 80040d4:	1c43      	adds	r3, r0, #1
 80040d6:	d102      	bne.n	80040de <_close_r+0x1a>
 80040d8:	682b      	ldr	r3, [r5, #0]
 80040da:	b103      	cbz	r3, 80040de <_close_r+0x1a>
 80040dc:	6023      	str	r3, [r4, #0]
 80040de:	bd38      	pop	{r3, r4, r5, pc}
 80040e0:	20000444 	.word	0x20000444

080040e4 <_lseek_r>:
 80040e4:	b538      	push	{r3, r4, r5, lr}
 80040e6:	4604      	mov	r4, r0
 80040e8:	4608      	mov	r0, r1
 80040ea:	4611      	mov	r1, r2
 80040ec:	2200      	movs	r2, #0
 80040ee:	4d05      	ldr	r5, [pc, #20]	; (8004104 <_lseek_r+0x20>)
 80040f0:	602a      	str	r2, [r5, #0]
 80040f2:	461a      	mov	r2, r3
 80040f4:	f7fe fee4 	bl	8002ec0 <_lseek>
 80040f8:	1c43      	adds	r3, r0, #1
 80040fa:	d102      	bne.n	8004102 <_lseek_r+0x1e>
 80040fc:	682b      	ldr	r3, [r5, #0]
 80040fe:	b103      	cbz	r3, 8004102 <_lseek_r+0x1e>
 8004100:	6023      	str	r3, [r4, #0]
 8004102:	bd38      	pop	{r3, r4, r5, pc}
 8004104:	20000444 	.word	0x20000444

08004108 <_read_r>:
 8004108:	b538      	push	{r3, r4, r5, lr}
 800410a:	4604      	mov	r4, r0
 800410c:	4608      	mov	r0, r1
 800410e:	4611      	mov	r1, r2
 8004110:	2200      	movs	r2, #0
 8004112:	4d05      	ldr	r5, [pc, #20]	; (8004128 <_read_r+0x20>)
 8004114:	602a      	str	r2, [r5, #0]
 8004116:	461a      	mov	r2, r3
 8004118:	f7fe fe91 	bl	8002e3e <_read>
 800411c:	1c43      	adds	r3, r0, #1
 800411e:	d102      	bne.n	8004126 <_read_r+0x1e>
 8004120:	682b      	ldr	r3, [r5, #0]
 8004122:	b103      	cbz	r3, 8004126 <_read_r+0x1e>
 8004124:	6023      	str	r3, [r4, #0]
 8004126:	bd38      	pop	{r3, r4, r5, pc}
 8004128:	20000444 	.word	0x20000444

0800412c <_write_r>:
 800412c:	b538      	push	{r3, r4, r5, lr}
 800412e:	4604      	mov	r4, r0
 8004130:	4608      	mov	r0, r1
 8004132:	4611      	mov	r1, r2
 8004134:	2200      	movs	r2, #0
 8004136:	4d05      	ldr	r5, [pc, #20]	; (800414c <_write_r+0x20>)
 8004138:	602a      	str	r2, [r5, #0]
 800413a:	461a      	mov	r2, r3
 800413c:	f7fe ff8e 	bl	800305c <_write>
 8004140:	1c43      	adds	r3, r0, #1
 8004142:	d102      	bne.n	800414a <_write_r+0x1e>
 8004144:	682b      	ldr	r3, [r5, #0]
 8004146:	b103      	cbz	r3, 800414a <_write_r+0x1e>
 8004148:	6023      	str	r3, [r4, #0]
 800414a:	bd38      	pop	{r3, r4, r5, pc}
 800414c:	20000444 	.word	0x20000444

08004150 <__errno>:
 8004150:	4b01      	ldr	r3, [pc, #4]	; (8004158 <__errno+0x8>)
 8004152:	6818      	ldr	r0, [r3, #0]
 8004154:	4770      	bx	lr
 8004156:	bf00      	nop
 8004158:	2000007c 	.word	0x2000007c

0800415c <__libc_init_array>:
 800415c:	b570      	push	{r4, r5, r6, lr}
 800415e:	2600      	movs	r6, #0
 8004160:	4d0c      	ldr	r5, [pc, #48]	; (8004194 <__libc_init_array+0x38>)
 8004162:	4c0d      	ldr	r4, [pc, #52]	; (8004198 <__libc_init_array+0x3c>)
 8004164:	1b64      	subs	r4, r4, r5
 8004166:	10a4      	asrs	r4, r4, #2
 8004168:	42a6      	cmp	r6, r4
 800416a:	d109      	bne.n	8004180 <__libc_init_array+0x24>
 800416c:	f004 fb72 	bl	8008854 <_init>
 8004170:	2600      	movs	r6, #0
 8004172:	4d0a      	ldr	r5, [pc, #40]	; (800419c <__libc_init_array+0x40>)
 8004174:	4c0a      	ldr	r4, [pc, #40]	; (80041a0 <__libc_init_array+0x44>)
 8004176:	1b64      	subs	r4, r4, r5
 8004178:	10a4      	asrs	r4, r4, #2
 800417a:	42a6      	cmp	r6, r4
 800417c:	d105      	bne.n	800418a <__libc_init_array+0x2e>
 800417e:	bd70      	pop	{r4, r5, r6, pc}
 8004180:	f855 3b04 	ldr.w	r3, [r5], #4
 8004184:	4798      	blx	r3
 8004186:	3601      	adds	r6, #1
 8004188:	e7ee      	b.n	8004168 <__libc_init_array+0xc>
 800418a:	f855 3b04 	ldr.w	r3, [r5], #4
 800418e:	4798      	blx	r3
 8004190:	3601      	adds	r6, #1
 8004192:	e7f2      	b.n	800417a <__libc_init_array+0x1e>
 8004194:	08009580 	.word	0x08009580
 8004198:	08009580 	.word	0x08009580
 800419c:	08009580 	.word	0x08009580
 80041a0:	08009584 	.word	0x08009584

080041a4 <__retarget_lock_init_recursive>:
 80041a4:	4770      	bx	lr

080041a6 <__retarget_lock_acquire_recursive>:
 80041a6:	4770      	bx	lr

080041a8 <__retarget_lock_release_recursive>:
 80041a8:	4770      	bx	lr

080041aa <memchr>:
 80041aa:	4603      	mov	r3, r0
 80041ac:	b510      	push	{r4, lr}
 80041ae:	b2c9      	uxtb	r1, r1
 80041b0:	4402      	add	r2, r0
 80041b2:	4293      	cmp	r3, r2
 80041b4:	4618      	mov	r0, r3
 80041b6:	d101      	bne.n	80041bc <memchr+0x12>
 80041b8:	2000      	movs	r0, #0
 80041ba:	e003      	b.n	80041c4 <memchr+0x1a>
 80041bc:	7804      	ldrb	r4, [r0, #0]
 80041be:	3301      	adds	r3, #1
 80041c0:	428c      	cmp	r4, r1
 80041c2:	d1f6      	bne.n	80041b2 <memchr+0x8>
 80041c4:	bd10      	pop	{r4, pc}
	...

080041c8 <nanf>:
 80041c8:	4800      	ldr	r0, [pc, #0]	; (80041cc <nanf+0x4>)
 80041ca:	4770      	bx	lr
 80041cc:	7fc00000 	.word	0x7fc00000

080041d0 <quorem>:
 80041d0:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80041d4:	6903      	ldr	r3, [r0, #16]
 80041d6:	690c      	ldr	r4, [r1, #16]
 80041d8:	4607      	mov	r7, r0
 80041da:	42a3      	cmp	r3, r4
 80041dc:	db7f      	blt.n	80042de <quorem+0x10e>
 80041de:	3c01      	subs	r4, #1
 80041e0:	f100 0514 	add.w	r5, r0, #20
 80041e4:	f101 0814 	add.w	r8, r1, #20
 80041e8:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 80041ec:	9301      	str	r3, [sp, #4]
 80041ee:	f858 3024 	ldr.w	r3, [r8, r4, lsl #2]
 80041f2:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 80041f6:	3301      	adds	r3, #1
 80041f8:	429a      	cmp	r2, r3
 80041fa:	fbb2 f6f3 	udiv	r6, r2, r3
 80041fe:	ea4f 0b84 	mov.w	fp, r4, lsl #2
 8004202:	eb08 0984 	add.w	r9, r8, r4, lsl #2
 8004206:	d331      	bcc.n	800426c <quorem+0x9c>
 8004208:	f04f 0e00 	mov.w	lr, #0
 800420c:	4640      	mov	r0, r8
 800420e:	46ac      	mov	ip, r5
 8004210:	46f2      	mov	sl, lr
 8004212:	f850 2b04 	ldr.w	r2, [r0], #4
 8004216:	b293      	uxth	r3, r2
 8004218:	fb06 e303 	mla	r3, r6, r3, lr
 800421c:	ea4f 4e12 	mov.w	lr, r2, lsr #16
 8004220:	0c1a      	lsrs	r2, r3, #16
 8004222:	b29b      	uxth	r3, r3
 8004224:	fb06 220e 	mla	r2, r6, lr, r2
 8004228:	ebaa 0303 	sub.w	r3, sl, r3
 800422c:	f8dc a000 	ldr.w	sl, [ip]
 8004230:	ea4f 4e12 	mov.w	lr, r2, lsr #16
 8004234:	fa1f fa8a 	uxth.w	sl, sl
 8004238:	4453      	add	r3, sl
 800423a:	f8dc a000 	ldr.w	sl, [ip]
 800423e:	b292      	uxth	r2, r2
 8004240:	ebc2 421a 	rsb	r2, r2, sl, lsr #16
 8004244:	eb02 4223 	add.w	r2, r2, r3, asr #16
 8004248:	b29b      	uxth	r3, r3
 800424a:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 800424e:	4581      	cmp	r9, r0
 8004250:	ea4f 4a22 	mov.w	sl, r2, asr #16
 8004254:	f84c 3b04 	str.w	r3, [ip], #4
 8004258:	d2db      	bcs.n	8004212 <quorem+0x42>
 800425a:	f855 300b 	ldr.w	r3, [r5, fp]
 800425e:	b92b      	cbnz	r3, 800426c <quorem+0x9c>
 8004260:	9b01      	ldr	r3, [sp, #4]
 8004262:	3b04      	subs	r3, #4
 8004264:	429d      	cmp	r5, r3
 8004266:	461a      	mov	r2, r3
 8004268:	d32d      	bcc.n	80042c6 <quorem+0xf6>
 800426a:	613c      	str	r4, [r7, #16]
 800426c:	4638      	mov	r0, r7
 800426e:	f001 f9df 	bl	8005630 <__mcmp>
 8004272:	2800      	cmp	r0, #0
 8004274:	db23      	blt.n	80042be <quorem+0xee>
 8004276:	4629      	mov	r1, r5
 8004278:	2000      	movs	r0, #0
 800427a:	3601      	adds	r6, #1
 800427c:	f858 2b04 	ldr.w	r2, [r8], #4
 8004280:	f8d1 c000 	ldr.w	ip, [r1]
 8004284:	b293      	uxth	r3, r2
 8004286:	1ac3      	subs	r3, r0, r3
 8004288:	0c12      	lsrs	r2, r2, #16
 800428a:	fa1f f08c 	uxth.w	r0, ip
 800428e:	4403      	add	r3, r0
 8004290:	ebc2 421c 	rsb	r2, r2, ip, lsr #16
 8004294:	eb02 4223 	add.w	r2, r2, r3, asr #16
 8004298:	b29b      	uxth	r3, r3
 800429a:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 800429e:	45c1      	cmp	r9, r8
 80042a0:	ea4f 4022 	mov.w	r0, r2, asr #16
 80042a4:	f841 3b04 	str.w	r3, [r1], #4
 80042a8:	d2e8      	bcs.n	800427c <quorem+0xac>
 80042aa:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 80042ae:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 80042b2:	b922      	cbnz	r2, 80042be <quorem+0xee>
 80042b4:	3b04      	subs	r3, #4
 80042b6:	429d      	cmp	r5, r3
 80042b8:	461a      	mov	r2, r3
 80042ba:	d30a      	bcc.n	80042d2 <quorem+0x102>
 80042bc:	613c      	str	r4, [r7, #16]
 80042be:	4630      	mov	r0, r6
 80042c0:	b003      	add	sp, #12
 80042c2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80042c6:	6812      	ldr	r2, [r2, #0]
 80042c8:	3b04      	subs	r3, #4
 80042ca:	2a00      	cmp	r2, #0
 80042cc:	d1cd      	bne.n	800426a <quorem+0x9a>
 80042ce:	3c01      	subs	r4, #1
 80042d0:	e7c8      	b.n	8004264 <quorem+0x94>
 80042d2:	6812      	ldr	r2, [r2, #0]
 80042d4:	3b04      	subs	r3, #4
 80042d6:	2a00      	cmp	r2, #0
 80042d8:	d1f0      	bne.n	80042bc <quorem+0xec>
 80042da:	3c01      	subs	r4, #1
 80042dc:	e7eb      	b.n	80042b6 <quorem+0xe6>
 80042de:	2000      	movs	r0, #0
 80042e0:	e7ee      	b.n	80042c0 <quorem+0xf0>
 80042e2:	0000      	movs	r0, r0
 80042e4:	0000      	movs	r0, r0
	...

080042e8 <_dtoa_r>:
 80042e8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80042ec:	4616      	mov	r6, r2
 80042ee:	461f      	mov	r7, r3
 80042f0:	69c4      	ldr	r4, [r0, #28]
 80042f2:	b099      	sub	sp, #100	; 0x64
 80042f4:	4605      	mov	r5, r0
 80042f6:	e9cd 6704 	strd	r6, r7, [sp, #16]
 80042fa:	f8dd 8094 	ldr.w	r8, [sp, #148]	; 0x94
 80042fe:	b974      	cbnz	r4, 800431e <_dtoa_r+0x36>
 8004300:	2010      	movs	r0, #16
 8004302:	f000 fe1d 	bl	8004f40 <malloc>
 8004306:	4602      	mov	r2, r0
 8004308:	61e8      	str	r0, [r5, #28]
 800430a:	b920      	cbnz	r0, 8004316 <_dtoa_r+0x2e>
 800430c:	21ef      	movs	r1, #239	; 0xef
 800430e:	4bac      	ldr	r3, [pc, #688]	; (80045c0 <_dtoa_r+0x2d8>)
 8004310:	48ac      	ldr	r0, [pc, #688]	; (80045c4 <_dtoa_r+0x2dc>)
 8004312:	f002 fe2d 	bl	8006f70 <__assert_func>
 8004316:	e9c0 4401 	strd	r4, r4, [r0, #4]
 800431a:	6004      	str	r4, [r0, #0]
 800431c:	60c4      	str	r4, [r0, #12]
 800431e:	69eb      	ldr	r3, [r5, #28]
 8004320:	6819      	ldr	r1, [r3, #0]
 8004322:	b151      	cbz	r1, 800433a <_dtoa_r+0x52>
 8004324:	685a      	ldr	r2, [r3, #4]
 8004326:	2301      	movs	r3, #1
 8004328:	4093      	lsls	r3, r2
 800432a:	604a      	str	r2, [r1, #4]
 800432c:	608b      	str	r3, [r1, #8]
 800432e:	4628      	mov	r0, r5
 8004330:	f000 fefa 	bl	8005128 <_Bfree>
 8004334:	2200      	movs	r2, #0
 8004336:	69eb      	ldr	r3, [r5, #28]
 8004338:	601a      	str	r2, [r3, #0]
 800433a:	1e3b      	subs	r3, r7, #0
 800433c:	bfaf      	iteee	ge
 800433e:	2300      	movge	r3, #0
 8004340:	2201      	movlt	r2, #1
 8004342:	f023 4300 	biclt.w	r3, r3, #2147483648	; 0x80000000
 8004346:	9305      	strlt	r3, [sp, #20]
 8004348:	bfa8      	it	ge
 800434a:	f8c8 3000 	strge.w	r3, [r8]
 800434e:	f8dd 9014 	ldr.w	r9, [sp, #20]
 8004352:	4b9d      	ldr	r3, [pc, #628]	; (80045c8 <_dtoa_r+0x2e0>)
 8004354:	bfb8      	it	lt
 8004356:	f8c8 2000 	strlt.w	r2, [r8]
 800435a:	ea33 0309 	bics.w	r3, r3, r9
 800435e:	d119      	bne.n	8004394 <_dtoa_r+0xac>
 8004360:	f242 730f 	movw	r3, #9999	; 0x270f
 8004364:	9a24      	ldr	r2, [sp, #144]	; 0x90
 8004366:	6013      	str	r3, [r2, #0]
 8004368:	f3c9 0313 	ubfx	r3, r9, #0, #20
 800436c:	4333      	orrs	r3, r6
 800436e:	f000 8589 	beq.w	8004e84 <_dtoa_r+0xb9c>
 8004372:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8004374:	b953      	cbnz	r3, 800438c <_dtoa_r+0xa4>
 8004376:	4b95      	ldr	r3, [pc, #596]	; (80045cc <_dtoa_r+0x2e4>)
 8004378:	e023      	b.n	80043c2 <_dtoa_r+0xda>
 800437a:	4b95      	ldr	r3, [pc, #596]	; (80045d0 <_dtoa_r+0x2e8>)
 800437c:	9303      	str	r3, [sp, #12]
 800437e:	3308      	adds	r3, #8
 8004380:	9a26      	ldr	r2, [sp, #152]	; 0x98
 8004382:	6013      	str	r3, [r2, #0]
 8004384:	9803      	ldr	r0, [sp, #12]
 8004386:	b019      	add	sp, #100	; 0x64
 8004388:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800438c:	4b8f      	ldr	r3, [pc, #572]	; (80045cc <_dtoa_r+0x2e4>)
 800438e:	9303      	str	r3, [sp, #12]
 8004390:	3303      	adds	r3, #3
 8004392:	e7f5      	b.n	8004380 <_dtoa_r+0x98>
 8004394:	e9dd 3404 	ldrd	r3, r4, [sp, #16]
 8004398:	e9cd 340c 	strd	r3, r4, [sp, #48]	; 0x30
 800439c:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	; 0x30
 80043a0:	2200      	movs	r2, #0
 80043a2:	2300      	movs	r3, #0
 80043a4:	f7fc fb10 	bl	80009c8 <__aeabi_dcmpeq>
 80043a8:	4680      	mov	r8, r0
 80043aa:	b160      	cbz	r0, 80043c6 <_dtoa_r+0xde>
 80043ac:	2301      	movs	r3, #1
 80043ae:	9a24      	ldr	r2, [sp, #144]	; 0x90
 80043b0:	6013      	str	r3, [r2, #0]
 80043b2:	9b26      	ldr	r3, [sp, #152]	; 0x98
 80043b4:	2b00      	cmp	r3, #0
 80043b6:	f000 8562 	beq.w	8004e7e <_dtoa_r+0xb96>
 80043ba:	4b86      	ldr	r3, [pc, #536]	; (80045d4 <_dtoa_r+0x2ec>)
 80043bc:	9a26      	ldr	r2, [sp, #152]	; 0x98
 80043be:	6013      	str	r3, [r2, #0]
 80043c0:	3b01      	subs	r3, #1
 80043c2:	9303      	str	r3, [sp, #12]
 80043c4:	e7de      	b.n	8004384 <_dtoa_r+0x9c>
 80043c6:	ab16      	add	r3, sp, #88	; 0x58
 80043c8:	9301      	str	r3, [sp, #4]
 80043ca:	ab17      	add	r3, sp, #92	; 0x5c
 80043cc:	9300      	str	r3, [sp, #0]
 80043ce:	4628      	mov	r0, r5
 80043d0:	e9dd 230c 	ldrd	r2, r3, [sp, #48]	; 0x30
 80043d4:	f001 fa3c 	bl	8005850 <__d2b>
 80043d8:	f3c9 540a 	ubfx	r4, r9, #20, #11
 80043dc:	4682      	mov	sl, r0
 80043de:	2c00      	cmp	r4, #0
 80043e0:	d07e      	beq.n	80044e0 <_dtoa_r+0x1f8>
 80043e2:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	; 0x30
 80043e6:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80043e8:	f2a4 34ff 	subw	r4, r4, #1023	; 0x3ff
 80043ec:	f3c3 0313 	ubfx	r3, r3, #0, #20
 80043f0:	f043 537f 	orr.w	r3, r3, #1069547520	; 0x3fc00000
 80043f4:	f443 1340 	orr.w	r3, r3, #3145728	; 0x300000
 80043f8:	f8cd 804c 	str.w	r8, [sp, #76]	; 0x4c
 80043fc:	4619      	mov	r1, r3
 80043fe:	2200      	movs	r2, #0
 8004400:	4b75      	ldr	r3, [pc, #468]	; (80045d8 <_dtoa_r+0x2f0>)
 8004402:	f7fb fec1 	bl	8000188 <__aeabi_dsub>
 8004406:	a368      	add	r3, pc, #416	; (adr r3, 80045a8 <_dtoa_r+0x2c0>)
 8004408:	e9d3 2300 	ldrd	r2, r3, [r3]
 800440c:	f7fc f874 	bl	80004f8 <__aeabi_dmul>
 8004410:	a367      	add	r3, pc, #412	; (adr r3, 80045b0 <_dtoa_r+0x2c8>)
 8004412:	e9d3 2300 	ldrd	r2, r3, [r3]
 8004416:	f7fb feb9 	bl	800018c <__adddf3>
 800441a:	4606      	mov	r6, r0
 800441c:	4620      	mov	r0, r4
 800441e:	460f      	mov	r7, r1
 8004420:	f7fc f800 	bl	8000424 <__aeabi_i2d>
 8004424:	a364      	add	r3, pc, #400	; (adr r3, 80045b8 <_dtoa_r+0x2d0>)
 8004426:	e9d3 2300 	ldrd	r2, r3, [r3]
 800442a:	f7fc f865 	bl	80004f8 <__aeabi_dmul>
 800442e:	4602      	mov	r2, r0
 8004430:	460b      	mov	r3, r1
 8004432:	4630      	mov	r0, r6
 8004434:	4639      	mov	r1, r7
 8004436:	f7fb fea9 	bl	800018c <__adddf3>
 800443a:	4606      	mov	r6, r0
 800443c:	460f      	mov	r7, r1
 800443e:	f7fc fb0b 	bl	8000a58 <__aeabi_d2iz>
 8004442:	2200      	movs	r2, #0
 8004444:	4683      	mov	fp, r0
 8004446:	2300      	movs	r3, #0
 8004448:	4630      	mov	r0, r6
 800444a:	4639      	mov	r1, r7
 800444c:	f7fc fac6 	bl	80009dc <__aeabi_dcmplt>
 8004450:	b148      	cbz	r0, 8004466 <_dtoa_r+0x17e>
 8004452:	4658      	mov	r0, fp
 8004454:	f7fb ffe6 	bl	8000424 <__aeabi_i2d>
 8004458:	4632      	mov	r2, r6
 800445a:	463b      	mov	r3, r7
 800445c:	f7fc fab4 	bl	80009c8 <__aeabi_dcmpeq>
 8004460:	b908      	cbnz	r0, 8004466 <_dtoa_r+0x17e>
 8004462:	f10b 3bff 	add.w	fp, fp, #4294967295
 8004466:	f1bb 0f16 	cmp.w	fp, #22
 800446a:	d857      	bhi.n	800451c <_dtoa_r+0x234>
 800446c:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	; 0x30
 8004470:	4b5a      	ldr	r3, [pc, #360]	; (80045dc <_dtoa_r+0x2f4>)
 8004472:	eb03 03cb 	add.w	r3, r3, fp, lsl #3
 8004476:	e9d3 2300 	ldrd	r2, r3, [r3]
 800447a:	f7fc faaf 	bl	80009dc <__aeabi_dcmplt>
 800447e:	2800      	cmp	r0, #0
 8004480:	d04e      	beq.n	8004520 <_dtoa_r+0x238>
 8004482:	2300      	movs	r3, #0
 8004484:	f10b 3bff 	add.w	fp, fp, #4294967295
 8004488:	930f      	str	r3, [sp, #60]	; 0x3c
 800448a:	9b16      	ldr	r3, [sp, #88]	; 0x58
 800448c:	1b1b      	subs	r3, r3, r4
 800448e:	1e5a      	subs	r2, r3, #1
 8004490:	bf46      	itte	mi
 8004492:	f1c3 0901 	rsbmi	r9, r3, #1
 8004496:	2300      	movmi	r3, #0
 8004498:	f04f 0900 	movpl.w	r9, #0
 800449c:	9209      	str	r2, [sp, #36]	; 0x24
 800449e:	bf48      	it	mi
 80044a0:	9309      	strmi	r3, [sp, #36]	; 0x24
 80044a2:	f1bb 0f00 	cmp.w	fp, #0
 80044a6:	db3d      	blt.n	8004524 <_dtoa_r+0x23c>
 80044a8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80044aa:	f8cd b038 	str.w	fp, [sp, #56]	; 0x38
 80044ae:	445b      	add	r3, fp
 80044b0:	9309      	str	r3, [sp, #36]	; 0x24
 80044b2:	2300      	movs	r3, #0
 80044b4:	930a      	str	r3, [sp, #40]	; 0x28
 80044b6:	9b22      	ldr	r3, [sp, #136]	; 0x88
 80044b8:	2b09      	cmp	r3, #9
 80044ba:	d867      	bhi.n	800458c <_dtoa_r+0x2a4>
 80044bc:	2b05      	cmp	r3, #5
 80044be:	bfc4      	itt	gt
 80044c0:	3b04      	subgt	r3, #4
 80044c2:	9322      	strgt	r3, [sp, #136]	; 0x88
 80044c4:	9b22      	ldr	r3, [sp, #136]	; 0x88
 80044c6:	bfc8      	it	gt
 80044c8:	2400      	movgt	r4, #0
 80044ca:	f1a3 0302 	sub.w	r3, r3, #2
 80044ce:	bfd8      	it	le
 80044d0:	2401      	movle	r4, #1
 80044d2:	2b03      	cmp	r3, #3
 80044d4:	f200 8086 	bhi.w	80045e4 <_dtoa_r+0x2fc>
 80044d8:	e8df f003 	tbb	[pc, r3]
 80044dc:	5637392c 	.word	0x5637392c
 80044e0:	e9dd 4316 	ldrd	r4, r3, [sp, #88]	; 0x58
 80044e4:	441c      	add	r4, r3
 80044e6:	f204 4332 	addw	r3, r4, #1074	; 0x432
 80044ea:	2b20      	cmp	r3, #32
 80044ec:	bfc1      	itttt	gt
 80044ee:	f1c3 0340 	rsbgt	r3, r3, #64	; 0x40
 80044f2:	fa09 f903 	lslgt.w	r9, r9, r3
 80044f6:	f204 4312 	addwgt	r3, r4, #1042	; 0x412
 80044fa:	fa26 f303 	lsrgt.w	r3, r6, r3
 80044fe:	bfd6      	itet	le
 8004500:	f1c3 0320 	rsble	r3, r3, #32
 8004504:	ea49 0003 	orrgt.w	r0, r9, r3
 8004508:	fa06 f003 	lslle.w	r0, r6, r3
 800450c:	f7fb ff7a 	bl	8000404 <__aeabi_ui2d>
 8004510:	2201      	movs	r2, #1
 8004512:	f1a1 73f8 	sub.w	r3, r1, #32505856	; 0x1f00000
 8004516:	3c01      	subs	r4, #1
 8004518:	9213      	str	r2, [sp, #76]	; 0x4c
 800451a:	e76f      	b.n	80043fc <_dtoa_r+0x114>
 800451c:	2301      	movs	r3, #1
 800451e:	e7b3      	b.n	8004488 <_dtoa_r+0x1a0>
 8004520:	900f      	str	r0, [sp, #60]	; 0x3c
 8004522:	e7b2      	b.n	800448a <_dtoa_r+0x1a2>
 8004524:	f1cb 0300 	rsb	r3, fp, #0
 8004528:	930a      	str	r3, [sp, #40]	; 0x28
 800452a:	2300      	movs	r3, #0
 800452c:	eba9 090b 	sub.w	r9, r9, fp
 8004530:	930e      	str	r3, [sp, #56]	; 0x38
 8004532:	e7c0      	b.n	80044b6 <_dtoa_r+0x1ce>
 8004534:	2300      	movs	r3, #0
 8004536:	930b      	str	r3, [sp, #44]	; 0x2c
 8004538:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 800453a:	2b00      	cmp	r3, #0
 800453c:	dc55      	bgt.n	80045ea <_dtoa_r+0x302>
 800453e:	2301      	movs	r3, #1
 8004540:	461a      	mov	r2, r3
 8004542:	9306      	str	r3, [sp, #24]
 8004544:	9308      	str	r3, [sp, #32]
 8004546:	9223      	str	r2, [sp, #140]	; 0x8c
 8004548:	e00b      	b.n	8004562 <_dtoa_r+0x27a>
 800454a:	2301      	movs	r3, #1
 800454c:	e7f3      	b.n	8004536 <_dtoa_r+0x24e>
 800454e:	2300      	movs	r3, #0
 8004550:	930b      	str	r3, [sp, #44]	; 0x2c
 8004552:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8004554:	445b      	add	r3, fp
 8004556:	9306      	str	r3, [sp, #24]
 8004558:	3301      	adds	r3, #1
 800455a:	2b01      	cmp	r3, #1
 800455c:	9308      	str	r3, [sp, #32]
 800455e:	bfb8      	it	lt
 8004560:	2301      	movlt	r3, #1
 8004562:	2100      	movs	r1, #0
 8004564:	2204      	movs	r2, #4
 8004566:	69e8      	ldr	r0, [r5, #28]
 8004568:	f102 0614 	add.w	r6, r2, #20
 800456c:	429e      	cmp	r6, r3
 800456e:	d940      	bls.n	80045f2 <_dtoa_r+0x30a>
 8004570:	6041      	str	r1, [r0, #4]
 8004572:	4628      	mov	r0, r5
 8004574:	f000 fd98 	bl	80050a8 <_Balloc>
 8004578:	9003      	str	r0, [sp, #12]
 800457a:	2800      	cmp	r0, #0
 800457c:	d13c      	bne.n	80045f8 <_dtoa_r+0x310>
 800457e:	4602      	mov	r2, r0
 8004580:	f240 11af 	movw	r1, #431	; 0x1af
 8004584:	4b16      	ldr	r3, [pc, #88]	; (80045e0 <_dtoa_r+0x2f8>)
 8004586:	e6c3      	b.n	8004310 <_dtoa_r+0x28>
 8004588:	2301      	movs	r3, #1
 800458a:	e7e1      	b.n	8004550 <_dtoa_r+0x268>
 800458c:	2401      	movs	r4, #1
 800458e:	2300      	movs	r3, #0
 8004590:	940b      	str	r4, [sp, #44]	; 0x2c
 8004592:	9322      	str	r3, [sp, #136]	; 0x88
 8004594:	f04f 33ff 	mov.w	r3, #4294967295
 8004598:	2200      	movs	r2, #0
 800459a:	9306      	str	r3, [sp, #24]
 800459c:	9308      	str	r3, [sp, #32]
 800459e:	2312      	movs	r3, #18
 80045a0:	e7d1      	b.n	8004546 <_dtoa_r+0x25e>
 80045a2:	bf00      	nop
 80045a4:	f3af 8000 	nop.w
 80045a8:	636f4361 	.word	0x636f4361
 80045ac:	3fd287a7 	.word	0x3fd287a7
 80045b0:	8b60c8b3 	.word	0x8b60c8b3
 80045b4:	3fc68a28 	.word	0x3fc68a28
 80045b8:	509f79fb 	.word	0x509f79fb
 80045bc:	3fd34413 	.word	0x3fd34413
 80045c0:	0800916e 	.word	0x0800916e
 80045c4:	08009185 	.word	0x08009185
 80045c8:	7ff00000 	.word	0x7ff00000
 80045cc:	0800916a 	.word	0x0800916a
 80045d0:	08009161 	.word	0x08009161
 80045d4:	08009139 	.word	0x08009139
 80045d8:	3ff80000 	.word	0x3ff80000
 80045dc:	08009270 	.word	0x08009270
 80045e0:	080091dd 	.word	0x080091dd
 80045e4:	2301      	movs	r3, #1
 80045e6:	930b      	str	r3, [sp, #44]	; 0x2c
 80045e8:	e7d4      	b.n	8004594 <_dtoa_r+0x2ac>
 80045ea:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 80045ec:	9306      	str	r3, [sp, #24]
 80045ee:	9308      	str	r3, [sp, #32]
 80045f0:	e7b7      	b.n	8004562 <_dtoa_r+0x27a>
 80045f2:	3101      	adds	r1, #1
 80045f4:	0052      	lsls	r2, r2, #1
 80045f6:	e7b7      	b.n	8004568 <_dtoa_r+0x280>
 80045f8:	69eb      	ldr	r3, [r5, #28]
 80045fa:	9a03      	ldr	r2, [sp, #12]
 80045fc:	601a      	str	r2, [r3, #0]
 80045fe:	9b08      	ldr	r3, [sp, #32]
 8004600:	2b0e      	cmp	r3, #14
 8004602:	f200 80a8 	bhi.w	8004756 <_dtoa_r+0x46e>
 8004606:	2c00      	cmp	r4, #0
 8004608:	f000 80a5 	beq.w	8004756 <_dtoa_r+0x46e>
 800460c:	f1bb 0f00 	cmp.w	fp, #0
 8004610:	dd34      	ble.n	800467c <_dtoa_r+0x394>
 8004612:	4b9a      	ldr	r3, [pc, #616]	; (800487c <_dtoa_r+0x594>)
 8004614:	f00b 020f 	and.w	r2, fp, #15
 8004618:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 800461c:	f41b 7f80 	tst.w	fp, #256	; 0x100
 8004620:	e9d3 3400 	ldrd	r3, r4, [r3]
 8004624:	e9cd 3410 	strd	r3, r4, [sp, #64]	; 0x40
 8004628:	ea4f 142b 	mov.w	r4, fp, asr #4
 800462c:	d016      	beq.n	800465c <_dtoa_r+0x374>
 800462e:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	; 0x30
 8004632:	4b93      	ldr	r3, [pc, #588]	; (8004880 <_dtoa_r+0x598>)
 8004634:	2703      	movs	r7, #3
 8004636:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
 800463a:	f7fc f887 	bl	800074c <__aeabi_ddiv>
 800463e:	e9cd 0104 	strd	r0, r1, [sp, #16]
 8004642:	f004 040f 	and.w	r4, r4, #15
 8004646:	4e8e      	ldr	r6, [pc, #568]	; (8004880 <_dtoa_r+0x598>)
 8004648:	b954      	cbnz	r4, 8004660 <_dtoa_r+0x378>
 800464a:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	; 0x40
 800464e:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 8004652:	f7fc f87b 	bl	800074c <__aeabi_ddiv>
 8004656:	e9cd 0104 	strd	r0, r1, [sp, #16]
 800465a:	e029      	b.n	80046b0 <_dtoa_r+0x3c8>
 800465c:	2702      	movs	r7, #2
 800465e:	e7f2      	b.n	8004646 <_dtoa_r+0x35e>
 8004660:	07e1      	lsls	r1, r4, #31
 8004662:	d508      	bpl.n	8004676 <_dtoa_r+0x38e>
 8004664:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
 8004668:	e9d6 2300 	ldrd	r2, r3, [r6]
 800466c:	f7fb ff44 	bl	80004f8 <__aeabi_dmul>
 8004670:	e9cd 0110 	strd	r0, r1, [sp, #64]	; 0x40
 8004674:	3701      	adds	r7, #1
 8004676:	1064      	asrs	r4, r4, #1
 8004678:	3608      	adds	r6, #8
 800467a:	e7e5      	b.n	8004648 <_dtoa_r+0x360>
 800467c:	f000 80a5 	beq.w	80047ca <_dtoa_r+0x4e2>
 8004680:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	; 0x30
 8004684:	f1cb 0400 	rsb	r4, fp, #0
 8004688:	4b7c      	ldr	r3, [pc, #496]	; (800487c <_dtoa_r+0x594>)
 800468a:	f004 020f 	and.w	r2, r4, #15
 800468e:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 8004692:	e9d3 2300 	ldrd	r2, r3, [r3]
 8004696:	f7fb ff2f 	bl	80004f8 <__aeabi_dmul>
 800469a:	2702      	movs	r7, #2
 800469c:	2300      	movs	r3, #0
 800469e:	e9cd 0104 	strd	r0, r1, [sp, #16]
 80046a2:	4e77      	ldr	r6, [pc, #476]	; (8004880 <_dtoa_r+0x598>)
 80046a4:	1124      	asrs	r4, r4, #4
 80046a6:	2c00      	cmp	r4, #0
 80046a8:	f040 8084 	bne.w	80047b4 <_dtoa_r+0x4cc>
 80046ac:	2b00      	cmp	r3, #0
 80046ae:	d1d2      	bne.n	8004656 <_dtoa_r+0x36e>
 80046b0:	e9dd 3404 	ldrd	r3, r4, [sp, #16]
 80046b4:	e9cd 3410 	strd	r3, r4, [sp, #64]	; 0x40
 80046b8:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80046ba:	2b00      	cmp	r3, #0
 80046bc:	f000 8087 	beq.w	80047ce <_dtoa_r+0x4e6>
 80046c0:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
 80046c4:	2200      	movs	r2, #0
 80046c6:	4b6f      	ldr	r3, [pc, #444]	; (8004884 <_dtoa_r+0x59c>)
 80046c8:	f7fc f988 	bl	80009dc <__aeabi_dcmplt>
 80046cc:	2800      	cmp	r0, #0
 80046ce:	d07e      	beq.n	80047ce <_dtoa_r+0x4e6>
 80046d0:	9b08      	ldr	r3, [sp, #32]
 80046d2:	2b00      	cmp	r3, #0
 80046d4:	d07b      	beq.n	80047ce <_dtoa_r+0x4e6>
 80046d6:	9b06      	ldr	r3, [sp, #24]
 80046d8:	2b00      	cmp	r3, #0
 80046da:	dd38      	ble.n	800474e <_dtoa_r+0x466>
 80046dc:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
 80046e0:	2200      	movs	r2, #0
 80046e2:	4b69      	ldr	r3, [pc, #420]	; (8004888 <_dtoa_r+0x5a0>)
 80046e4:	f7fb ff08 	bl	80004f8 <__aeabi_dmul>
 80046e8:	e9cd 0104 	strd	r0, r1, [sp, #16]
 80046ec:	9c06      	ldr	r4, [sp, #24]
 80046ee:	f10b 38ff 	add.w	r8, fp, #4294967295
 80046f2:	3701      	adds	r7, #1
 80046f4:	4638      	mov	r0, r7
 80046f6:	f7fb fe95 	bl	8000424 <__aeabi_i2d>
 80046fa:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 80046fe:	f7fb fefb 	bl	80004f8 <__aeabi_dmul>
 8004702:	2200      	movs	r2, #0
 8004704:	4b61      	ldr	r3, [pc, #388]	; (800488c <_dtoa_r+0x5a4>)
 8004706:	f7fb fd41 	bl	800018c <__adddf3>
 800470a:	f1a1 7650 	sub.w	r6, r1, #54525952	; 0x3400000
 800470e:	e9cd 0110 	strd	r0, r1, [sp, #64]	; 0x40
 8004712:	9611      	str	r6, [sp, #68]	; 0x44
 8004714:	2c00      	cmp	r4, #0
 8004716:	d15d      	bne.n	80047d4 <_dtoa_r+0x4ec>
 8004718:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 800471c:	2200      	movs	r2, #0
 800471e:	4b5c      	ldr	r3, [pc, #368]	; (8004890 <_dtoa_r+0x5a8>)
 8004720:	f7fb fd32 	bl	8000188 <__aeabi_dsub>
 8004724:	4602      	mov	r2, r0
 8004726:	460b      	mov	r3, r1
 8004728:	e9cd 2304 	strd	r2, r3, [sp, #16]
 800472c:	4633      	mov	r3, r6
 800472e:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8004730:	f7fc f972 	bl	8000a18 <__aeabi_dcmpgt>
 8004734:	2800      	cmp	r0, #0
 8004736:	f040 8295 	bne.w	8004c64 <_dtoa_r+0x97c>
 800473a:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 800473e:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8004740:	f106 4300 	add.w	r3, r6, #2147483648	; 0x80000000
 8004744:	f7fc f94a 	bl	80009dc <__aeabi_dcmplt>
 8004748:	2800      	cmp	r0, #0
 800474a:	f040 8289 	bne.w	8004c60 <_dtoa_r+0x978>
 800474e:	e9dd 340c 	ldrd	r3, r4, [sp, #48]	; 0x30
 8004752:	e9cd 3404 	strd	r3, r4, [sp, #16]
 8004756:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8004758:	2b00      	cmp	r3, #0
 800475a:	f2c0 8151 	blt.w	8004a00 <_dtoa_r+0x718>
 800475e:	f1bb 0f0e 	cmp.w	fp, #14
 8004762:	f300 814d 	bgt.w	8004a00 <_dtoa_r+0x718>
 8004766:	4b45      	ldr	r3, [pc, #276]	; (800487c <_dtoa_r+0x594>)
 8004768:	eb03 03cb 	add.w	r3, r3, fp, lsl #3
 800476c:	e9d3 3400 	ldrd	r3, r4, [r3]
 8004770:	e9cd 3406 	strd	r3, r4, [sp, #24]
 8004774:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8004776:	2b00      	cmp	r3, #0
 8004778:	f280 80da 	bge.w	8004930 <_dtoa_r+0x648>
 800477c:	9b08      	ldr	r3, [sp, #32]
 800477e:	2b00      	cmp	r3, #0
 8004780:	f300 80d6 	bgt.w	8004930 <_dtoa_r+0x648>
 8004784:	f040 826b 	bne.w	8004c5e <_dtoa_r+0x976>
 8004788:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 800478c:	2200      	movs	r2, #0
 800478e:	4b40      	ldr	r3, [pc, #256]	; (8004890 <_dtoa_r+0x5a8>)
 8004790:	f7fb feb2 	bl	80004f8 <__aeabi_dmul>
 8004794:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8004798:	f7fc f934 	bl	8000a04 <__aeabi_dcmpge>
 800479c:	9c08      	ldr	r4, [sp, #32]
 800479e:	4626      	mov	r6, r4
 80047a0:	2800      	cmp	r0, #0
 80047a2:	f040 8241 	bne.w	8004c28 <_dtoa_r+0x940>
 80047a6:	2331      	movs	r3, #49	; 0x31
 80047a8:	9f03      	ldr	r7, [sp, #12]
 80047aa:	f10b 0b01 	add.w	fp, fp, #1
 80047ae:	f807 3b01 	strb.w	r3, [r7], #1
 80047b2:	e23d      	b.n	8004c30 <_dtoa_r+0x948>
 80047b4:	07e2      	lsls	r2, r4, #31
 80047b6:	d505      	bpl.n	80047c4 <_dtoa_r+0x4dc>
 80047b8:	e9d6 2300 	ldrd	r2, r3, [r6]
 80047bc:	f7fb fe9c 	bl	80004f8 <__aeabi_dmul>
 80047c0:	2301      	movs	r3, #1
 80047c2:	3701      	adds	r7, #1
 80047c4:	1064      	asrs	r4, r4, #1
 80047c6:	3608      	adds	r6, #8
 80047c8:	e76d      	b.n	80046a6 <_dtoa_r+0x3be>
 80047ca:	2702      	movs	r7, #2
 80047cc:	e770      	b.n	80046b0 <_dtoa_r+0x3c8>
 80047ce:	46d8      	mov	r8, fp
 80047d0:	9c08      	ldr	r4, [sp, #32]
 80047d2:	e78f      	b.n	80046f4 <_dtoa_r+0x40c>
 80047d4:	9903      	ldr	r1, [sp, #12]
 80047d6:	4b29      	ldr	r3, [pc, #164]	; (800487c <_dtoa_r+0x594>)
 80047d8:	4421      	add	r1, r4
 80047da:	9112      	str	r1, [sp, #72]	; 0x48
 80047dc:	990b      	ldr	r1, [sp, #44]	; 0x2c
 80047de:	eb03 03c4 	add.w	r3, r3, r4, lsl #3
 80047e2:	e9dd 6710 	ldrd	r6, r7, [sp, #64]	; 0x40
 80047e6:	e953 2302 	ldrd	r2, r3, [r3, #-8]
 80047ea:	2900      	cmp	r1, #0
 80047ec:	d054      	beq.n	8004898 <_dtoa_r+0x5b0>
 80047ee:	2000      	movs	r0, #0
 80047f0:	4928      	ldr	r1, [pc, #160]	; (8004894 <_dtoa_r+0x5ac>)
 80047f2:	f7fb ffab 	bl	800074c <__aeabi_ddiv>
 80047f6:	463b      	mov	r3, r7
 80047f8:	4632      	mov	r2, r6
 80047fa:	f7fb fcc5 	bl	8000188 <__aeabi_dsub>
 80047fe:	e9cd 0110 	strd	r0, r1, [sp, #64]	; 0x40
 8004802:	9f03      	ldr	r7, [sp, #12]
 8004804:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 8004808:	f7fc f926 	bl	8000a58 <__aeabi_d2iz>
 800480c:	4604      	mov	r4, r0
 800480e:	f7fb fe09 	bl	8000424 <__aeabi_i2d>
 8004812:	4602      	mov	r2, r0
 8004814:	460b      	mov	r3, r1
 8004816:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 800481a:	f7fb fcb5 	bl	8000188 <__aeabi_dsub>
 800481e:	4602      	mov	r2, r0
 8004820:	460b      	mov	r3, r1
 8004822:	3430      	adds	r4, #48	; 0x30
 8004824:	e9cd 2304 	strd	r2, r3, [sp, #16]
 8004828:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	; 0x40
 800482c:	f807 4b01 	strb.w	r4, [r7], #1
 8004830:	f7fc f8d4 	bl	80009dc <__aeabi_dcmplt>
 8004834:	2800      	cmp	r0, #0
 8004836:	d173      	bne.n	8004920 <_dtoa_r+0x638>
 8004838:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 800483c:	2000      	movs	r0, #0
 800483e:	4911      	ldr	r1, [pc, #68]	; (8004884 <_dtoa_r+0x59c>)
 8004840:	f7fb fca2 	bl	8000188 <__aeabi_dsub>
 8004844:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	; 0x40
 8004848:	f7fc f8c8 	bl	80009dc <__aeabi_dcmplt>
 800484c:	2800      	cmp	r0, #0
 800484e:	f040 80b6 	bne.w	80049be <_dtoa_r+0x6d6>
 8004852:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8004854:	429f      	cmp	r7, r3
 8004856:	f43f af7a 	beq.w	800474e <_dtoa_r+0x466>
 800485a:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
 800485e:	2200      	movs	r2, #0
 8004860:	4b09      	ldr	r3, [pc, #36]	; (8004888 <_dtoa_r+0x5a0>)
 8004862:	f7fb fe49 	bl	80004f8 <__aeabi_dmul>
 8004866:	2200      	movs	r2, #0
 8004868:	e9cd 0110 	strd	r0, r1, [sp, #64]	; 0x40
 800486c:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 8004870:	4b05      	ldr	r3, [pc, #20]	; (8004888 <_dtoa_r+0x5a0>)
 8004872:	f7fb fe41 	bl	80004f8 <__aeabi_dmul>
 8004876:	e9cd 0104 	strd	r0, r1, [sp, #16]
 800487a:	e7c3      	b.n	8004804 <_dtoa_r+0x51c>
 800487c:	08009270 	.word	0x08009270
 8004880:	08009248 	.word	0x08009248
 8004884:	3ff00000 	.word	0x3ff00000
 8004888:	40240000 	.word	0x40240000
 800488c:	401c0000 	.word	0x401c0000
 8004890:	40140000 	.word	0x40140000
 8004894:	3fe00000 	.word	0x3fe00000
 8004898:	4630      	mov	r0, r6
 800489a:	4639      	mov	r1, r7
 800489c:	f7fb fe2c 	bl	80004f8 <__aeabi_dmul>
 80048a0:	9b12      	ldr	r3, [sp, #72]	; 0x48
 80048a2:	e9cd 0110 	strd	r0, r1, [sp, #64]	; 0x40
 80048a6:	9c03      	ldr	r4, [sp, #12]
 80048a8:	9314      	str	r3, [sp, #80]	; 0x50
 80048aa:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 80048ae:	f7fc f8d3 	bl	8000a58 <__aeabi_d2iz>
 80048b2:	9015      	str	r0, [sp, #84]	; 0x54
 80048b4:	f7fb fdb6 	bl	8000424 <__aeabi_i2d>
 80048b8:	4602      	mov	r2, r0
 80048ba:	460b      	mov	r3, r1
 80048bc:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 80048c0:	f7fb fc62 	bl	8000188 <__aeabi_dsub>
 80048c4:	9b15      	ldr	r3, [sp, #84]	; 0x54
 80048c6:	4606      	mov	r6, r0
 80048c8:	3330      	adds	r3, #48	; 0x30
 80048ca:	f804 3b01 	strb.w	r3, [r4], #1
 80048ce:	9b12      	ldr	r3, [sp, #72]	; 0x48
 80048d0:	460f      	mov	r7, r1
 80048d2:	429c      	cmp	r4, r3
 80048d4:	f04f 0200 	mov.w	r2, #0
 80048d8:	d124      	bne.n	8004924 <_dtoa_r+0x63c>
 80048da:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
 80048de:	4baf      	ldr	r3, [pc, #700]	; (8004b9c <_dtoa_r+0x8b4>)
 80048e0:	f7fb fc54 	bl	800018c <__adddf3>
 80048e4:	4602      	mov	r2, r0
 80048e6:	460b      	mov	r3, r1
 80048e8:	4630      	mov	r0, r6
 80048ea:	4639      	mov	r1, r7
 80048ec:	f7fc f894 	bl	8000a18 <__aeabi_dcmpgt>
 80048f0:	2800      	cmp	r0, #0
 80048f2:	d163      	bne.n	80049bc <_dtoa_r+0x6d4>
 80048f4:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	; 0x40
 80048f8:	2000      	movs	r0, #0
 80048fa:	49a8      	ldr	r1, [pc, #672]	; (8004b9c <_dtoa_r+0x8b4>)
 80048fc:	f7fb fc44 	bl	8000188 <__aeabi_dsub>
 8004900:	4602      	mov	r2, r0
 8004902:	460b      	mov	r3, r1
 8004904:	4630      	mov	r0, r6
 8004906:	4639      	mov	r1, r7
 8004908:	f7fc f868 	bl	80009dc <__aeabi_dcmplt>
 800490c:	2800      	cmp	r0, #0
 800490e:	f43f af1e 	beq.w	800474e <_dtoa_r+0x466>
 8004912:	9f14      	ldr	r7, [sp, #80]	; 0x50
 8004914:	1e7b      	subs	r3, r7, #1
 8004916:	9314      	str	r3, [sp, #80]	; 0x50
 8004918:	f817 3c01 	ldrb.w	r3, [r7, #-1]
 800491c:	2b30      	cmp	r3, #48	; 0x30
 800491e:	d0f8      	beq.n	8004912 <_dtoa_r+0x62a>
 8004920:	46c3      	mov	fp, r8
 8004922:	e03b      	b.n	800499c <_dtoa_r+0x6b4>
 8004924:	4b9e      	ldr	r3, [pc, #632]	; (8004ba0 <_dtoa_r+0x8b8>)
 8004926:	f7fb fde7 	bl	80004f8 <__aeabi_dmul>
 800492a:	e9cd 0104 	strd	r0, r1, [sp, #16]
 800492e:	e7bc      	b.n	80048aa <_dtoa_r+0x5c2>
 8004930:	9f03      	ldr	r7, [sp, #12]
 8004932:	e9dd 8904 	ldrd	r8, r9, [sp, #16]
 8004936:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 800493a:	4640      	mov	r0, r8
 800493c:	4649      	mov	r1, r9
 800493e:	f7fb ff05 	bl	800074c <__aeabi_ddiv>
 8004942:	f7fc f889 	bl	8000a58 <__aeabi_d2iz>
 8004946:	4604      	mov	r4, r0
 8004948:	f7fb fd6c 	bl	8000424 <__aeabi_i2d>
 800494c:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 8004950:	f7fb fdd2 	bl	80004f8 <__aeabi_dmul>
 8004954:	4602      	mov	r2, r0
 8004956:	460b      	mov	r3, r1
 8004958:	4640      	mov	r0, r8
 800495a:	4649      	mov	r1, r9
 800495c:	f7fb fc14 	bl	8000188 <__aeabi_dsub>
 8004960:	f104 0630 	add.w	r6, r4, #48	; 0x30
 8004964:	f807 6b01 	strb.w	r6, [r7], #1
 8004968:	9e03      	ldr	r6, [sp, #12]
 800496a:	f8dd c020 	ldr.w	ip, [sp, #32]
 800496e:	1bbe      	subs	r6, r7, r6
 8004970:	45b4      	cmp	ip, r6
 8004972:	4602      	mov	r2, r0
 8004974:	460b      	mov	r3, r1
 8004976:	d136      	bne.n	80049e6 <_dtoa_r+0x6fe>
 8004978:	f7fb fc08 	bl	800018c <__adddf3>
 800497c:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 8004980:	4680      	mov	r8, r0
 8004982:	4689      	mov	r9, r1
 8004984:	f7fc f848 	bl	8000a18 <__aeabi_dcmpgt>
 8004988:	bb58      	cbnz	r0, 80049e2 <_dtoa_r+0x6fa>
 800498a:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 800498e:	4640      	mov	r0, r8
 8004990:	4649      	mov	r1, r9
 8004992:	f7fc f819 	bl	80009c8 <__aeabi_dcmpeq>
 8004996:	b108      	cbz	r0, 800499c <_dtoa_r+0x6b4>
 8004998:	07e3      	lsls	r3, r4, #31
 800499a:	d422      	bmi.n	80049e2 <_dtoa_r+0x6fa>
 800499c:	4651      	mov	r1, sl
 800499e:	4628      	mov	r0, r5
 80049a0:	f000 fbc2 	bl	8005128 <_Bfree>
 80049a4:	2300      	movs	r3, #0
 80049a6:	9a24      	ldr	r2, [sp, #144]	; 0x90
 80049a8:	703b      	strb	r3, [r7, #0]
 80049aa:	f10b 0301 	add.w	r3, fp, #1
 80049ae:	6013      	str	r3, [r2, #0]
 80049b0:	9b26      	ldr	r3, [sp, #152]	; 0x98
 80049b2:	2b00      	cmp	r3, #0
 80049b4:	f43f ace6 	beq.w	8004384 <_dtoa_r+0x9c>
 80049b8:	601f      	str	r7, [r3, #0]
 80049ba:	e4e3      	b.n	8004384 <_dtoa_r+0x9c>
 80049bc:	4627      	mov	r7, r4
 80049be:	463b      	mov	r3, r7
 80049c0:	461f      	mov	r7, r3
 80049c2:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 80049c6:	2a39      	cmp	r2, #57	; 0x39
 80049c8:	d107      	bne.n	80049da <_dtoa_r+0x6f2>
 80049ca:	9a03      	ldr	r2, [sp, #12]
 80049cc:	429a      	cmp	r2, r3
 80049ce:	d1f7      	bne.n	80049c0 <_dtoa_r+0x6d8>
 80049d0:	2230      	movs	r2, #48	; 0x30
 80049d2:	9903      	ldr	r1, [sp, #12]
 80049d4:	f108 0801 	add.w	r8, r8, #1
 80049d8:	700a      	strb	r2, [r1, #0]
 80049da:	781a      	ldrb	r2, [r3, #0]
 80049dc:	3201      	adds	r2, #1
 80049de:	701a      	strb	r2, [r3, #0]
 80049e0:	e79e      	b.n	8004920 <_dtoa_r+0x638>
 80049e2:	46d8      	mov	r8, fp
 80049e4:	e7eb      	b.n	80049be <_dtoa_r+0x6d6>
 80049e6:	2200      	movs	r2, #0
 80049e8:	4b6d      	ldr	r3, [pc, #436]	; (8004ba0 <_dtoa_r+0x8b8>)
 80049ea:	f7fb fd85 	bl	80004f8 <__aeabi_dmul>
 80049ee:	2200      	movs	r2, #0
 80049f0:	2300      	movs	r3, #0
 80049f2:	4680      	mov	r8, r0
 80049f4:	4689      	mov	r9, r1
 80049f6:	f7fb ffe7 	bl	80009c8 <__aeabi_dcmpeq>
 80049fa:	2800      	cmp	r0, #0
 80049fc:	d09b      	beq.n	8004936 <_dtoa_r+0x64e>
 80049fe:	e7cd      	b.n	800499c <_dtoa_r+0x6b4>
 8004a00:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8004a02:	2a00      	cmp	r2, #0
 8004a04:	f000 80c4 	beq.w	8004b90 <_dtoa_r+0x8a8>
 8004a08:	9a22      	ldr	r2, [sp, #136]	; 0x88
 8004a0a:	2a01      	cmp	r2, #1
 8004a0c:	f300 80a8 	bgt.w	8004b60 <_dtoa_r+0x878>
 8004a10:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8004a12:	2a00      	cmp	r2, #0
 8004a14:	f000 80a0 	beq.w	8004b58 <_dtoa_r+0x870>
 8004a18:	f203 4333 	addw	r3, r3, #1075	; 0x433
 8004a1c:	464f      	mov	r7, r9
 8004a1e:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8004a20:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8004a22:	2101      	movs	r1, #1
 8004a24:	441a      	add	r2, r3
 8004a26:	4628      	mov	r0, r5
 8004a28:	4499      	add	r9, r3
 8004a2a:	9209      	str	r2, [sp, #36]	; 0x24
 8004a2c:	f000 fc7c 	bl	8005328 <__i2b>
 8004a30:	4606      	mov	r6, r0
 8004a32:	b15f      	cbz	r7, 8004a4c <_dtoa_r+0x764>
 8004a34:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8004a36:	2b00      	cmp	r3, #0
 8004a38:	dd08      	ble.n	8004a4c <_dtoa_r+0x764>
 8004a3a:	42bb      	cmp	r3, r7
 8004a3c:	bfa8      	it	ge
 8004a3e:	463b      	movge	r3, r7
 8004a40:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8004a42:	eba9 0903 	sub.w	r9, r9, r3
 8004a46:	1aff      	subs	r7, r7, r3
 8004a48:	1ad3      	subs	r3, r2, r3
 8004a4a:	9309      	str	r3, [sp, #36]	; 0x24
 8004a4c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8004a4e:	b1f3      	cbz	r3, 8004a8e <_dtoa_r+0x7a6>
 8004a50:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8004a52:	2b00      	cmp	r3, #0
 8004a54:	f000 80a0 	beq.w	8004b98 <_dtoa_r+0x8b0>
 8004a58:	2c00      	cmp	r4, #0
 8004a5a:	dd10      	ble.n	8004a7e <_dtoa_r+0x796>
 8004a5c:	4631      	mov	r1, r6
 8004a5e:	4622      	mov	r2, r4
 8004a60:	4628      	mov	r0, r5
 8004a62:	f000 fd1f 	bl	80054a4 <__pow5mult>
 8004a66:	4652      	mov	r2, sl
 8004a68:	4601      	mov	r1, r0
 8004a6a:	4606      	mov	r6, r0
 8004a6c:	4628      	mov	r0, r5
 8004a6e:	f000 fc71 	bl	8005354 <__multiply>
 8004a72:	4680      	mov	r8, r0
 8004a74:	4651      	mov	r1, sl
 8004a76:	4628      	mov	r0, r5
 8004a78:	f000 fb56 	bl	8005128 <_Bfree>
 8004a7c:	46c2      	mov	sl, r8
 8004a7e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8004a80:	1b1a      	subs	r2, r3, r4
 8004a82:	d004      	beq.n	8004a8e <_dtoa_r+0x7a6>
 8004a84:	4651      	mov	r1, sl
 8004a86:	4628      	mov	r0, r5
 8004a88:	f000 fd0c 	bl	80054a4 <__pow5mult>
 8004a8c:	4682      	mov	sl, r0
 8004a8e:	2101      	movs	r1, #1
 8004a90:	4628      	mov	r0, r5
 8004a92:	f000 fc49 	bl	8005328 <__i2b>
 8004a96:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8004a98:	4604      	mov	r4, r0
 8004a9a:	2b00      	cmp	r3, #0
 8004a9c:	f340 8082 	ble.w	8004ba4 <_dtoa_r+0x8bc>
 8004aa0:	461a      	mov	r2, r3
 8004aa2:	4601      	mov	r1, r0
 8004aa4:	4628      	mov	r0, r5
 8004aa6:	f000 fcfd 	bl	80054a4 <__pow5mult>
 8004aaa:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8004aac:	4604      	mov	r4, r0
 8004aae:	2b01      	cmp	r3, #1
 8004ab0:	dd7b      	ble.n	8004baa <_dtoa_r+0x8c2>
 8004ab2:	f04f 0800 	mov.w	r8, #0
 8004ab6:	6923      	ldr	r3, [r4, #16]
 8004ab8:	eb04 0383 	add.w	r3, r4, r3, lsl #2
 8004abc:	6918      	ldr	r0, [r3, #16]
 8004abe:	f000 fbe5 	bl	800528c <__hi0bits>
 8004ac2:	f1c0 0020 	rsb	r0, r0, #32
 8004ac6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8004ac8:	4418      	add	r0, r3
 8004aca:	f010 001f 	ands.w	r0, r0, #31
 8004ace:	f000 8092 	beq.w	8004bf6 <_dtoa_r+0x90e>
 8004ad2:	f1c0 0320 	rsb	r3, r0, #32
 8004ad6:	2b04      	cmp	r3, #4
 8004ad8:	f340 8085 	ble.w	8004be6 <_dtoa_r+0x8fe>
 8004adc:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8004ade:	f1c0 001c 	rsb	r0, r0, #28
 8004ae2:	4403      	add	r3, r0
 8004ae4:	4481      	add	r9, r0
 8004ae6:	4407      	add	r7, r0
 8004ae8:	9309      	str	r3, [sp, #36]	; 0x24
 8004aea:	f1b9 0f00 	cmp.w	r9, #0
 8004aee:	dd05      	ble.n	8004afc <_dtoa_r+0x814>
 8004af0:	4651      	mov	r1, sl
 8004af2:	464a      	mov	r2, r9
 8004af4:	4628      	mov	r0, r5
 8004af6:	f000 fd2f 	bl	8005558 <__lshift>
 8004afa:	4682      	mov	sl, r0
 8004afc:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8004afe:	2b00      	cmp	r3, #0
 8004b00:	dd05      	ble.n	8004b0e <_dtoa_r+0x826>
 8004b02:	4621      	mov	r1, r4
 8004b04:	461a      	mov	r2, r3
 8004b06:	4628      	mov	r0, r5
 8004b08:	f000 fd26 	bl	8005558 <__lshift>
 8004b0c:	4604      	mov	r4, r0
 8004b0e:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8004b10:	2b00      	cmp	r3, #0
 8004b12:	d072      	beq.n	8004bfa <_dtoa_r+0x912>
 8004b14:	4621      	mov	r1, r4
 8004b16:	4650      	mov	r0, sl
 8004b18:	f000 fd8a 	bl	8005630 <__mcmp>
 8004b1c:	2800      	cmp	r0, #0
 8004b1e:	da6c      	bge.n	8004bfa <_dtoa_r+0x912>
 8004b20:	2300      	movs	r3, #0
 8004b22:	4651      	mov	r1, sl
 8004b24:	220a      	movs	r2, #10
 8004b26:	4628      	mov	r0, r5
 8004b28:	f000 fb20 	bl	800516c <__multadd>
 8004b2c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8004b2e:	4682      	mov	sl, r0
 8004b30:	f10b 3bff 	add.w	fp, fp, #4294967295
 8004b34:	2b00      	cmp	r3, #0
 8004b36:	f000 81ac 	beq.w	8004e92 <_dtoa_r+0xbaa>
 8004b3a:	2300      	movs	r3, #0
 8004b3c:	4631      	mov	r1, r6
 8004b3e:	220a      	movs	r2, #10
 8004b40:	4628      	mov	r0, r5
 8004b42:	f000 fb13 	bl	800516c <__multadd>
 8004b46:	9b06      	ldr	r3, [sp, #24]
 8004b48:	4606      	mov	r6, r0
 8004b4a:	2b00      	cmp	r3, #0
 8004b4c:	f300 8093 	bgt.w	8004c76 <_dtoa_r+0x98e>
 8004b50:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8004b52:	2b02      	cmp	r3, #2
 8004b54:	dc59      	bgt.n	8004c0a <_dtoa_r+0x922>
 8004b56:	e08e      	b.n	8004c76 <_dtoa_r+0x98e>
 8004b58:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8004b5a:	f1c3 0336 	rsb	r3, r3, #54	; 0x36
 8004b5e:	e75d      	b.n	8004a1c <_dtoa_r+0x734>
 8004b60:	9b08      	ldr	r3, [sp, #32]
 8004b62:	1e5c      	subs	r4, r3, #1
 8004b64:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8004b66:	42a3      	cmp	r3, r4
 8004b68:	bfbf      	itttt	lt
 8004b6a:	9b0a      	ldrlt	r3, [sp, #40]	; 0x28
 8004b6c:	9a0e      	ldrlt	r2, [sp, #56]	; 0x38
 8004b6e:	1ae3      	sublt	r3, r4, r3
 8004b70:	18d2      	addlt	r2, r2, r3
 8004b72:	bfa8      	it	ge
 8004b74:	1b1c      	subge	r4, r3, r4
 8004b76:	9b08      	ldr	r3, [sp, #32]
 8004b78:	bfbe      	ittt	lt
 8004b7a:	940a      	strlt	r4, [sp, #40]	; 0x28
 8004b7c:	920e      	strlt	r2, [sp, #56]	; 0x38
 8004b7e:	2400      	movlt	r4, #0
 8004b80:	2b00      	cmp	r3, #0
 8004b82:	bfb5      	itete	lt
 8004b84:	eba9 0703 	sublt.w	r7, r9, r3
 8004b88:	464f      	movge	r7, r9
 8004b8a:	2300      	movlt	r3, #0
 8004b8c:	9b08      	ldrge	r3, [sp, #32]
 8004b8e:	e747      	b.n	8004a20 <_dtoa_r+0x738>
 8004b90:	464f      	mov	r7, r9
 8004b92:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8004b94:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
 8004b96:	e74c      	b.n	8004a32 <_dtoa_r+0x74a>
 8004b98:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8004b9a:	e773      	b.n	8004a84 <_dtoa_r+0x79c>
 8004b9c:	3fe00000 	.word	0x3fe00000
 8004ba0:	40240000 	.word	0x40240000
 8004ba4:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8004ba6:	2b01      	cmp	r3, #1
 8004ba8:	dc18      	bgt.n	8004bdc <_dtoa_r+0x8f4>
 8004baa:	9b04      	ldr	r3, [sp, #16]
 8004bac:	b9b3      	cbnz	r3, 8004bdc <_dtoa_r+0x8f4>
 8004bae:	9b05      	ldr	r3, [sp, #20]
 8004bb0:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8004bb4:	b993      	cbnz	r3, 8004bdc <_dtoa_r+0x8f4>
 8004bb6:	9b05      	ldr	r3, [sp, #20]
 8004bb8:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 8004bbc:	0d1b      	lsrs	r3, r3, #20
 8004bbe:	051b      	lsls	r3, r3, #20
 8004bc0:	b17b      	cbz	r3, 8004be2 <_dtoa_r+0x8fa>
 8004bc2:	f04f 0801 	mov.w	r8, #1
 8004bc6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8004bc8:	f109 0901 	add.w	r9, r9, #1
 8004bcc:	3301      	adds	r3, #1
 8004bce:	9309      	str	r3, [sp, #36]	; 0x24
 8004bd0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8004bd2:	2b00      	cmp	r3, #0
 8004bd4:	f47f af6f 	bne.w	8004ab6 <_dtoa_r+0x7ce>
 8004bd8:	2001      	movs	r0, #1
 8004bda:	e774      	b.n	8004ac6 <_dtoa_r+0x7de>
 8004bdc:	f04f 0800 	mov.w	r8, #0
 8004be0:	e7f6      	b.n	8004bd0 <_dtoa_r+0x8e8>
 8004be2:	4698      	mov	r8, r3
 8004be4:	e7f4      	b.n	8004bd0 <_dtoa_r+0x8e8>
 8004be6:	d080      	beq.n	8004aea <_dtoa_r+0x802>
 8004be8:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8004bea:	331c      	adds	r3, #28
 8004bec:	441a      	add	r2, r3
 8004bee:	4499      	add	r9, r3
 8004bf0:	441f      	add	r7, r3
 8004bf2:	9209      	str	r2, [sp, #36]	; 0x24
 8004bf4:	e779      	b.n	8004aea <_dtoa_r+0x802>
 8004bf6:	4603      	mov	r3, r0
 8004bf8:	e7f6      	b.n	8004be8 <_dtoa_r+0x900>
 8004bfa:	9b08      	ldr	r3, [sp, #32]
 8004bfc:	2b00      	cmp	r3, #0
 8004bfe:	dc34      	bgt.n	8004c6a <_dtoa_r+0x982>
 8004c00:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8004c02:	2b02      	cmp	r3, #2
 8004c04:	dd31      	ble.n	8004c6a <_dtoa_r+0x982>
 8004c06:	9b08      	ldr	r3, [sp, #32]
 8004c08:	9306      	str	r3, [sp, #24]
 8004c0a:	9b06      	ldr	r3, [sp, #24]
 8004c0c:	b963      	cbnz	r3, 8004c28 <_dtoa_r+0x940>
 8004c0e:	4621      	mov	r1, r4
 8004c10:	2205      	movs	r2, #5
 8004c12:	4628      	mov	r0, r5
 8004c14:	f000 faaa 	bl	800516c <__multadd>
 8004c18:	4601      	mov	r1, r0
 8004c1a:	4604      	mov	r4, r0
 8004c1c:	4650      	mov	r0, sl
 8004c1e:	f000 fd07 	bl	8005630 <__mcmp>
 8004c22:	2800      	cmp	r0, #0
 8004c24:	f73f adbf 	bgt.w	80047a6 <_dtoa_r+0x4be>
 8004c28:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8004c2a:	9f03      	ldr	r7, [sp, #12]
 8004c2c:	ea6f 0b03 	mvn.w	fp, r3
 8004c30:	f04f 0800 	mov.w	r8, #0
 8004c34:	4621      	mov	r1, r4
 8004c36:	4628      	mov	r0, r5
 8004c38:	f000 fa76 	bl	8005128 <_Bfree>
 8004c3c:	2e00      	cmp	r6, #0
 8004c3e:	f43f aead 	beq.w	800499c <_dtoa_r+0x6b4>
 8004c42:	f1b8 0f00 	cmp.w	r8, #0
 8004c46:	d005      	beq.n	8004c54 <_dtoa_r+0x96c>
 8004c48:	45b0      	cmp	r8, r6
 8004c4a:	d003      	beq.n	8004c54 <_dtoa_r+0x96c>
 8004c4c:	4641      	mov	r1, r8
 8004c4e:	4628      	mov	r0, r5
 8004c50:	f000 fa6a 	bl	8005128 <_Bfree>
 8004c54:	4631      	mov	r1, r6
 8004c56:	4628      	mov	r0, r5
 8004c58:	f000 fa66 	bl	8005128 <_Bfree>
 8004c5c:	e69e      	b.n	800499c <_dtoa_r+0x6b4>
 8004c5e:	2400      	movs	r4, #0
 8004c60:	4626      	mov	r6, r4
 8004c62:	e7e1      	b.n	8004c28 <_dtoa_r+0x940>
 8004c64:	46c3      	mov	fp, r8
 8004c66:	4626      	mov	r6, r4
 8004c68:	e59d      	b.n	80047a6 <_dtoa_r+0x4be>
 8004c6a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8004c6c:	2b00      	cmp	r3, #0
 8004c6e:	f000 80c8 	beq.w	8004e02 <_dtoa_r+0xb1a>
 8004c72:	9b08      	ldr	r3, [sp, #32]
 8004c74:	9306      	str	r3, [sp, #24]
 8004c76:	2f00      	cmp	r7, #0
 8004c78:	dd05      	ble.n	8004c86 <_dtoa_r+0x99e>
 8004c7a:	4631      	mov	r1, r6
 8004c7c:	463a      	mov	r2, r7
 8004c7e:	4628      	mov	r0, r5
 8004c80:	f000 fc6a 	bl	8005558 <__lshift>
 8004c84:	4606      	mov	r6, r0
 8004c86:	f1b8 0f00 	cmp.w	r8, #0
 8004c8a:	d05b      	beq.n	8004d44 <_dtoa_r+0xa5c>
 8004c8c:	4628      	mov	r0, r5
 8004c8e:	6871      	ldr	r1, [r6, #4]
 8004c90:	f000 fa0a 	bl	80050a8 <_Balloc>
 8004c94:	4607      	mov	r7, r0
 8004c96:	b928      	cbnz	r0, 8004ca4 <_dtoa_r+0x9bc>
 8004c98:	4602      	mov	r2, r0
 8004c9a:	f240 21ef 	movw	r1, #751	; 0x2ef
 8004c9e:	4b81      	ldr	r3, [pc, #516]	; (8004ea4 <_dtoa_r+0xbbc>)
 8004ca0:	f7ff bb36 	b.w	8004310 <_dtoa_r+0x28>
 8004ca4:	6932      	ldr	r2, [r6, #16]
 8004ca6:	f106 010c 	add.w	r1, r6, #12
 8004caa:	3202      	adds	r2, #2
 8004cac:	0092      	lsls	r2, r2, #2
 8004cae:	300c      	adds	r0, #12
 8004cb0:	f002 f94a 	bl	8006f48 <memcpy>
 8004cb4:	2201      	movs	r2, #1
 8004cb6:	4639      	mov	r1, r7
 8004cb8:	4628      	mov	r0, r5
 8004cba:	f000 fc4d 	bl	8005558 <__lshift>
 8004cbe:	46b0      	mov	r8, r6
 8004cc0:	4606      	mov	r6, r0
 8004cc2:	9b03      	ldr	r3, [sp, #12]
 8004cc4:	9a03      	ldr	r2, [sp, #12]
 8004cc6:	3301      	adds	r3, #1
 8004cc8:	9308      	str	r3, [sp, #32]
 8004cca:	9b06      	ldr	r3, [sp, #24]
 8004ccc:	4413      	add	r3, r2
 8004cce:	930b      	str	r3, [sp, #44]	; 0x2c
 8004cd0:	9b04      	ldr	r3, [sp, #16]
 8004cd2:	f003 0301 	and.w	r3, r3, #1
 8004cd6:	930a      	str	r3, [sp, #40]	; 0x28
 8004cd8:	9b08      	ldr	r3, [sp, #32]
 8004cda:	4621      	mov	r1, r4
 8004cdc:	3b01      	subs	r3, #1
 8004cde:	4650      	mov	r0, sl
 8004ce0:	9304      	str	r3, [sp, #16]
 8004ce2:	f7ff fa75 	bl	80041d0 <quorem>
 8004ce6:	4641      	mov	r1, r8
 8004ce8:	9006      	str	r0, [sp, #24]
 8004cea:	f100 0930 	add.w	r9, r0, #48	; 0x30
 8004cee:	4650      	mov	r0, sl
 8004cf0:	f000 fc9e 	bl	8005630 <__mcmp>
 8004cf4:	4632      	mov	r2, r6
 8004cf6:	9009      	str	r0, [sp, #36]	; 0x24
 8004cf8:	4621      	mov	r1, r4
 8004cfa:	4628      	mov	r0, r5
 8004cfc:	f000 fcb4 	bl	8005668 <__mdiff>
 8004d00:	68c2      	ldr	r2, [r0, #12]
 8004d02:	4607      	mov	r7, r0
 8004d04:	bb02      	cbnz	r2, 8004d48 <_dtoa_r+0xa60>
 8004d06:	4601      	mov	r1, r0
 8004d08:	4650      	mov	r0, sl
 8004d0a:	f000 fc91 	bl	8005630 <__mcmp>
 8004d0e:	4602      	mov	r2, r0
 8004d10:	4639      	mov	r1, r7
 8004d12:	4628      	mov	r0, r5
 8004d14:	920c      	str	r2, [sp, #48]	; 0x30
 8004d16:	f000 fa07 	bl	8005128 <_Bfree>
 8004d1a:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8004d1c:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8004d1e:	9f08      	ldr	r7, [sp, #32]
 8004d20:	ea43 0102 	orr.w	r1, r3, r2
 8004d24:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8004d26:	4319      	orrs	r1, r3
 8004d28:	d110      	bne.n	8004d4c <_dtoa_r+0xa64>
 8004d2a:	f1b9 0f39 	cmp.w	r9, #57	; 0x39
 8004d2e:	d029      	beq.n	8004d84 <_dtoa_r+0xa9c>
 8004d30:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8004d32:	2b00      	cmp	r3, #0
 8004d34:	dd02      	ble.n	8004d3c <_dtoa_r+0xa54>
 8004d36:	9b06      	ldr	r3, [sp, #24]
 8004d38:	f103 0931 	add.w	r9, r3, #49	; 0x31
 8004d3c:	9b04      	ldr	r3, [sp, #16]
 8004d3e:	f883 9000 	strb.w	r9, [r3]
 8004d42:	e777      	b.n	8004c34 <_dtoa_r+0x94c>
 8004d44:	4630      	mov	r0, r6
 8004d46:	e7ba      	b.n	8004cbe <_dtoa_r+0x9d6>
 8004d48:	2201      	movs	r2, #1
 8004d4a:	e7e1      	b.n	8004d10 <_dtoa_r+0xa28>
 8004d4c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8004d4e:	2b00      	cmp	r3, #0
 8004d50:	db04      	blt.n	8004d5c <_dtoa_r+0xa74>
 8004d52:	9922      	ldr	r1, [sp, #136]	; 0x88
 8004d54:	430b      	orrs	r3, r1
 8004d56:	990a      	ldr	r1, [sp, #40]	; 0x28
 8004d58:	430b      	orrs	r3, r1
 8004d5a:	d120      	bne.n	8004d9e <_dtoa_r+0xab6>
 8004d5c:	2a00      	cmp	r2, #0
 8004d5e:	dded      	ble.n	8004d3c <_dtoa_r+0xa54>
 8004d60:	4651      	mov	r1, sl
 8004d62:	2201      	movs	r2, #1
 8004d64:	4628      	mov	r0, r5
 8004d66:	f000 fbf7 	bl	8005558 <__lshift>
 8004d6a:	4621      	mov	r1, r4
 8004d6c:	4682      	mov	sl, r0
 8004d6e:	f000 fc5f 	bl	8005630 <__mcmp>
 8004d72:	2800      	cmp	r0, #0
 8004d74:	dc03      	bgt.n	8004d7e <_dtoa_r+0xa96>
 8004d76:	d1e1      	bne.n	8004d3c <_dtoa_r+0xa54>
 8004d78:	f019 0f01 	tst.w	r9, #1
 8004d7c:	d0de      	beq.n	8004d3c <_dtoa_r+0xa54>
 8004d7e:	f1b9 0f39 	cmp.w	r9, #57	; 0x39
 8004d82:	d1d8      	bne.n	8004d36 <_dtoa_r+0xa4e>
 8004d84:	2339      	movs	r3, #57	; 0x39
 8004d86:	9a04      	ldr	r2, [sp, #16]
 8004d88:	7013      	strb	r3, [r2, #0]
 8004d8a:	463b      	mov	r3, r7
 8004d8c:	461f      	mov	r7, r3
 8004d8e:	f817 2c01 	ldrb.w	r2, [r7, #-1]
 8004d92:	3b01      	subs	r3, #1
 8004d94:	2a39      	cmp	r2, #57	; 0x39
 8004d96:	d06b      	beq.n	8004e70 <_dtoa_r+0xb88>
 8004d98:	3201      	adds	r2, #1
 8004d9a:	701a      	strb	r2, [r3, #0]
 8004d9c:	e74a      	b.n	8004c34 <_dtoa_r+0x94c>
 8004d9e:	2a00      	cmp	r2, #0
 8004da0:	dd07      	ble.n	8004db2 <_dtoa_r+0xaca>
 8004da2:	f1b9 0f39 	cmp.w	r9, #57	; 0x39
 8004da6:	d0ed      	beq.n	8004d84 <_dtoa_r+0xa9c>
 8004da8:	9a04      	ldr	r2, [sp, #16]
 8004daa:	f109 0301 	add.w	r3, r9, #1
 8004dae:	7013      	strb	r3, [r2, #0]
 8004db0:	e740      	b.n	8004c34 <_dtoa_r+0x94c>
 8004db2:	9b08      	ldr	r3, [sp, #32]
 8004db4:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8004db6:	f803 9c01 	strb.w	r9, [r3, #-1]
 8004dba:	4293      	cmp	r3, r2
 8004dbc:	d042      	beq.n	8004e44 <_dtoa_r+0xb5c>
 8004dbe:	4651      	mov	r1, sl
 8004dc0:	2300      	movs	r3, #0
 8004dc2:	220a      	movs	r2, #10
 8004dc4:	4628      	mov	r0, r5
 8004dc6:	f000 f9d1 	bl	800516c <__multadd>
 8004dca:	45b0      	cmp	r8, r6
 8004dcc:	4682      	mov	sl, r0
 8004dce:	f04f 0300 	mov.w	r3, #0
 8004dd2:	f04f 020a 	mov.w	r2, #10
 8004dd6:	4641      	mov	r1, r8
 8004dd8:	4628      	mov	r0, r5
 8004dda:	d107      	bne.n	8004dec <_dtoa_r+0xb04>
 8004ddc:	f000 f9c6 	bl	800516c <__multadd>
 8004de0:	4680      	mov	r8, r0
 8004de2:	4606      	mov	r6, r0
 8004de4:	9b08      	ldr	r3, [sp, #32]
 8004de6:	3301      	adds	r3, #1
 8004de8:	9308      	str	r3, [sp, #32]
 8004dea:	e775      	b.n	8004cd8 <_dtoa_r+0x9f0>
 8004dec:	f000 f9be 	bl	800516c <__multadd>
 8004df0:	4631      	mov	r1, r6
 8004df2:	4680      	mov	r8, r0
 8004df4:	2300      	movs	r3, #0
 8004df6:	220a      	movs	r2, #10
 8004df8:	4628      	mov	r0, r5
 8004dfa:	f000 f9b7 	bl	800516c <__multadd>
 8004dfe:	4606      	mov	r6, r0
 8004e00:	e7f0      	b.n	8004de4 <_dtoa_r+0xafc>
 8004e02:	9b08      	ldr	r3, [sp, #32]
 8004e04:	9306      	str	r3, [sp, #24]
 8004e06:	9f03      	ldr	r7, [sp, #12]
 8004e08:	4621      	mov	r1, r4
 8004e0a:	4650      	mov	r0, sl
 8004e0c:	f7ff f9e0 	bl	80041d0 <quorem>
 8004e10:	9b03      	ldr	r3, [sp, #12]
 8004e12:	f100 0930 	add.w	r9, r0, #48	; 0x30
 8004e16:	f807 9b01 	strb.w	r9, [r7], #1
 8004e1a:	1afa      	subs	r2, r7, r3
 8004e1c:	9b06      	ldr	r3, [sp, #24]
 8004e1e:	4293      	cmp	r3, r2
 8004e20:	dd07      	ble.n	8004e32 <_dtoa_r+0xb4a>
 8004e22:	4651      	mov	r1, sl
 8004e24:	2300      	movs	r3, #0
 8004e26:	220a      	movs	r2, #10
 8004e28:	4628      	mov	r0, r5
 8004e2a:	f000 f99f 	bl	800516c <__multadd>
 8004e2e:	4682      	mov	sl, r0
 8004e30:	e7ea      	b.n	8004e08 <_dtoa_r+0xb20>
 8004e32:	9b06      	ldr	r3, [sp, #24]
 8004e34:	f04f 0800 	mov.w	r8, #0
 8004e38:	2b00      	cmp	r3, #0
 8004e3a:	bfcc      	ite	gt
 8004e3c:	461f      	movgt	r7, r3
 8004e3e:	2701      	movle	r7, #1
 8004e40:	9b03      	ldr	r3, [sp, #12]
 8004e42:	441f      	add	r7, r3
 8004e44:	4651      	mov	r1, sl
 8004e46:	2201      	movs	r2, #1
 8004e48:	4628      	mov	r0, r5
 8004e4a:	f000 fb85 	bl	8005558 <__lshift>
 8004e4e:	4621      	mov	r1, r4
 8004e50:	4682      	mov	sl, r0
 8004e52:	f000 fbed 	bl	8005630 <__mcmp>
 8004e56:	2800      	cmp	r0, #0
 8004e58:	dc97      	bgt.n	8004d8a <_dtoa_r+0xaa2>
 8004e5a:	d102      	bne.n	8004e62 <_dtoa_r+0xb7a>
 8004e5c:	f019 0f01 	tst.w	r9, #1
 8004e60:	d193      	bne.n	8004d8a <_dtoa_r+0xaa2>
 8004e62:	463b      	mov	r3, r7
 8004e64:	461f      	mov	r7, r3
 8004e66:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 8004e6a:	2a30      	cmp	r2, #48	; 0x30
 8004e6c:	d0fa      	beq.n	8004e64 <_dtoa_r+0xb7c>
 8004e6e:	e6e1      	b.n	8004c34 <_dtoa_r+0x94c>
 8004e70:	9a03      	ldr	r2, [sp, #12]
 8004e72:	429a      	cmp	r2, r3
 8004e74:	d18a      	bne.n	8004d8c <_dtoa_r+0xaa4>
 8004e76:	2331      	movs	r3, #49	; 0x31
 8004e78:	f10b 0b01 	add.w	fp, fp, #1
 8004e7c:	e797      	b.n	8004dae <_dtoa_r+0xac6>
 8004e7e:	4b0a      	ldr	r3, [pc, #40]	; (8004ea8 <_dtoa_r+0xbc0>)
 8004e80:	f7ff ba9f 	b.w	80043c2 <_dtoa_r+0xda>
 8004e84:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8004e86:	2b00      	cmp	r3, #0
 8004e88:	f47f aa77 	bne.w	800437a <_dtoa_r+0x92>
 8004e8c:	4b07      	ldr	r3, [pc, #28]	; (8004eac <_dtoa_r+0xbc4>)
 8004e8e:	f7ff ba98 	b.w	80043c2 <_dtoa_r+0xda>
 8004e92:	9b06      	ldr	r3, [sp, #24]
 8004e94:	2b00      	cmp	r3, #0
 8004e96:	dcb6      	bgt.n	8004e06 <_dtoa_r+0xb1e>
 8004e98:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8004e9a:	2b02      	cmp	r3, #2
 8004e9c:	f73f aeb5 	bgt.w	8004c0a <_dtoa_r+0x922>
 8004ea0:	e7b1      	b.n	8004e06 <_dtoa_r+0xb1e>
 8004ea2:	bf00      	nop
 8004ea4:	080091dd 	.word	0x080091dd
 8004ea8:	08009138 	.word	0x08009138
 8004eac:	08009161 	.word	0x08009161

08004eb0 <_free_r>:
 8004eb0:	b538      	push	{r3, r4, r5, lr}
 8004eb2:	4605      	mov	r5, r0
 8004eb4:	2900      	cmp	r1, #0
 8004eb6:	d040      	beq.n	8004f3a <_free_r+0x8a>
 8004eb8:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8004ebc:	1f0c      	subs	r4, r1, #4
 8004ebe:	2b00      	cmp	r3, #0
 8004ec0:	bfb8      	it	lt
 8004ec2:	18e4      	addlt	r4, r4, r3
 8004ec4:	f000 f8e4 	bl	8005090 <__malloc_lock>
 8004ec8:	4a1c      	ldr	r2, [pc, #112]	; (8004f3c <_free_r+0x8c>)
 8004eca:	6813      	ldr	r3, [r2, #0]
 8004ecc:	b933      	cbnz	r3, 8004edc <_free_r+0x2c>
 8004ece:	6063      	str	r3, [r4, #4]
 8004ed0:	6014      	str	r4, [r2, #0]
 8004ed2:	4628      	mov	r0, r5
 8004ed4:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8004ed8:	f000 b8e0 	b.w	800509c <__malloc_unlock>
 8004edc:	42a3      	cmp	r3, r4
 8004ede:	d908      	bls.n	8004ef2 <_free_r+0x42>
 8004ee0:	6820      	ldr	r0, [r4, #0]
 8004ee2:	1821      	adds	r1, r4, r0
 8004ee4:	428b      	cmp	r3, r1
 8004ee6:	bf01      	itttt	eq
 8004ee8:	6819      	ldreq	r1, [r3, #0]
 8004eea:	685b      	ldreq	r3, [r3, #4]
 8004eec:	1809      	addeq	r1, r1, r0
 8004eee:	6021      	streq	r1, [r4, #0]
 8004ef0:	e7ed      	b.n	8004ece <_free_r+0x1e>
 8004ef2:	461a      	mov	r2, r3
 8004ef4:	685b      	ldr	r3, [r3, #4]
 8004ef6:	b10b      	cbz	r3, 8004efc <_free_r+0x4c>
 8004ef8:	42a3      	cmp	r3, r4
 8004efa:	d9fa      	bls.n	8004ef2 <_free_r+0x42>
 8004efc:	6811      	ldr	r1, [r2, #0]
 8004efe:	1850      	adds	r0, r2, r1
 8004f00:	42a0      	cmp	r0, r4
 8004f02:	d10b      	bne.n	8004f1c <_free_r+0x6c>
 8004f04:	6820      	ldr	r0, [r4, #0]
 8004f06:	4401      	add	r1, r0
 8004f08:	1850      	adds	r0, r2, r1
 8004f0a:	4283      	cmp	r3, r0
 8004f0c:	6011      	str	r1, [r2, #0]
 8004f0e:	d1e0      	bne.n	8004ed2 <_free_r+0x22>
 8004f10:	6818      	ldr	r0, [r3, #0]
 8004f12:	685b      	ldr	r3, [r3, #4]
 8004f14:	4408      	add	r0, r1
 8004f16:	6010      	str	r0, [r2, #0]
 8004f18:	6053      	str	r3, [r2, #4]
 8004f1a:	e7da      	b.n	8004ed2 <_free_r+0x22>
 8004f1c:	d902      	bls.n	8004f24 <_free_r+0x74>
 8004f1e:	230c      	movs	r3, #12
 8004f20:	602b      	str	r3, [r5, #0]
 8004f22:	e7d6      	b.n	8004ed2 <_free_r+0x22>
 8004f24:	6820      	ldr	r0, [r4, #0]
 8004f26:	1821      	adds	r1, r4, r0
 8004f28:	428b      	cmp	r3, r1
 8004f2a:	bf01      	itttt	eq
 8004f2c:	6819      	ldreq	r1, [r3, #0]
 8004f2e:	685b      	ldreq	r3, [r3, #4]
 8004f30:	1809      	addeq	r1, r1, r0
 8004f32:	6021      	streq	r1, [r4, #0]
 8004f34:	6063      	str	r3, [r4, #4]
 8004f36:	6054      	str	r4, [r2, #4]
 8004f38:	e7cb      	b.n	8004ed2 <_free_r+0x22>
 8004f3a:	bd38      	pop	{r3, r4, r5, pc}
 8004f3c:	2000044c 	.word	0x2000044c

08004f40 <malloc>:
 8004f40:	4b02      	ldr	r3, [pc, #8]	; (8004f4c <malloc+0xc>)
 8004f42:	4601      	mov	r1, r0
 8004f44:	6818      	ldr	r0, [r3, #0]
 8004f46:	f000 b823 	b.w	8004f90 <_malloc_r>
 8004f4a:	bf00      	nop
 8004f4c:	2000007c 	.word	0x2000007c

08004f50 <sbrk_aligned>:
 8004f50:	b570      	push	{r4, r5, r6, lr}
 8004f52:	4e0e      	ldr	r6, [pc, #56]	; (8004f8c <sbrk_aligned+0x3c>)
 8004f54:	460c      	mov	r4, r1
 8004f56:	6831      	ldr	r1, [r6, #0]
 8004f58:	4605      	mov	r5, r0
 8004f5a:	b911      	cbnz	r1, 8004f62 <sbrk_aligned+0x12>
 8004f5c:	f001 ffe4 	bl	8006f28 <_sbrk_r>
 8004f60:	6030      	str	r0, [r6, #0]
 8004f62:	4621      	mov	r1, r4
 8004f64:	4628      	mov	r0, r5
 8004f66:	f001 ffdf 	bl	8006f28 <_sbrk_r>
 8004f6a:	1c43      	adds	r3, r0, #1
 8004f6c:	d00a      	beq.n	8004f84 <sbrk_aligned+0x34>
 8004f6e:	1cc4      	adds	r4, r0, #3
 8004f70:	f024 0403 	bic.w	r4, r4, #3
 8004f74:	42a0      	cmp	r0, r4
 8004f76:	d007      	beq.n	8004f88 <sbrk_aligned+0x38>
 8004f78:	1a21      	subs	r1, r4, r0
 8004f7a:	4628      	mov	r0, r5
 8004f7c:	f001 ffd4 	bl	8006f28 <_sbrk_r>
 8004f80:	3001      	adds	r0, #1
 8004f82:	d101      	bne.n	8004f88 <sbrk_aligned+0x38>
 8004f84:	f04f 34ff 	mov.w	r4, #4294967295
 8004f88:	4620      	mov	r0, r4
 8004f8a:	bd70      	pop	{r4, r5, r6, pc}
 8004f8c:	20000450 	.word	0x20000450

08004f90 <_malloc_r>:
 8004f90:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8004f94:	1ccd      	adds	r5, r1, #3
 8004f96:	f025 0503 	bic.w	r5, r5, #3
 8004f9a:	3508      	adds	r5, #8
 8004f9c:	2d0c      	cmp	r5, #12
 8004f9e:	bf38      	it	cc
 8004fa0:	250c      	movcc	r5, #12
 8004fa2:	2d00      	cmp	r5, #0
 8004fa4:	4607      	mov	r7, r0
 8004fa6:	db01      	blt.n	8004fac <_malloc_r+0x1c>
 8004fa8:	42a9      	cmp	r1, r5
 8004faa:	d905      	bls.n	8004fb8 <_malloc_r+0x28>
 8004fac:	230c      	movs	r3, #12
 8004fae:	2600      	movs	r6, #0
 8004fb0:	603b      	str	r3, [r7, #0]
 8004fb2:	4630      	mov	r0, r6
 8004fb4:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8004fb8:	f8df 80d0 	ldr.w	r8, [pc, #208]	; 800508c <_malloc_r+0xfc>
 8004fbc:	f000 f868 	bl	8005090 <__malloc_lock>
 8004fc0:	f8d8 3000 	ldr.w	r3, [r8]
 8004fc4:	461c      	mov	r4, r3
 8004fc6:	bb5c      	cbnz	r4, 8005020 <_malloc_r+0x90>
 8004fc8:	4629      	mov	r1, r5
 8004fca:	4638      	mov	r0, r7
 8004fcc:	f7ff ffc0 	bl	8004f50 <sbrk_aligned>
 8004fd0:	1c43      	adds	r3, r0, #1
 8004fd2:	4604      	mov	r4, r0
 8004fd4:	d155      	bne.n	8005082 <_malloc_r+0xf2>
 8004fd6:	f8d8 4000 	ldr.w	r4, [r8]
 8004fda:	4626      	mov	r6, r4
 8004fdc:	2e00      	cmp	r6, #0
 8004fde:	d145      	bne.n	800506c <_malloc_r+0xdc>
 8004fe0:	2c00      	cmp	r4, #0
 8004fe2:	d048      	beq.n	8005076 <_malloc_r+0xe6>
 8004fe4:	6823      	ldr	r3, [r4, #0]
 8004fe6:	4631      	mov	r1, r6
 8004fe8:	4638      	mov	r0, r7
 8004fea:	eb04 0903 	add.w	r9, r4, r3
 8004fee:	f001 ff9b 	bl	8006f28 <_sbrk_r>
 8004ff2:	4581      	cmp	r9, r0
 8004ff4:	d13f      	bne.n	8005076 <_malloc_r+0xe6>
 8004ff6:	6821      	ldr	r1, [r4, #0]
 8004ff8:	4638      	mov	r0, r7
 8004ffa:	1a6d      	subs	r5, r5, r1
 8004ffc:	4629      	mov	r1, r5
 8004ffe:	f7ff ffa7 	bl	8004f50 <sbrk_aligned>
 8005002:	3001      	adds	r0, #1
 8005004:	d037      	beq.n	8005076 <_malloc_r+0xe6>
 8005006:	6823      	ldr	r3, [r4, #0]
 8005008:	442b      	add	r3, r5
 800500a:	6023      	str	r3, [r4, #0]
 800500c:	f8d8 3000 	ldr.w	r3, [r8]
 8005010:	2b00      	cmp	r3, #0
 8005012:	d038      	beq.n	8005086 <_malloc_r+0xf6>
 8005014:	685a      	ldr	r2, [r3, #4]
 8005016:	42a2      	cmp	r2, r4
 8005018:	d12b      	bne.n	8005072 <_malloc_r+0xe2>
 800501a:	2200      	movs	r2, #0
 800501c:	605a      	str	r2, [r3, #4]
 800501e:	e00f      	b.n	8005040 <_malloc_r+0xb0>
 8005020:	6822      	ldr	r2, [r4, #0]
 8005022:	1b52      	subs	r2, r2, r5
 8005024:	d41f      	bmi.n	8005066 <_malloc_r+0xd6>
 8005026:	2a0b      	cmp	r2, #11
 8005028:	d917      	bls.n	800505a <_malloc_r+0xca>
 800502a:	1961      	adds	r1, r4, r5
 800502c:	42a3      	cmp	r3, r4
 800502e:	6025      	str	r5, [r4, #0]
 8005030:	bf18      	it	ne
 8005032:	6059      	strne	r1, [r3, #4]
 8005034:	6863      	ldr	r3, [r4, #4]
 8005036:	bf08      	it	eq
 8005038:	f8c8 1000 	streq.w	r1, [r8]
 800503c:	5162      	str	r2, [r4, r5]
 800503e:	604b      	str	r3, [r1, #4]
 8005040:	4638      	mov	r0, r7
 8005042:	f104 060b 	add.w	r6, r4, #11
 8005046:	f000 f829 	bl	800509c <__malloc_unlock>
 800504a:	f026 0607 	bic.w	r6, r6, #7
 800504e:	1d23      	adds	r3, r4, #4
 8005050:	1af2      	subs	r2, r6, r3
 8005052:	d0ae      	beq.n	8004fb2 <_malloc_r+0x22>
 8005054:	1b9b      	subs	r3, r3, r6
 8005056:	50a3      	str	r3, [r4, r2]
 8005058:	e7ab      	b.n	8004fb2 <_malloc_r+0x22>
 800505a:	42a3      	cmp	r3, r4
 800505c:	6862      	ldr	r2, [r4, #4]
 800505e:	d1dd      	bne.n	800501c <_malloc_r+0x8c>
 8005060:	f8c8 2000 	str.w	r2, [r8]
 8005064:	e7ec      	b.n	8005040 <_malloc_r+0xb0>
 8005066:	4623      	mov	r3, r4
 8005068:	6864      	ldr	r4, [r4, #4]
 800506a:	e7ac      	b.n	8004fc6 <_malloc_r+0x36>
 800506c:	4634      	mov	r4, r6
 800506e:	6876      	ldr	r6, [r6, #4]
 8005070:	e7b4      	b.n	8004fdc <_malloc_r+0x4c>
 8005072:	4613      	mov	r3, r2
 8005074:	e7cc      	b.n	8005010 <_malloc_r+0x80>
 8005076:	230c      	movs	r3, #12
 8005078:	4638      	mov	r0, r7
 800507a:	603b      	str	r3, [r7, #0]
 800507c:	f000 f80e 	bl	800509c <__malloc_unlock>
 8005080:	e797      	b.n	8004fb2 <_malloc_r+0x22>
 8005082:	6025      	str	r5, [r4, #0]
 8005084:	e7dc      	b.n	8005040 <_malloc_r+0xb0>
 8005086:	605b      	str	r3, [r3, #4]
 8005088:	deff      	udf	#255	; 0xff
 800508a:	bf00      	nop
 800508c:	2000044c 	.word	0x2000044c

08005090 <__malloc_lock>:
 8005090:	4801      	ldr	r0, [pc, #4]	; (8005098 <__malloc_lock+0x8>)
 8005092:	f7ff b888 	b.w	80041a6 <__retarget_lock_acquire_recursive>
 8005096:	bf00      	nop
 8005098:	20000448 	.word	0x20000448

0800509c <__malloc_unlock>:
 800509c:	4801      	ldr	r0, [pc, #4]	; (80050a4 <__malloc_unlock+0x8>)
 800509e:	f7ff b883 	b.w	80041a8 <__retarget_lock_release_recursive>
 80050a2:	bf00      	nop
 80050a4:	20000448 	.word	0x20000448

080050a8 <_Balloc>:
 80050a8:	b570      	push	{r4, r5, r6, lr}
 80050aa:	69c6      	ldr	r6, [r0, #28]
 80050ac:	4604      	mov	r4, r0
 80050ae:	460d      	mov	r5, r1
 80050b0:	b976      	cbnz	r6, 80050d0 <_Balloc+0x28>
 80050b2:	2010      	movs	r0, #16
 80050b4:	f7ff ff44 	bl	8004f40 <malloc>
 80050b8:	4602      	mov	r2, r0
 80050ba:	61e0      	str	r0, [r4, #28]
 80050bc:	b920      	cbnz	r0, 80050c8 <_Balloc+0x20>
 80050be:	216b      	movs	r1, #107	; 0x6b
 80050c0:	4b17      	ldr	r3, [pc, #92]	; (8005120 <_Balloc+0x78>)
 80050c2:	4818      	ldr	r0, [pc, #96]	; (8005124 <_Balloc+0x7c>)
 80050c4:	f001 ff54 	bl	8006f70 <__assert_func>
 80050c8:	e9c0 6601 	strd	r6, r6, [r0, #4]
 80050cc:	6006      	str	r6, [r0, #0]
 80050ce:	60c6      	str	r6, [r0, #12]
 80050d0:	69e6      	ldr	r6, [r4, #28]
 80050d2:	68f3      	ldr	r3, [r6, #12]
 80050d4:	b183      	cbz	r3, 80050f8 <_Balloc+0x50>
 80050d6:	69e3      	ldr	r3, [r4, #28]
 80050d8:	68db      	ldr	r3, [r3, #12]
 80050da:	f853 0025 	ldr.w	r0, [r3, r5, lsl #2]
 80050de:	b9b8      	cbnz	r0, 8005110 <_Balloc+0x68>
 80050e0:	2101      	movs	r1, #1
 80050e2:	fa01 f605 	lsl.w	r6, r1, r5
 80050e6:	1d72      	adds	r2, r6, #5
 80050e8:	4620      	mov	r0, r4
 80050ea:	0092      	lsls	r2, r2, #2
 80050ec:	f001 ff5e 	bl	8006fac <_calloc_r>
 80050f0:	b160      	cbz	r0, 800510c <_Balloc+0x64>
 80050f2:	e9c0 5601 	strd	r5, r6, [r0, #4]
 80050f6:	e00e      	b.n	8005116 <_Balloc+0x6e>
 80050f8:	2221      	movs	r2, #33	; 0x21
 80050fa:	2104      	movs	r1, #4
 80050fc:	4620      	mov	r0, r4
 80050fe:	f001 ff55 	bl	8006fac <_calloc_r>
 8005102:	69e3      	ldr	r3, [r4, #28]
 8005104:	60f0      	str	r0, [r6, #12]
 8005106:	68db      	ldr	r3, [r3, #12]
 8005108:	2b00      	cmp	r3, #0
 800510a:	d1e4      	bne.n	80050d6 <_Balloc+0x2e>
 800510c:	2000      	movs	r0, #0
 800510e:	bd70      	pop	{r4, r5, r6, pc}
 8005110:	6802      	ldr	r2, [r0, #0]
 8005112:	f843 2025 	str.w	r2, [r3, r5, lsl #2]
 8005116:	2300      	movs	r3, #0
 8005118:	e9c0 3303 	strd	r3, r3, [r0, #12]
 800511c:	e7f7      	b.n	800510e <_Balloc+0x66>
 800511e:	bf00      	nop
 8005120:	0800916e 	.word	0x0800916e
 8005124:	080091ee 	.word	0x080091ee

08005128 <_Bfree>:
 8005128:	b570      	push	{r4, r5, r6, lr}
 800512a:	69c6      	ldr	r6, [r0, #28]
 800512c:	4605      	mov	r5, r0
 800512e:	460c      	mov	r4, r1
 8005130:	b976      	cbnz	r6, 8005150 <_Bfree+0x28>
 8005132:	2010      	movs	r0, #16
 8005134:	f7ff ff04 	bl	8004f40 <malloc>
 8005138:	4602      	mov	r2, r0
 800513a:	61e8      	str	r0, [r5, #28]
 800513c:	b920      	cbnz	r0, 8005148 <_Bfree+0x20>
 800513e:	218f      	movs	r1, #143	; 0x8f
 8005140:	4b08      	ldr	r3, [pc, #32]	; (8005164 <_Bfree+0x3c>)
 8005142:	4809      	ldr	r0, [pc, #36]	; (8005168 <_Bfree+0x40>)
 8005144:	f001 ff14 	bl	8006f70 <__assert_func>
 8005148:	e9c0 6601 	strd	r6, r6, [r0, #4]
 800514c:	6006      	str	r6, [r0, #0]
 800514e:	60c6      	str	r6, [r0, #12]
 8005150:	b13c      	cbz	r4, 8005162 <_Bfree+0x3a>
 8005152:	69eb      	ldr	r3, [r5, #28]
 8005154:	6862      	ldr	r2, [r4, #4]
 8005156:	68db      	ldr	r3, [r3, #12]
 8005158:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 800515c:	6021      	str	r1, [r4, #0]
 800515e:	f843 4022 	str.w	r4, [r3, r2, lsl #2]
 8005162:	bd70      	pop	{r4, r5, r6, pc}
 8005164:	0800916e 	.word	0x0800916e
 8005168:	080091ee 	.word	0x080091ee

0800516c <__multadd>:
 800516c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8005170:	4607      	mov	r7, r0
 8005172:	460c      	mov	r4, r1
 8005174:	461e      	mov	r6, r3
 8005176:	2000      	movs	r0, #0
 8005178:	690d      	ldr	r5, [r1, #16]
 800517a:	f101 0c14 	add.w	ip, r1, #20
 800517e:	f8dc 3000 	ldr.w	r3, [ip]
 8005182:	3001      	adds	r0, #1
 8005184:	b299      	uxth	r1, r3
 8005186:	fb02 6101 	mla	r1, r2, r1, r6
 800518a:	0c1e      	lsrs	r6, r3, #16
 800518c:	0c0b      	lsrs	r3, r1, #16
 800518e:	fb02 3306 	mla	r3, r2, r6, r3
 8005192:	b289      	uxth	r1, r1
 8005194:	eb01 4103 	add.w	r1, r1, r3, lsl #16
 8005198:	4285      	cmp	r5, r0
 800519a:	ea4f 4613 	mov.w	r6, r3, lsr #16
 800519e:	f84c 1b04 	str.w	r1, [ip], #4
 80051a2:	dcec      	bgt.n	800517e <__multadd+0x12>
 80051a4:	b30e      	cbz	r6, 80051ea <__multadd+0x7e>
 80051a6:	68a3      	ldr	r3, [r4, #8]
 80051a8:	42ab      	cmp	r3, r5
 80051aa:	dc19      	bgt.n	80051e0 <__multadd+0x74>
 80051ac:	6861      	ldr	r1, [r4, #4]
 80051ae:	4638      	mov	r0, r7
 80051b0:	3101      	adds	r1, #1
 80051b2:	f7ff ff79 	bl	80050a8 <_Balloc>
 80051b6:	4680      	mov	r8, r0
 80051b8:	b928      	cbnz	r0, 80051c6 <__multadd+0x5a>
 80051ba:	4602      	mov	r2, r0
 80051bc:	21ba      	movs	r1, #186	; 0xba
 80051be:	4b0c      	ldr	r3, [pc, #48]	; (80051f0 <__multadd+0x84>)
 80051c0:	480c      	ldr	r0, [pc, #48]	; (80051f4 <__multadd+0x88>)
 80051c2:	f001 fed5 	bl	8006f70 <__assert_func>
 80051c6:	6922      	ldr	r2, [r4, #16]
 80051c8:	f104 010c 	add.w	r1, r4, #12
 80051cc:	3202      	adds	r2, #2
 80051ce:	0092      	lsls	r2, r2, #2
 80051d0:	300c      	adds	r0, #12
 80051d2:	f001 feb9 	bl	8006f48 <memcpy>
 80051d6:	4621      	mov	r1, r4
 80051d8:	4638      	mov	r0, r7
 80051da:	f7ff ffa5 	bl	8005128 <_Bfree>
 80051de:	4644      	mov	r4, r8
 80051e0:	eb04 0385 	add.w	r3, r4, r5, lsl #2
 80051e4:	3501      	adds	r5, #1
 80051e6:	615e      	str	r6, [r3, #20]
 80051e8:	6125      	str	r5, [r4, #16]
 80051ea:	4620      	mov	r0, r4
 80051ec:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80051f0:	080091dd 	.word	0x080091dd
 80051f4:	080091ee 	.word	0x080091ee

080051f8 <__s2b>:
 80051f8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80051fc:	4615      	mov	r5, r2
 80051fe:	2209      	movs	r2, #9
 8005200:	461f      	mov	r7, r3
 8005202:	3308      	adds	r3, #8
 8005204:	460c      	mov	r4, r1
 8005206:	fb93 f3f2 	sdiv	r3, r3, r2
 800520a:	4606      	mov	r6, r0
 800520c:	2201      	movs	r2, #1
 800520e:	2100      	movs	r1, #0
 8005210:	429a      	cmp	r2, r3
 8005212:	db09      	blt.n	8005228 <__s2b+0x30>
 8005214:	4630      	mov	r0, r6
 8005216:	f7ff ff47 	bl	80050a8 <_Balloc>
 800521a:	b940      	cbnz	r0, 800522e <__s2b+0x36>
 800521c:	4602      	mov	r2, r0
 800521e:	21d3      	movs	r1, #211	; 0xd3
 8005220:	4b18      	ldr	r3, [pc, #96]	; (8005284 <__s2b+0x8c>)
 8005222:	4819      	ldr	r0, [pc, #100]	; (8005288 <__s2b+0x90>)
 8005224:	f001 fea4 	bl	8006f70 <__assert_func>
 8005228:	0052      	lsls	r2, r2, #1
 800522a:	3101      	adds	r1, #1
 800522c:	e7f0      	b.n	8005210 <__s2b+0x18>
 800522e:	9b08      	ldr	r3, [sp, #32]
 8005230:	2d09      	cmp	r5, #9
 8005232:	6143      	str	r3, [r0, #20]
 8005234:	f04f 0301 	mov.w	r3, #1
 8005238:	6103      	str	r3, [r0, #16]
 800523a:	dd16      	ble.n	800526a <__s2b+0x72>
 800523c:	f104 0909 	add.w	r9, r4, #9
 8005240:	46c8      	mov	r8, r9
 8005242:	442c      	add	r4, r5
 8005244:	f818 3b01 	ldrb.w	r3, [r8], #1
 8005248:	4601      	mov	r1, r0
 800524a:	220a      	movs	r2, #10
 800524c:	4630      	mov	r0, r6
 800524e:	3b30      	subs	r3, #48	; 0x30
 8005250:	f7ff ff8c 	bl	800516c <__multadd>
 8005254:	45a0      	cmp	r8, r4
 8005256:	d1f5      	bne.n	8005244 <__s2b+0x4c>
 8005258:	f1a5 0408 	sub.w	r4, r5, #8
 800525c:	444c      	add	r4, r9
 800525e:	1b2d      	subs	r5, r5, r4
 8005260:	1963      	adds	r3, r4, r5
 8005262:	42bb      	cmp	r3, r7
 8005264:	db04      	blt.n	8005270 <__s2b+0x78>
 8005266:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800526a:	2509      	movs	r5, #9
 800526c:	340a      	adds	r4, #10
 800526e:	e7f6      	b.n	800525e <__s2b+0x66>
 8005270:	f814 3b01 	ldrb.w	r3, [r4], #1
 8005274:	4601      	mov	r1, r0
 8005276:	220a      	movs	r2, #10
 8005278:	4630      	mov	r0, r6
 800527a:	3b30      	subs	r3, #48	; 0x30
 800527c:	f7ff ff76 	bl	800516c <__multadd>
 8005280:	e7ee      	b.n	8005260 <__s2b+0x68>
 8005282:	bf00      	nop
 8005284:	080091dd 	.word	0x080091dd
 8005288:	080091ee 	.word	0x080091ee

0800528c <__hi0bits>:
 800528c:	0c02      	lsrs	r2, r0, #16
 800528e:	0412      	lsls	r2, r2, #16
 8005290:	4603      	mov	r3, r0
 8005292:	b9ca      	cbnz	r2, 80052c8 <__hi0bits+0x3c>
 8005294:	0403      	lsls	r3, r0, #16
 8005296:	2010      	movs	r0, #16
 8005298:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
 800529c:	bf04      	itt	eq
 800529e:	021b      	lsleq	r3, r3, #8
 80052a0:	3008      	addeq	r0, #8
 80052a2:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
 80052a6:	bf04      	itt	eq
 80052a8:	011b      	lsleq	r3, r3, #4
 80052aa:	3004      	addeq	r0, #4
 80052ac:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
 80052b0:	bf04      	itt	eq
 80052b2:	009b      	lsleq	r3, r3, #2
 80052b4:	3002      	addeq	r0, #2
 80052b6:	2b00      	cmp	r3, #0
 80052b8:	db05      	blt.n	80052c6 <__hi0bits+0x3a>
 80052ba:	f013 4f80 	tst.w	r3, #1073741824	; 0x40000000
 80052be:	f100 0001 	add.w	r0, r0, #1
 80052c2:	bf08      	it	eq
 80052c4:	2020      	moveq	r0, #32
 80052c6:	4770      	bx	lr
 80052c8:	2000      	movs	r0, #0
 80052ca:	e7e5      	b.n	8005298 <__hi0bits+0xc>

080052cc <__lo0bits>:
 80052cc:	6803      	ldr	r3, [r0, #0]
 80052ce:	4602      	mov	r2, r0
 80052d0:	f013 0007 	ands.w	r0, r3, #7
 80052d4:	d00b      	beq.n	80052ee <__lo0bits+0x22>
 80052d6:	07d9      	lsls	r1, r3, #31
 80052d8:	d421      	bmi.n	800531e <__lo0bits+0x52>
 80052da:	0798      	lsls	r0, r3, #30
 80052dc:	bf49      	itett	mi
 80052de:	085b      	lsrmi	r3, r3, #1
 80052e0:	089b      	lsrpl	r3, r3, #2
 80052e2:	2001      	movmi	r0, #1
 80052e4:	6013      	strmi	r3, [r2, #0]
 80052e6:	bf5c      	itt	pl
 80052e8:	2002      	movpl	r0, #2
 80052ea:	6013      	strpl	r3, [r2, #0]
 80052ec:	4770      	bx	lr
 80052ee:	b299      	uxth	r1, r3
 80052f0:	b909      	cbnz	r1, 80052f6 <__lo0bits+0x2a>
 80052f2:	2010      	movs	r0, #16
 80052f4:	0c1b      	lsrs	r3, r3, #16
 80052f6:	b2d9      	uxtb	r1, r3
 80052f8:	b909      	cbnz	r1, 80052fe <__lo0bits+0x32>
 80052fa:	3008      	adds	r0, #8
 80052fc:	0a1b      	lsrs	r3, r3, #8
 80052fe:	0719      	lsls	r1, r3, #28
 8005300:	bf04      	itt	eq
 8005302:	091b      	lsreq	r3, r3, #4
 8005304:	3004      	addeq	r0, #4
 8005306:	0799      	lsls	r1, r3, #30
 8005308:	bf04      	itt	eq
 800530a:	089b      	lsreq	r3, r3, #2
 800530c:	3002      	addeq	r0, #2
 800530e:	07d9      	lsls	r1, r3, #31
 8005310:	d403      	bmi.n	800531a <__lo0bits+0x4e>
 8005312:	085b      	lsrs	r3, r3, #1
 8005314:	f100 0001 	add.w	r0, r0, #1
 8005318:	d003      	beq.n	8005322 <__lo0bits+0x56>
 800531a:	6013      	str	r3, [r2, #0]
 800531c:	4770      	bx	lr
 800531e:	2000      	movs	r0, #0
 8005320:	4770      	bx	lr
 8005322:	2020      	movs	r0, #32
 8005324:	4770      	bx	lr
	...

08005328 <__i2b>:
 8005328:	b510      	push	{r4, lr}
 800532a:	460c      	mov	r4, r1
 800532c:	2101      	movs	r1, #1
 800532e:	f7ff febb 	bl	80050a8 <_Balloc>
 8005332:	4602      	mov	r2, r0
 8005334:	b928      	cbnz	r0, 8005342 <__i2b+0x1a>
 8005336:	f240 1145 	movw	r1, #325	; 0x145
 800533a:	4b04      	ldr	r3, [pc, #16]	; (800534c <__i2b+0x24>)
 800533c:	4804      	ldr	r0, [pc, #16]	; (8005350 <__i2b+0x28>)
 800533e:	f001 fe17 	bl	8006f70 <__assert_func>
 8005342:	2301      	movs	r3, #1
 8005344:	6144      	str	r4, [r0, #20]
 8005346:	6103      	str	r3, [r0, #16]
 8005348:	bd10      	pop	{r4, pc}
 800534a:	bf00      	nop
 800534c:	080091dd 	.word	0x080091dd
 8005350:	080091ee 	.word	0x080091ee

08005354 <__multiply>:
 8005354:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8005358:	4691      	mov	r9, r2
 800535a:	690a      	ldr	r2, [r1, #16]
 800535c:	f8d9 3010 	ldr.w	r3, [r9, #16]
 8005360:	460c      	mov	r4, r1
 8005362:	429a      	cmp	r2, r3
 8005364:	bfbe      	ittt	lt
 8005366:	460b      	movlt	r3, r1
 8005368:	464c      	movlt	r4, r9
 800536a:	4699      	movlt	r9, r3
 800536c:	6927      	ldr	r7, [r4, #16]
 800536e:	f8d9 a010 	ldr.w	sl, [r9, #16]
 8005372:	68a3      	ldr	r3, [r4, #8]
 8005374:	6861      	ldr	r1, [r4, #4]
 8005376:	eb07 060a 	add.w	r6, r7, sl
 800537a:	42b3      	cmp	r3, r6
 800537c:	b085      	sub	sp, #20
 800537e:	bfb8      	it	lt
 8005380:	3101      	addlt	r1, #1
 8005382:	f7ff fe91 	bl	80050a8 <_Balloc>
 8005386:	b930      	cbnz	r0, 8005396 <__multiply+0x42>
 8005388:	4602      	mov	r2, r0
 800538a:	f44f 71b1 	mov.w	r1, #354	; 0x162
 800538e:	4b43      	ldr	r3, [pc, #268]	; (800549c <__multiply+0x148>)
 8005390:	4843      	ldr	r0, [pc, #268]	; (80054a0 <__multiply+0x14c>)
 8005392:	f001 fded 	bl	8006f70 <__assert_func>
 8005396:	f100 0514 	add.w	r5, r0, #20
 800539a:	462b      	mov	r3, r5
 800539c:	2200      	movs	r2, #0
 800539e:	eb05 0886 	add.w	r8, r5, r6, lsl #2
 80053a2:	4543      	cmp	r3, r8
 80053a4:	d321      	bcc.n	80053ea <__multiply+0x96>
 80053a6:	f104 0314 	add.w	r3, r4, #20
 80053aa:	eb03 0787 	add.w	r7, r3, r7, lsl #2
 80053ae:	f109 0314 	add.w	r3, r9, #20
 80053b2:	eb03 028a 	add.w	r2, r3, sl, lsl #2
 80053b6:	9202      	str	r2, [sp, #8]
 80053b8:	1b3a      	subs	r2, r7, r4
 80053ba:	3a15      	subs	r2, #21
 80053bc:	f022 0203 	bic.w	r2, r2, #3
 80053c0:	3204      	adds	r2, #4
 80053c2:	f104 0115 	add.w	r1, r4, #21
 80053c6:	428f      	cmp	r7, r1
 80053c8:	bf38      	it	cc
 80053ca:	2204      	movcc	r2, #4
 80053cc:	9201      	str	r2, [sp, #4]
 80053ce:	9a02      	ldr	r2, [sp, #8]
 80053d0:	9303      	str	r3, [sp, #12]
 80053d2:	429a      	cmp	r2, r3
 80053d4:	d80c      	bhi.n	80053f0 <__multiply+0x9c>
 80053d6:	2e00      	cmp	r6, #0
 80053d8:	dd03      	ble.n	80053e2 <__multiply+0x8e>
 80053da:	f858 3d04 	ldr.w	r3, [r8, #-4]!
 80053de:	2b00      	cmp	r3, #0
 80053e0:	d05a      	beq.n	8005498 <__multiply+0x144>
 80053e2:	6106      	str	r6, [r0, #16]
 80053e4:	b005      	add	sp, #20
 80053e6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80053ea:	f843 2b04 	str.w	r2, [r3], #4
 80053ee:	e7d8      	b.n	80053a2 <__multiply+0x4e>
 80053f0:	f8b3 a000 	ldrh.w	sl, [r3]
 80053f4:	f1ba 0f00 	cmp.w	sl, #0
 80053f8:	d023      	beq.n	8005442 <__multiply+0xee>
 80053fa:	46a9      	mov	r9, r5
 80053fc:	f04f 0c00 	mov.w	ip, #0
 8005400:	f104 0e14 	add.w	lr, r4, #20
 8005404:	f85e 2b04 	ldr.w	r2, [lr], #4
 8005408:	f8d9 1000 	ldr.w	r1, [r9]
 800540c:	fa1f fb82 	uxth.w	fp, r2
 8005410:	b289      	uxth	r1, r1
 8005412:	fb0a 110b 	mla	r1, sl, fp, r1
 8005416:	4461      	add	r1, ip
 8005418:	f8d9 c000 	ldr.w	ip, [r9]
 800541c:	0c12      	lsrs	r2, r2, #16
 800541e:	ea4f 4c1c 	mov.w	ip, ip, lsr #16
 8005422:	fb0a c202 	mla	r2, sl, r2, ip
 8005426:	eb02 4211 	add.w	r2, r2, r1, lsr #16
 800542a:	b289      	uxth	r1, r1
 800542c:	ea41 4102 	orr.w	r1, r1, r2, lsl #16
 8005430:	4577      	cmp	r7, lr
 8005432:	ea4f 4c12 	mov.w	ip, r2, lsr #16
 8005436:	f849 1b04 	str.w	r1, [r9], #4
 800543a:	d8e3      	bhi.n	8005404 <__multiply+0xb0>
 800543c:	9a01      	ldr	r2, [sp, #4]
 800543e:	f845 c002 	str.w	ip, [r5, r2]
 8005442:	9a03      	ldr	r2, [sp, #12]
 8005444:	3304      	adds	r3, #4
 8005446:	f8b2 9002 	ldrh.w	r9, [r2, #2]
 800544a:	f1b9 0f00 	cmp.w	r9, #0
 800544e:	d021      	beq.n	8005494 <__multiply+0x140>
 8005450:	46ae      	mov	lr, r5
 8005452:	f04f 0a00 	mov.w	sl, #0
 8005456:	6829      	ldr	r1, [r5, #0]
 8005458:	f104 0c14 	add.w	ip, r4, #20
 800545c:	f8bc b000 	ldrh.w	fp, [ip]
 8005460:	f8be 2002 	ldrh.w	r2, [lr, #2]
 8005464:	b289      	uxth	r1, r1
 8005466:	fb09 220b 	mla	r2, r9, fp, r2
 800546a:	4452      	add	r2, sl
 800546c:	ea41 4102 	orr.w	r1, r1, r2, lsl #16
 8005470:	f84e 1b04 	str.w	r1, [lr], #4
 8005474:	f85c 1b04 	ldr.w	r1, [ip], #4
 8005478:	ea4f 4a11 	mov.w	sl, r1, lsr #16
 800547c:	f8be 1000 	ldrh.w	r1, [lr]
 8005480:	4567      	cmp	r7, ip
 8005482:	fb09 110a 	mla	r1, r9, sl, r1
 8005486:	eb01 4112 	add.w	r1, r1, r2, lsr #16
 800548a:	ea4f 4a11 	mov.w	sl, r1, lsr #16
 800548e:	d8e5      	bhi.n	800545c <__multiply+0x108>
 8005490:	9a01      	ldr	r2, [sp, #4]
 8005492:	50a9      	str	r1, [r5, r2]
 8005494:	3504      	adds	r5, #4
 8005496:	e79a      	b.n	80053ce <__multiply+0x7a>
 8005498:	3e01      	subs	r6, #1
 800549a:	e79c      	b.n	80053d6 <__multiply+0x82>
 800549c:	080091dd 	.word	0x080091dd
 80054a0:	080091ee 	.word	0x080091ee

080054a4 <__pow5mult>:
 80054a4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80054a8:	4615      	mov	r5, r2
 80054aa:	f012 0203 	ands.w	r2, r2, #3
 80054ae:	4606      	mov	r6, r0
 80054b0:	460f      	mov	r7, r1
 80054b2:	d007      	beq.n	80054c4 <__pow5mult+0x20>
 80054b4:	4c25      	ldr	r4, [pc, #148]	; (800554c <__pow5mult+0xa8>)
 80054b6:	3a01      	subs	r2, #1
 80054b8:	2300      	movs	r3, #0
 80054ba:	f854 2022 	ldr.w	r2, [r4, r2, lsl #2]
 80054be:	f7ff fe55 	bl	800516c <__multadd>
 80054c2:	4607      	mov	r7, r0
 80054c4:	10ad      	asrs	r5, r5, #2
 80054c6:	d03d      	beq.n	8005544 <__pow5mult+0xa0>
 80054c8:	69f4      	ldr	r4, [r6, #28]
 80054ca:	b97c      	cbnz	r4, 80054ec <__pow5mult+0x48>
 80054cc:	2010      	movs	r0, #16
 80054ce:	f7ff fd37 	bl	8004f40 <malloc>
 80054d2:	4602      	mov	r2, r0
 80054d4:	61f0      	str	r0, [r6, #28]
 80054d6:	b928      	cbnz	r0, 80054e4 <__pow5mult+0x40>
 80054d8:	f240 11b3 	movw	r1, #435	; 0x1b3
 80054dc:	4b1c      	ldr	r3, [pc, #112]	; (8005550 <__pow5mult+0xac>)
 80054de:	481d      	ldr	r0, [pc, #116]	; (8005554 <__pow5mult+0xb0>)
 80054e0:	f001 fd46 	bl	8006f70 <__assert_func>
 80054e4:	e9c0 4401 	strd	r4, r4, [r0, #4]
 80054e8:	6004      	str	r4, [r0, #0]
 80054ea:	60c4      	str	r4, [r0, #12]
 80054ec:	f8d6 801c 	ldr.w	r8, [r6, #28]
 80054f0:	f8d8 4008 	ldr.w	r4, [r8, #8]
 80054f4:	b94c      	cbnz	r4, 800550a <__pow5mult+0x66>
 80054f6:	f240 2171 	movw	r1, #625	; 0x271
 80054fa:	4630      	mov	r0, r6
 80054fc:	f7ff ff14 	bl	8005328 <__i2b>
 8005500:	2300      	movs	r3, #0
 8005502:	4604      	mov	r4, r0
 8005504:	f8c8 0008 	str.w	r0, [r8, #8]
 8005508:	6003      	str	r3, [r0, #0]
 800550a:	f04f 0900 	mov.w	r9, #0
 800550e:	07eb      	lsls	r3, r5, #31
 8005510:	d50a      	bpl.n	8005528 <__pow5mult+0x84>
 8005512:	4639      	mov	r1, r7
 8005514:	4622      	mov	r2, r4
 8005516:	4630      	mov	r0, r6
 8005518:	f7ff ff1c 	bl	8005354 <__multiply>
 800551c:	4680      	mov	r8, r0
 800551e:	4639      	mov	r1, r7
 8005520:	4630      	mov	r0, r6
 8005522:	f7ff fe01 	bl	8005128 <_Bfree>
 8005526:	4647      	mov	r7, r8
 8005528:	106d      	asrs	r5, r5, #1
 800552a:	d00b      	beq.n	8005544 <__pow5mult+0xa0>
 800552c:	6820      	ldr	r0, [r4, #0]
 800552e:	b938      	cbnz	r0, 8005540 <__pow5mult+0x9c>
 8005530:	4622      	mov	r2, r4
 8005532:	4621      	mov	r1, r4
 8005534:	4630      	mov	r0, r6
 8005536:	f7ff ff0d 	bl	8005354 <__multiply>
 800553a:	6020      	str	r0, [r4, #0]
 800553c:	f8c0 9000 	str.w	r9, [r0]
 8005540:	4604      	mov	r4, r0
 8005542:	e7e4      	b.n	800550e <__pow5mult+0x6a>
 8005544:	4638      	mov	r0, r7
 8005546:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800554a:	bf00      	nop
 800554c:	08009338 	.word	0x08009338
 8005550:	0800916e 	.word	0x0800916e
 8005554:	080091ee 	.word	0x080091ee

08005558 <__lshift>:
 8005558:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800555c:	460c      	mov	r4, r1
 800555e:	4607      	mov	r7, r0
 8005560:	4691      	mov	r9, r2
 8005562:	6923      	ldr	r3, [r4, #16]
 8005564:	6849      	ldr	r1, [r1, #4]
 8005566:	eb03 1862 	add.w	r8, r3, r2, asr #5
 800556a:	68a3      	ldr	r3, [r4, #8]
 800556c:	ea4f 1a62 	mov.w	sl, r2, asr #5
 8005570:	f108 0601 	add.w	r6, r8, #1
 8005574:	42b3      	cmp	r3, r6
 8005576:	db0b      	blt.n	8005590 <__lshift+0x38>
 8005578:	4638      	mov	r0, r7
 800557a:	f7ff fd95 	bl	80050a8 <_Balloc>
 800557e:	4605      	mov	r5, r0
 8005580:	b948      	cbnz	r0, 8005596 <__lshift+0x3e>
 8005582:	4602      	mov	r2, r0
 8005584:	f44f 71ef 	mov.w	r1, #478	; 0x1de
 8005588:	4b27      	ldr	r3, [pc, #156]	; (8005628 <__lshift+0xd0>)
 800558a:	4828      	ldr	r0, [pc, #160]	; (800562c <__lshift+0xd4>)
 800558c:	f001 fcf0 	bl	8006f70 <__assert_func>
 8005590:	3101      	adds	r1, #1
 8005592:	005b      	lsls	r3, r3, #1
 8005594:	e7ee      	b.n	8005574 <__lshift+0x1c>
 8005596:	2300      	movs	r3, #0
 8005598:	f100 0114 	add.w	r1, r0, #20
 800559c:	f100 0210 	add.w	r2, r0, #16
 80055a0:	4618      	mov	r0, r3
 80055a2:	4553      	cmp	r3, sl
 80055a4:	db33      	blt.n	800560e <__lshift+0xb6>
 80055a6:	6920      	ldr	r0, [r4, #16]
 80055a8:	ea2a 7aea 	bic.w	sl, sl, sl, asr #31
 80055ac:	f104 0314 	add.w	r3, r4, #20
 80055b0:	f019 091f 	ands.w	r9, r9, #31
 80055b4:	eb01 018a 	add.w	r1, r1, sl, lsl #2
 80055b8:	eb03 0c80 	add.w	ip, r3, r0, lsl #2
 80055bc:	d02b      	beq.n	8005616 <__lshift+0xbe>
 80055be:	468a      	mov	sl, r1
 80055c0:	2200      	movs	r2, #0
 80055c2:	f1c9 0e20 	rsb	lr, r9, #32
 80055c6:	6818      	ldr	r0, [r3, #0]
 80055c8:	fa00 f009 	lsl.w	r0, r0, r9
 80055cc:	4310      	orrs	r0, r2
 80055ce:	f84a 0b04 	str.w	r0, [sl], #4
 80055d2:	f853 2b04 	ldr.w	r2, [r3], #4
 80055d6:	459c      	cmp	ip, r3
 80055d8:	fa22 f20e 	lsr.w	r2, r2, lr
 80055dc:	d8f3      	bhi.n	80055c6 <__lshift+0x6e>
 80055de:	ebac 0304 	sub.w	r3, ip, r4
 80055e2:	3b15      	subs	r3, #21
 80055e4:	f023 0303 	bic.w	r3, r3, #3
 80055e8:	3304      	adds	r3, #4
 80055ea:	f104 0015 	add.w	r0, r4, #21
 80055ee:	4584      	cmp	ip, r0
 80055f0:	bf38      	it	cc
 80055f2:	2304      	movcc	r3, #4
 80055f4:	50ca      	str	r2, [r1, r3]
 80055f6:	b10a      	cbz	r2, 80055fc <__lshift+0xa4>
 80055f8:	f108 0602 	add.w	r6, r8, #2
 80055fc:	3e01      	subs	r6, #1
 80055fe:	4638      	mov	r0, r7
 8005600:	4621      	mov	r1, r4
 8005602:	612e      	str	r6, [r5, #16]
 8005604:	f7ff fd90 	bl	8005128 <_Bfree>
 8005608:	4628      	mov	r0, r5
 800560a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800560e:	f842 0f04 	str.w	r0, [r2, #4]!
 8005612:	3301      	adds	r3, #1
 8005614:	e7c5      	b.n	80055a2 <__lshift+0x4a>
 8005616:	3904      	subs	r1, #4
 8005618:	f853 2b04 	ldr.w	r2, [r3], #4
 800561c:	459c      	cmp	ip, r3
 800561e:	f841 2f04 	str.w	r2, [r1, #4]!
 8005622:	d8f9      	bhi.n	8005618 <__lshift+0xc0>
 8005624:	e7ea      	b.n	80055fc <__lshift+0xa4>
 8005626:	bf00      	nop
 8005628:	080091dd 	.word	0x080091dd
 800562c:	080091ee 	.word	0x080091ee

08005630 <__mcmp>:
 8005630:	4603      	mov	r3, r0
 8005632:	690a      	ldr	r2, [r1, #16]
 8005634:	6900      	ldr	r0, [r0, #16]
 8005636:	b530      	push	{r4, r5, lr}
 8005638:	1a80      	subs	r0, r0, r2
 800563a:	d10d      	bne.n	8005658 <__mcmp+0x28>
 800563c:	3314      	adds	r3, #20
 800563e:	3114      	adds	r1, #20
 8005640:	eb03 0482 	add.w	r4, r3, r2, lsl #2
 8005644:	eb01 0182 	add.w	r1, r1, r2, lsl #2
 8005648:	f854 5d04 	ldr.w	r5, [r4, #-4]!
 800564c:	f851 2d04 	ldr.w	r2, [r1, #-4]!
 8005650:	4295      	cmp	r5, r2
 8005652:	d002      	beq.n	800565a <__mcmp+0x2a>
 8005654:	d304      	bcc.n	8005660 <__mcmp+0x30>
 8005656:	2001      	movs	r0, #1
 8005658:	bd30      	pop	{r4, r5, pc}
 800565a:	42a3      	cmp	r3, r4
 800565c:	d3f4      	bcc.n	8005648 <__mcmp+0x18>
 800565e:	e7fb      	b.n	8005658 <__mcmp+0x28>
 8005660:	f04f 30ff 	mov.w	r0, #4294967295
 8005664:	e7f8      	b.n	8005658 <__mcmp+0x28>
	...

08005668 <__mdiff>:
 8005668:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800566c:	460d      	mov	r5, r1
 800566e:	4607      	mov	r7, r0
 8005670:	4611      	mov	r1, r2
 8005672:	4628      	mov	r0, r5
 8005674:	4614      	mov	r4, r2
 8005676:	f7ff ffdb 	bl	8005630 <__mcmp>
 800567a:	1e06      	subs	r6, r0, #0
 800567c:	d111      	bne.n	80056a2 <__mdiff+0x3a>
 800567e:	4631      	mov	r1, r6
 8005680:	4638      	mov	r0, r7
 8005682:	f7ff fd11 	bl	80050a8 <_Balloc>
 8005686:	4602      	mov	r2, r0
 8005688:	b928      	cbnz	r0, 8005696 <__mdiff+0x2e>
 800568a:	f240 2137 	movw	r1, #567	; 0x237
 800568e:	4b3a      	ldr	r3, [pc, #232]	; (8005778 <__mdiff+0x110>)
 8005690:	483a      	ldr	r0, [pc, #232]	; (800577c <__mdiff+0x114>)
 8005692:	f001 fc6d 	bl	8006f70 <__assert_func>
 8005696:	2301      	movs	r3, #1
 8005698:	e9c0 3604 	strd	r3, r6, [r0, #16]
 800569c:	4610      	mov	r0, r2
 800569e:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80056a2:	bfa4      	itt	ge
 80056a4:	4623      	movge	r3, r4
 80056a6:	462c      	movge	r4, r5
 80056a8:	4638      	mov	r0, r7
 80056aa:	6861      	ldr	r1, [r4, #4]
 80056ac:	bfa6      	itte	ge
 80056ae:	461d      	movge	r5, r3
 80056b0:	2600      	movge	r6, #0
 80056b2:	2601      	movlt	r6, #1
 80056b4:	f7ff fcf8 	bl	80050a8 <_Balloc>
 80056b8:	4602      	mov	r2, r0
 80056ba:	b918      	cbnz	r0, 80056c4 <__mdiff+0x5c>
 80056bc:	f240 2145 	movw	r1, #581	; 0x245
 80056c0:	4b2d      	ldr	r3, [pc, #180]	; (8005778 <__mdiff+0x110>)
 80056c2:	e7e5      	b.n	8005690 <__mdiff+0x28>
 80056c4:	f102 0814 	add.w	r8, r2, #20
 80056c8:	46c2      	mov	sl, r8
 80056ca:	f04f 0c00 	mov.w	ip, #0
 80056ce:	6927      	ldr	r7, [r4, #16]
 80056d0:	60c6      	str	r6, [r0, #12]
 80056d2:	692e      	ldr	r6, [r5, #16]
 80056d4:	f104 0014 	add.w	r0, r4, #20
 80056d8:	f105 0914 	add.w	r9, r5, #20
 80056dc:	eb00 0e87 	add.w	lr, r0, r7, lsl #2
 80056e0:	eb09 0686 	add.w	r6, r9, r6, lsl #2
 80056e4:	3410      	adds	r4, #16
 80056e6:	f854 bf04 	ldr.w	fp, [r4, #4]!
 80056ea:	f859 3b04 	ldr.w	r3, [r9], #4
 80056ee:	fa1f f18b 	uxth.w	r1, fp
 80056f2:	4461      	add	r1, ip
 80056f4:	fa1f fc83 	uxth.w	ip, r3
 80056f8:	0c1b      	lsrs	r3, r3, #16
 80056fa:	eba1 010c 	sub.w	r1, r1, ip
 80056fe:	ebc3 431b 	rsb	r3, r3, fp, lsr #16
 8005702:	eb03 4321 	add.w	r3, r3, r1, asr #16
 8005706:	b289      	uxth	r1, r1
 8005708:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 800570c:	454e      	cmp	r6, r9
 800570e:	ea4f 4c23 	mov.w	ip, r3, asr #16
 8005712:	f84a 1b04 	str.w	r1, [sl], #4
 8005716:	d8e6      	bhi.n	80056e6 <__mdiff+0x7e>
 8005718:	1b73      	subs	r3, r6, r5
 800571a:	3b15      	subs	r3, #21
 800571c:	f023 0303 	bic.w	r3, r3, #3
 8005720:	3515      	adds	r5, #21
 8005722:	3304      	adds	r3, #4
 8005724:	42ae      	cmp	r6, r5
 8005726:	bf38      	it	cc
 8005728:	2304      	movcc	r3, #4
 800572a:	4418      	add	r0, r3
 800572c:	4443      	add	r3, r8
 800572e:	461e      	mov	r6, r3
 8005730:	4605      	mov	r5, r0
 8005732:	4575      	cmp	r5, lr
 8005734:	d30e      	bcc.n	8005754 <__mdiff+0xec>
 8005736:	f10e 0103 	add.w	r1, lr, #3
 800573a:	1a09      	subs	r1, r1, r0
 800573c:	f021 0103 	bic.w	r1, r1, #3
 8005740:	3803      	subs	r0, #3
 8005742:	4586      	cmp	lr, r0
 8005744:	bf38      	it	cc
 8005746:	2100      	movcc	r1, #0
 8005748:	440b      	add	r3, r1
 800574a:	f853 1d04 	ldr.w	r1, [r3, #-4]!
 800574e:	b189      	cbz	r1, 8005774 <__mdiff+0x10c>
 8005750:	6117      	str	r7, [r2, #16]
 8005752:	e7a3      	b.n	800569c <__mdiff+0x34>
 8005754:	f855 8b04 	ldr.w	r8, [r5], #4
 8005758:	fa1f f188 	uxth.w	r1, r8
 800575c:	4461      	add	r1, ip
 800575e:	140c      	asrs	r4, r1, #16
 8005760:	eb04 4418 	add.w	r4, r4, r8, lsr #16
 8005764:	b289      	uxth	r1, r1
 8005766:	ea41 4104 	orr.w	r1, r1, r4, lsl #16
 800576a:	ea4f 4c24 	mov.w	ip, r4, asr #16
 800576e:	f846 1b04 	str.w	r1, [r6], #4
 8005772:	e7de      	b.n	8005732 <__mdiff+0xca>
 8005774:	3f01      	subs	r7, #1
 8005776:	e7e8      	b.n	800574a <__mdiff+0xe2>
 8005778:	080091dd 	.word	0x080091dd
 800577c:	080091ee 	.word	0x080091ee

08005780 <__ulp>:
 8005780:	4b0e      	ldr	r3, [pc, #56]	; (80057bc <__ulp+0x3c>)
 8005782:	400b      	ands	r3, r1
 8005784:	f1a3 7350 	sub.w	r3, r3, #54525952	; 0x3400000
 8005788:	2b00      	cmp	r3, #0
 800578a:	dc08      	bgt.n	800579e <__ulp+0x1e>
 800578c:	425b      	negs	r3, r3
 800578e:	f1b3 7fa0 	cmp.w	r3, #20971520	; 0x1400000
 8005792:	ea4f 5223 	mov.w	r2, r3, asr #20
 8005796:	da04      	bge.n	80057a2 <__ulp+0x22>
 8005798:	f44f 2300 	mov.w	r3, #524288	; 0x80000
 800579c:	4113      	asrs	r3, r2
 800579e:	2200      	movs	r2, #0
 80057a0:	e008      	b.n	80057b4 <__ulp+0x34>
 80057a2:	f1a2 0314 	sub.w	r3, r2, #20
 80057a6:	2b1e      	cmp	r3, #30
 80057a8:	bfd6      	itet	le
 80057aa:	f04f 4200 	movle.w	r2, #2147483648	; 0x80000000
 80057ae:	2201      	movgt	r2, #1
 80057b0:	40da      	lsrle	r2, r3
 80057b2:	2300      	movs	r3, #0
 80057b4:	4619      	mov	r1, r3
 80057b6:	4610      	mov	r0, r2
 80057b8:	4770      	bx	lr
 80057ba:	bf00      	nop
 80057bc:	7ff00000 	.word	0x7ff00000

080057c0 <__b2d>:
 80057c0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80057c2:	6905      	ldr	r5, [r0, #16]
 80057c4:	f100 0714 	add.w	r7, r0, #20
 80057c8:	eb07 0585 	add.w	r5, r7, r5, lsl #2
 80057cc:	f855 4c04 	ldr.w	r4, [r5, #-4]
 80057d0:	1f2e      	subs	r6, r5, #4
 80057d2:	4620      	mov	r0, r4
 80057d4:	f7ff fd5a 	bl	800528c <__hi0bits>
 80057d8:	f1c0 0220 	rsb	r2, r0, #32
 80057dc:	280a      	cmp	r0, #10
 80057de:	4603      	mov	r3, r0
 80057e0:	f8df c068 	ldr.w	ip, [pc, #104]	; 800584c <__b2d+0x8c>
 80057e4:	600a      	str	r2, [r1, #0]
 80057e6:	dc12      	bgt.n	800580e <__b2d+0x4e>
 80057e8:	f1c0 0e0b 	rsb	lr, r0, #11
 80057ec:	fa24 f20e 	lsr.w	r2, r4, lr
 80057f0:	42b7      	cmp	r7, r6
 80057f2:	ea42 010c 	orr.w	r1, r2, ip
 80057f6:	bf2c      	ite	cs
 80057f8:	2200      	movcs	r2, #0
 80057fa:	f855 2c08 	ldrcc.w	r2, [r5, #-8]
 80057fe:	3315      	adds	r3, #21
 8005800:	fa04 f303 	lsl.w	r3, r4, r3
 8005804:	fa22 f20e 	lsr.w	r2, r2, lr
 8005808:	431a      	orrs	r2, r3
 800580a:	4610      	mov	r0, r2
 800580c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800580e:	42b7      	cmp	r7, r6
 8005810:	bf2e      	itee	cs
 8005812:	2200      	movcs	r2, #0
 8005814:	f855 2c08 	ldrcc.w	r2, [r5, #-8]
 8005818:	f1a5 0608 	subcc.w	r6, r5, #8
 800581c:	3b0b      	subs	r3, #11
 800581e:	d012      	beq.n	8005846 <__b2d+0x86>
 8005820:	f1c3 0520 	rsb	r5, r3, #32
 8005824:	fa22 f105 	lsr.w	r1, r2, r5
 8005828:	409c      	lsls	r4, r3
 800582a:	430c      	orrs	r4, r1
 800582c:	42be      	cmp	r6, r7
 800582e:	f044 517f 	orr.w	r1, r4, #1069547520	; 0x3fc00000
 8005832:	bf94      	ite	ls
 8005834:	2400      	movls	r4, #0
 8005836:	f856 4c04 	ldrhi.w	r4, [r6, #-4]
 800583a:	409a      	lsls	r2, r3
 800583c:	40ec      	lsrs	r4, r5
 800583e:	f441 1140 	orr.w	r1, r1, #3145728	; 0x300000
 8005842:	4322      	orrs	r2, r4
 8005844:	e7e1      	b.n	800580a <__b2d+0x4a>
 8005846:	ea44 010c 	orr.w	r1, r4, ip
 800584a:	e7de      	b.n	800580a <__b2d+0x4a>
 800584c:	3ff00000 	.word	0x3ff00000

08005850 <__d2b>:
 8005850:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8005852:	2101      	movs	r1, #1
 8005854:	4617      	mov	r7, r2
 8005856:	461c      	mov	r4, r3
 8005858:	9e08      	ldr	r6, [sp, #32]
 800585a:	f7ff fc25 	bl	80050a8 <_Balloc>
 800585e:	4605      	mov	r5, r0
 8005860:	b930      	cbnz	r0, 8005870 <__d2b+0x20>
 8005862:	4602      	mov	r2, r0
 8005864:	f240 310f 	movw	r1, #783	; 0x30f
 8005868:	4b22      	ldr	r3, [pc, #136]	; (80058f4 <__d2b+0xa4>)
 800586a:	4823      	ldr	r0, [pc, #140]	; (80058f8 <__d2b+0xa8>)
 800586c:	f001 fb80 	bl	8006f70 <__assert_func>
 8005870:	f3c4 0313 	ubfx	r3, r4, #0, #20
 8005874:	f3c4 540a 	ubfx	r4, r4, #20, #11
 8005878:	bb24      	cbnz	r4, 80058c4 <__d2b+0x74>
 800587a:	2f00      	cmp	r7, #0
 800587c:	9301      	str	r3, [sp, #4]
 800587e:	d026      	beq.n	80058ce <__d2b+0x7e>
 8005880:	4668      	mov	r0, sp
 8005882:	9700      	str	r7, [sp, #0]
 8005884:	f7ff fd22 	bl	80052cc <__lo0bits>
 8005888:	e9dd 1200 	ldrd	r1, r2, [sp]
 800588c:	b1e8      	cbz	r0, 80058ca <__d2b+0x7a>
 800588e:	f1c0 0320 	rsb	r3, r0, #32
 8005892:	fa02 f303 	lsl.w	r3, r2, r3
 8005896:	430b      	orrs	r3, r1
 8005898:	40c2      	lsrs	r2, r0
 800589a:	616b      	str	r3, [r5, #20]
 800589c:	9201      	str	r2, [sp, #4]
 800589e:	9b01      	ldr	r3, [sp, #4]
 80058a0:	2b00      	cmp	r3, #0
 80058a2:	bf14      	ite	ne
 80058a4:	2102      	movne	r1, #2
 80058a6:	2101      	moveq	r1, #1
 80058a8:	61ab      	str	r3, [r5, #24]
 80058aa:	6129      	str	r1, [r5, #16]
 80058ac:	b1bc      	cbz	r4, 80058de <__d2b+0x8e>
 80058ae:	f2a4 4433 	subw	r4, r4, #1075	; 0x433
 80058b2:	4404      	add	r4, r0
 80058b4:	6034      	str	r4, [r6, #0]
 80058b6:	f1c0 0035 	rsb	r0, r0, #53	; 0x35
 80058ba:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80058bc:	6018      	str	r0, [r3, #0]
 80058be:	4628      	mov	r0, r5
 80058c0:	b003      	add	sp, #12
 80058c2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80058c4:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 80058c8:	e7d7      	b.n	800587a <__d2b+0x2a>
 80058ca:	6169      	str	r1, [r5, #20]
 80058cc:	e7e7      	b.n	800589e <__d2b+0x4e>
 80058ce:	a801      	add	r0, sp, #4
 80058d0:	f7ff fcfc 	bl	80052cc <__lo0bits>
 80058d4:	9b01      	ldr	r3, [sp, #4]
 80058d6:	2101      	movs	r1, #1
 80058d8:	616b      	str	r3, [r5, #20]
 80058da:	3020      	adds	r0, #32
 80058dc:	e7e5      	b.n	80058aa <__d2b+0x5a>
 80058de:	f2a0 4032 	subw	r0, r0, #1074	; 0x432
 80058e2:	eb05 0381 	add.w	r3, r5, r1, lsl #2
 80058e6:	6030      	str	r0, [r6, #0]
 80058e8:	6918      	ldr	r0, [r3, #16]
 80058ea:	f7ff fccf 	bl	800528c <__hi0bits>
 80058ee:	ebc0 1041 	rsb	r0, r0, r1, lsl #5
 80058f2:	e7e2      	b.n	80058ba <__d2b+0x6a>
 80058f4:	080091dd 	.word	0x080091dd
 80058f8:	080091ee 	.word	0x080091ee

080058fc <__ratio>:
 80058fc:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8005900:	4688      	mov	r8, r1
 8005902:	4669      	mov	r1, sp
 8005904:	4681      	mov	r9, r0
 8005906:	f7ff ff5b 	bl	80057c0 <__b2d>
 800590a:	460f      	mov	r7, r1
 800590c:	4604      	mov	r4, r0
 800590e:	460d      	mov	r5, r1
 8005910:	4640      	mov	r0, r8
 8005912:	a901      	add	r1, sp, #4
 8005914:	f7ff ff54 	bl	80057c0 <__b2d>
 8005918:	f8d9 3010 	ldr.w	r3, [r9, #16]
 800591c:	f8d8 2010 	ldr.w	r2, [r8, #16]
 8005920:	468b      	mov	fp, r1
 8005922:	eba3 0c02 	sub.w	ip, r3, r2
 8005926:	e9dd 3200 	ldrd	r3, r2, [sp]
 800592a:	1a9b      	subs	r3, r3, r2
 800592c:	eb03 134c 	add.w	r3, r3, ip, lsl #5
 8005930:	2b00      	cmp	r3, #0
 8005932:	bfd5      	itete	le
 8005934:	460a      	movle	r2, r1
 8005936:	462a      	movgt	r2, r5
 8005938:	ebc3 3303 	rsble	r3, r3, r3, lsl #12
 800593c:	eb02 5703 	addgt.w	r7, r2, r3, lsl #20
 8005940:	bfd8      	it	le
 8005942:	eb02 5b03 	addle.w	fp, r2, r3, lsl #20
 8005946:	465b      	mov	r3, fp
 8005948:	4602      	mov	r2, r0
 800594a:	4639      	mov	r1, r7
 800594c:	4620      	mov	r0, r4
 800594e:	f7fa fefd 	bl	800074c <__aeabi_ddiv>
 8005952:	b003      	add	sp, #12
 8005954:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08005958 <__copybits>:
 8005958:	3901      	subs	r1, #1
 800595a:	b570      	push	{r4, r5, r6, lr}
 800595c:	1149      	asrs	r1, r1, #5
 800595e:	6914      	ldr	r4, [r2, #16]
 8005960:	3101      	adds	r1, #1
 8005962:	f102 0314 	add.w	r3, r2, #20
 8005966:	eb00 0181 	add.w	r1, r0, r1, lsl #2
 800596a:	eb03 0484 	add.w	r4, r3, r4, lsl #2
 800596e:	1f05      	subs	r5, r0, #4
 8005970:	42a3      	cmp	r3, r4
 8005972:	d30c      	bcc.n	800598e <__copybits+0x36>
 8005974:	1aa3      	subs	r3, r4, r2
 8005976:	3b11      	subs	r3, #17
 8005978:	f023 0303 	bic.w	r3, r3, #3
 800597c:	3211      	adds	r2, #17
 800597e:	42a2      	cmp	r2, r4
 8005980:	bf88      	it	hi
 8005982:	2300      	movhi	r3, #0
 8005984:	4418      	add	r0, r3
 8005986:	2300      	movs	r3, #0
 8005988:	4288      	cmp	r0, r1
 800598a:	d305      	bcc.n	8005998 <__copybits+0x40>
 800598c:	bd70      	pop	{r4, r5, r6, pc}
 800598e:	f853 6b04 	ldr.w	r6, [r3], #4
 8005992:	f845 6f04 	str.w	r6, [r5, #4]!
 8005996:	e7eb      	b.n	8005970 <__copybits+0x18>
 8005998:	f840 3b04 	str.w	r3, [r0], #4
 800599c:	e7f4      	b.n	8005988 <__copybits+0x30>

0800599e <__any_on>:
 800599e:	f100 0214 	add.w	r2, r0, #20
 80059a2:	6900      	ldr	r0, [r0, #16]
 80059a4:	114b      	asrs	r3, r1, #5
 80059a6:	4298      	cmp	r0, r3
 80059a8:	b510      	push	{r4, lr}
 80059aa:	db11      	blt.n	80059d0 <__any_on+0x32>
 80059ac:	dd0a      	ble.n	80059c4 <__any_on+0x26>
 80059ae:	f011 011f 	ands.w	r1, r1, #31
 80059b2:	d007      	beq.n	80059c4 <__any_on+0x26>
 80059b4:	f852 4023 	ldr.w	r4, [r2, r3, lsl #2]
 80059b8:	fa24 f001 	lsr.w	r0, r4, r1
 80059bc:	fa00 f101 	lsl.w	r1, r0, r1
 80059c0:	428c      	cmp	r4, r1
 80059c2:	d10b      	bne.n	80059dc <__any_on+0x3e>
 80059c4:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 80059c8:	4293      	cmp	r3, r2
 80059ca:	d803      	bhi.n	80059d4 <__any_on+0x36>
 80059cc:	2000      	movs	r0, #0
 80059ce:	bd10      	pop	{r4, pc}
 80059d0:	4603      	mov	r3, r0
 80059d2:	e7f7      	b.n	80059c4 <__any_on+0x26>
 80059d4:	f853 1d04 	ldr.w	r1, [r3, #-4]!
 80059d8:	2900      	cmp	r1, #0
 80059da:	d0f5      	beq.n	80059c8 <__any_on+0x2a>
 80059dc:	2001      	movs	r0, #1
 80059de:	e7f6      	b.n	80059ce <__any_on+0x30>

080059e0 <sulp>:
 80059e0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80059e4:	460f      	mov	r7, r1
 80059e6:	4690      	mov	r8, r2
 80059e8:	f7ff feca 	bl	8005780 <__ulp>
 80059ec:	4604      	mov	r4, r0
 80059ee:	460d      	mov	r5, r1
 80059f0:	f1b8 0f00 	cmp.w	r8, #0
 80059f4:	d011      	beq.n	8005a1a <sulp+0x3a>
 80059f6:	f3c7 530a 	ubfx	r3, r7, #20, #11
 80059fa:	f1c3 036b 	rsb	r3, r3, #107	; 0x6b
 80059fe:	2b00      	cmp	r3, #0
 8005a00:	dd0b      	ble.n	8005a1a <sulp+0x3a>
 8005a02:	2400      	movs	r4, #0
 8005a04:	051b      	lsls	r3, r3, #20
 8005a06:	f103 557f 	add.w	r5, r3, #1069547520	; 0x3fc00000
 8005a0a:	f505 1540 	add.w	r5, r5, #3145728	; 0x300000
 8005a0e:	4622      	mov	r2, r4
 8005a10:	462b      	mov	r3, r5
 8005a12:	f7fa fd71 	bl	80004f8 <__aeabi_dmul>
 8005a16:	4604      	mov	r4, r0
 8005a18:	460d      	mov	r5, r1
 8005a1a:	4620      	mov	r0, r4
 8005a1c:	4629      	mov	r1, r5
 8005a1e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8005a22:	0000      	movs	r0, r0
 8005a24:	0000      	movs	r0, r0
	...

08005a28 <_strtod_l>:
 8005a28:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8005a2c:	b09f      	sub	sp, #124	; 0x7c
 8005a2e:	9217      	str	r2, [sp, #92]	; 0x5c
 8005a30:	2200      	movs	r2, #0
 8005a32:	4604      	mov	r4, r0
 8005a34:	921a      	str	r2, [sp, #104]	; 0x68
 8005a36:	460d      	mov	r5, r1
 8005a38:	f04f 0800 	mov.w	r8, #0
 8005a3c:	f04f 0900 	mov.w	r9, #0
 8005a40:	460a      	mov	r2, r1
 8005a42:	9219      	str	r2, [sp, #100]	; 0x64
 8005a44:	7811      	ldrb	r1, [r2, #0]
 8005a46:	292b      	cmp	r1, #43	; 0x2b
 8005a48:	d04a      	beq.n	8005ae0 <_strtod_l+0xb8>
 8005a4a:	d838      	bhi.n	8005abe <_strtod_l+0x96>
 8005a4c:	290d      	cmp	r1, #13
 8005a4e:	d832      	bhi.n	8005ab6 <_strtod_l+0x8e>
 8005a50:	2908      	cmp	r1, #8
 8005a52:	d832      	bhi.n	8005aba <_strtod_l+0x92>
 8005a54:	2900      	cmp	r1, #0
 8005a56:	d03b      	beq.n	8005ad0 <_strtod_l+0xa8>
 8005a58:	2200      	movs	r2, #0
 8005a5a:	920e      	str	r2, [sp, #56]	; 0x38
 8005a5c:	9e19      	ldr	r6, [sp, #100]	; 0x64
 8005a5e:	7832      	ldrb	r2, [r6, #0]
 8005a60:	2a30      	cmp	r2, #48	; 0x30
 8005a62:	f040 80b2 	bne.w	8005bca <_strtod_l+0x1a2>
 8005a66:	7872      	ldrb	r2, [r6, #1]
 8005a68:	f002 02df 	and.w	r2, r2, #223	; 0xdf
 8005a6c:	2a58      	cmp	r2, #88	; 0x58
 8005a6e:	d16e      	bne.n	8005b4e <_strtod_l+0x126>
 8005a70:	9302      	str	r3, [sp, #8]
 8005a72:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8005a74:	4620      	mov	r0, r4
 8005a76:	9301      	str	r3, [sp, #4]
 8005a78:	ab1a      	add	r3, sp, #104	; 0x68
 8005a7a:	9300      	str	r3, [sp, #0]
 8005a7c:	4a8c      	ldr	r2, [pc, #560]	; (8005cb0 <_strtod_l+0x288>)
 8005a7e:	ab1b      	add	r3, sp, #108	; 0x6c
 8005a80:	a919      	add	r1, sp, #100	; 0x64
 8005a82:	f001 fb0f 	bl	80070a4 <__gethex>
 8005a86:	f010 070f 	ands.w	r7, r0, #15
 8005a8a:	4605      	mov	r5, r0
 8005a8c:	d005      	beq.n	8005a9a <_strtod_l+0x72>
 8005a8e:	2f06      	cmp	r7, #6
 8005a90:	d128      	bne.n	8005ae4 <_strtod_l+0xbc>
 8005a92:	2300      	movs	r3, #0
 8005a94:	3601      	adds	r6, #1
 8005a96:	9619      	str	r6, [sp, #100]	; 0x64
 8005a98:	930e      	str	r3, [sp, #56]	; 0x38
 8005a9a:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8005a9c:	2b00      	cmp	r3, #0
 8005a9e:	f040 85a0 	bne.w	80065e2 <_strtod_l+0xbba>
 8005aa2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8005aa4:	b1cb      	cbz	r3, 8005ada <_strtod_l+0xb2>
 8005aa6:	4642      	mov	r2, r8
 8005aa8:	f109 4300 	add.w	r3, r9, #2147483648	; 0x80000000
 8005aac:	4610      	mov	r0, r2
 8005aae:	4619      	mov	r1, r3
 8005ab0:	b01f      	add	sp, #124	; 0x7c
 8005ab2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8005ab6:	2920      	cmp	r1, #32
 8005ab8:	d1ce      	bne.n	8005a58 <_strtod_l+0x30>
 8005aba:	3201      	adds	r2, #1
 8005abc:	e7c1      	b.n	8005a42 <_strtod_l+0x1a>
 8005abe:	292d      	cmp	r1, #45	; 0x2d
 8005ac0:	d1ca      	bne.n	8005a58 <_strtod_l+0x30>
 8005ac2:	2101      	movs	r1, #1
 8005ac4:	910e      	str	r1, [sp, #56]	; 0x38
 8005ac6:	1c51      	adds	r1, r2, #1
 8005ac8:	9119      	str	r1, [sp, #100]	; 0x64
 8005aca:	7852      	ldrb	r2, [r2, #1]
 8005acc:	2a00      	cmp	r2, #0
 8005ace:	d1c5      	bne.n	8005a5c <_strtod_l+0x34>
 8005ad0:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8005ad2:	9519      	str	r5, [sp, #100]	; 0x64
 8005ad4:	2b00      	cmp	r3, #0
 8005ad6:	f040 8582 	bne.w	80065de <_strtod_l+0xbb6>
 8005ada:	4642      	mov	r2, r8
 8005adc:	464b      	mov	r3, r9
 8005ade:	e7e5      	b.n	8005aac <_strtod_l+0x84>
 8005ae0:	2100      	movs	r1, #0
 8005ae2:	e7ef      	b.n	8005ac4 <_strtod_l+0x9c>
 8005ae4:	9a1a      	ldr	r2, [sp, #104]	; 0x68
 8005ae6:	b13a      	cbz	r2, 8005af8 <_strtod_l+0xd0>
 8005ae8:	2135      	movs	r1, #53	; 0x35
 8005aea:	a81c      	add	r0, sp, #112	; 0x70
 8005aec:	f7ff ff34 	bl	8005958 <__copybits>
 8005af0:	4620      	mov	r0, r4
 8005af2:	991a      	ldr	r1, [sp, #104]	; 0x68
 8005af4:	f7ff fb18 	bl	8005128 <_Bfree>
 8005af8:	3f01      	subs	r7, #1
 8005afa:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
 8005afc:	2f04      	cmp	r7, #4
 8005afe:	d806      	bhi.n	8005b0e <_strtod_l+0xe6>
 8005b00:	e8df f007 	tbb	[pc, r7]
 8005b04:	201d0314 	.word	0x201d0314
 8005b08:	14          	.byte	0x14
 8005b09:	00          	.byte	0x00
 8005b0a:	e9dd 891c 	ldrd	r8, r9, [sp, #112]	; 0x70
 8005b0e:	05e9      	lsls	r1, r5, #23
 8005b10:	bf48      	it	mi
 8005b12:	f049 4900 	orrmi.w	r9, r9, #2147483648	; 0x80000000
 8005b16:	f029 4300 	bic.w	r3, r9, #2147483648	; 0x80000000
 8005b1a:	0d1b      	lsrs	r3, r3, #20
 8005b1c:	051b      	lsls	r3, r3, #20
 8005b1e:	2b00      	cmp	r3, #0
 8005b20:	d1bb      	bne.n	8005a9a <_strtod_l+0x72>
 8005b22:	f7fe fb15 	bl	8004150 <__errno>
 8005b26:	2322      	movs	r3, #34	; 0x22
 8005b28:	6003      	str	r3, [r0, #0]
 8005b2a:	e7b6      	b.n	8005a9a <_strtod_l+0x72>
 8005b2c:	f202 4233 	addw	r2, r2, #1075	; 0x433
 8005b30:	e9dd 831c 	ldrd	r8, r3, [sp, #112]	; 0x70
 8005b34:	f423 1380 	bic.w	r3, r3, #1048576	; 0x100000
 8005b38:	ea43 5902 	orr.w	r9, r3, r2, lsl #20
 8005b3c:	e7e7      	b.n	8005b0e <_strtod_l+0xe6>
 8005b3e:	f8df 9174 	ldr.w	r9, [pc, #372]	; 8005cb4 <_strtod_l+0x28c>
 8005b42:	e7e4      	b.n	8005b0e <_strtod_l+0xe6>
 8005b44:	f06f 4900 	mvn.w	r9, #2147483648	; 0x80000000
 8005b48:	f04f 38ff 	mov.w	r8, #4294967295
 8005b4c:	e7df      	b.n	8005b0e <_strtod_l+0xe6>
 8005b4e:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8005b50:	1c5a      	adds	r2, r3, #1
 8005b52:	9219      	str	r2, [sp, #100]	; 0x64
 8005b54:	785b      	ldrb	r3, [r3, #1]
 8005b56:	2b30      	cmp	r3, #48	; 0x30
 8005b58:	d0f9      	beq.n	8005b4e <_strtod_l+0x126>
 8005b5a:	2b00      	cmp	r3, #0
 8005b5c:	d09d      	beq.n	8005a9a <_strtod_l+0x72>
 8005b5e:	2301      	movs	r3, #1
 8005b60:	f04f 0a00 	mov.w	sl, #0
 8005b64:	220a      	movs	r2, #10
 8005b66:	46d3      	mov	fp, sl
 8005b68:	9305      	str	r3, [sp, #20]
 8005b6a:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8005b6c:	f8cd a028 	str.w	sl, [sp, #40]	; 0x28
 8005b70:	930b      	str	r3, [sp, #44]	; 0x2c
 8005b72:	9819      	ldr	r0, [sp, #100]	; 0x64
 8005b74:	7806      	ldrb	r6, [r0, #0]
 8005b76:	f1a6 0330 	sub.w	r3, r6, #48	; 0x30
 8005b7a:	b2d9      	uxtb	r1, r3
 8005b7c:	2909      	cmp	r1, #9
 8005b7e:	d926      	bls.n	8005bce <_strtod_l+0x1a6>
 8005b80:	2201      	movs	r2, #1
 8005b82:	494d      	ldr	r1, [pc, #308]	; (8005cb8 <_strtod_l+0x290>)
 8005b84:	f001 f9be 	bl	8006f04 <strncmp>
 8005b88:	2800      	cmp	r0, #0
 8005b8a:	d030      	beq.n	8005bee <_strtod_l+0x1c6>
 8005b8c:	2000      	movs	r0, #0
 8005b8e:	4632      	mov	r2, r6
 8005b90:	4603      	mov	r3, r0
 8005b92:	465e      	mov	r6, fp
 8005b94:	9008      	str	r0, [sp, #32]
 8005b96:	2a65      	cmp	r2, #101	; 0x65
 8005b98:	d001      	beq.n	8005b9e <_strtod_l+0x176>
 8005b9a:	2a45      	cmp	r2, #69	; 0x45
 8005b9c:	d113      	bne.n	8005bc6 <_strtod_l+0x19e>
 8005b9e:	b91e      	cbnz	r6, 8005ba8 <_strtod_l+0x180>
 8005ba0:	9a05      	ldr	r2, [sp, #20]
 8005ba2:	4302      	orrs	r2, r0
 8005ba4:	d094      	beq.n	8005ad0 <_strtod_l+0xa8>
 8005ba6:	2600      	movs	r6, #0
 8005ba8:	9d19      	ldr	r5, [sp, #100]	; 0x64
 8005baa:	1c6a      	adds	r2, r5, #1
 8005bac:	9219      	str	r2, [sp, #100]	; 0x64
 8005bae:	786a      	ldrb	r2, [r5, #1]
 8005bb0:	2a2b      	cmp	r2, #43	; 0x2b
 8005bb2:	d074      	beq.n	8005c9e <_strtod_l+0x276>
 8005bb4:	2a2d      	cmp	r2, #45	; 0x2d
 8005bb6:	d078      	beq.n	8005caa <_strtod_l+0x282>
 8005bb8:	f04f 0c00 	mov.w	ip, #0
 8005bbc:	f1a2 0130 	sub.w	r1, r2, #48	; 0x30
 8005bc0:	2909      	cmp	r1, #9
 8005bc2:	d97f      	bls.n	8005cc4 <_strtod_l+0x29c>
 8005bc4:	9519      	str	r5, [sp, #100]	; 0x64
 8005bc6:	2700      	movs	r7, #0
 8005bc8:	e09e      	b.n	8005d08 <_strtod_l+0x2e0>
 8005bca:	2300      	movs	r3, #0
 8005bcc:	e7c8      	b.n	8005b60 <_strtod_l+0x138>
 8005bce:	f1bb 0f08 	cmp.w	fp, #8
 8005bd2:	bfd8      	it	le
 8005bd4:	990a      	ldrle	r1, [sp, #40]	; 0x28
 8005bd6:	f100 0001 	add.w	r0, r0, #1
 8005bda:	bfd6      	itet	le
 8005bdc:	fb02 3301 	mlale	r3, r2, r1, r3
 8005be0:	fb02 3a0a 	mlagt	sl, r2, sl, r3
 8005be4:	930a      	strle	r3, [sp, #40]	; 0x28
 8005be6:	f10b 0b01 	add.w	fp, fp, #1
 8005bea:	9019      	str	r0, [sp, #100]	; 0x64
 8005bec:	e7c1      	b.n	8005b72 <_strtod_l+0x14a>
 8005bee:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8005bf0:	1c5a      	adds	r2, r3, #1
 8005bf2:	9219      	str	r2, [sp, #100]	; 0x64
 8005bf4:	785a      	ldrb	r2, [r3, #1]
 8005bf6:	f1bb 0f00 	cmp.w	fp, #0
 8005bfa:	d037      	beq.n	8005c6c <_strtod_l+0x244>
 8005bfc:	465e      	mov	r6, fp
 8005bfe:	9008      	str	r0, [sp, #32]
 8005c00:	f1a2 0330 	sub.w	r3, r2, #48	; 0x30
 8005c04:	2b09      	cmp	r3, #9
 8005c06:	d912      	bls.n	8005c2e <_strtod_l+0x206>
 8005c08:	2301      	movs	r3, #1
 8005c0a:	e7c4      	b.n	8005b96 <_strtod_l+0x16e>
 8005c0c:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8005c0e:	3001      	adds	r0, #1
 8005c10:	1c5a      	adds	r2, r3, #1
 8005c12:	9219      	str	r2, [sp, #100]	; 0x64
 8005c14:	785a      	ldrb	r2, [r3, #1]
 8005c16:	2a30      	cmp	r2, #48	; 0x30
 8005c18:	d0f8      	beq.n	8005c0c <_strtod_l+0x1e4>
 8005c1a:	f1a2 0331 	sub.w	r3, r2, #49	; 0x31
 8005c1e:	2b08      	cmp	r3, #8
 8005c20:	f200 84e4 	bhi.w	80065ec <_strtod_l+0xbc4>
 8005c24:	9008      	str	r0, [sp, #32]
 8005c26:	2000      	movs	r0, #0
 8005c28:	4606      	mov	r6, r0
 8005c2a:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8005c2c:	930b      	str	r3, [sp, #44]	; 0x2c
 8005c2e:	3a30      	subs	r2, #48	; 0x30
 8005c30:	f100 0301 	add.w	r3, r0, #1
 8005c34:	d014      	beq.n	8005c60 <_strtod_l+0x238>
 8005c36:	9908      	ldr	r1, [sp, #32]
 8005c38:	eb00 0c06 	add.w	ip, r0, r6
 8005c3c:	4419      	add	r1, r3
 8005c3e:	9108      	str	r1, [sp, #32]
 8005c40:	4633      	mov	r3, r6
 8005c42:	210a      	movs	r1, #10
 8005c44:	4563      	cmp	r3, ip
 8005c46:	d113      	bne.n	8005c70 <_strtod_l+0x248>
 8005c48:	1833      	adds	r3, r6, r0
 8005c4a:	2b08      	cmp	r3, #8
 8005c4c:	f106 0601 	add.w	r6, r6, #1
 8005c50:	4406      	add	r6, r0
 8005c52:	dc1a      	bgt.n	8005c8a <_strtod_l+0x262>
 8005c54:	230a      	movs	r3, #10
 8005c56:	990a      	ldr	r1, [sp, #40]	; 0x28
 8005c58:	fb03 2301 	mla	r3, r3, r1, r2
 8005c5c:	930a      	str	r3, [sp, #40]	; 0x28
 8005c5e:	2300      	movs	r3, #0
 8005c60:	9a19      	ldr	r2, [sp, #100]	; 0x64
 8005c62:	4618      	mov	r0, r3
 8005c64:	1c51      	adds	r1, r2, #1
 8005c66:	9119      	str	r1, [sp, #100]	; 0x64
 8005c68:	7852      	ldrb	r2, [r2, #1]
 8005c6a:	e7c9      	b.n	8005c00 <_strtod_l+0x1d8>
 8005c6c:	4658      	mov	r0, fp
 8005c6e:	e7d2      	b.n	8005c16 <_strtod_l+0x1ee>
 8005c70:	2b08      	cmp	r3, #8
 8005c72:	f103 0301 	add.w	r3, r3, #1
 8005c76:	dc03      	bgt.n	8005c80 <_strtod_l+0x258>
 8005c78:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 8005c7a:	434f      	muls	r7, r1
 8005c7c:	970a      	str	r7, [sp, #40]	; 0x28
 8005c7e:	e7e1      	b.n	8005c44 <_strtod_l+0x21c>
 8005c80:	2b10      	cmp	r3, #16
 8005c82:	bfd8      	it	le
 8005c84:	fb01 fa0a 	mulle.w	sl, r1, sl
 8005c88:	e7dc      	b.n	8005c44 <_strtod_l+0x21c>
 8005c8a:	2e10      	cmp	r6, #16
 8005c8c:	bfdc      	itt	le
 8005c8e:	230a      	movle	r3, #10
 8005c90:	fb03 2a0a 	mlale	sl, r3, sl, r2
 8005c94:	e7e3      	b.n	8005c5e <_strtod_l+0x236>
 8005c96:	2300      	movs	r3, #0
 8005c98:	9308      	str	r3, [sp, #32]
 8005c9a:	2301      	movs	r3, #1
 8005c9c:	e780      	b.n	8005ba0 <_strtod_l+0x178>
 8005c9e:	f04f 0c00 	mov.w	ip, #0
 8005ca2:	1caa      	adds	r2, r5, #2
 8005ca4:	9219      	str	r2, [sp, #100]	; 0x64
 8005ca6:	78aa      	ldrb	r2, [r5, #2]
 8005ca8:	e788      	b.n	8005bbc <_strtod_l+0x194>
 8005caa:	f04f 0c01 	mov.w	ip, #1
 8005cae:	e7f8      	b.n	8005ca2 <_strtod_l+0x27a>
 8005cb0:	08009348 	.word	0x08009348
 8005cb4:	7ff00000 	.word	0x7ff00000
 8005cb8:	08009344 	.word	0x08009344
 8005cbc:	9a19      	ldr	r2, [sp, #100]	; 0x64
 8005cbe:	1c51      	adds	r1, r2, #1
 8005cc0:	9119      	str	r1, [sp, #100]	; 0x64
 8005cc2:	7852      	ldrb	r2, [r2, #1]
 8005cc4:	2a30      	cmp	r2, #48	; 0x30
 8005cc6:	d0f9      	beq.n	8005cbc <_strtod_l+0x294>
 8005cc8:	f1a2 0131 	sub.w	r1, r2, #49	; 0x31
 8005ccc:	2908      	cmp	r1, #8
 8005cce:	f63f af7a 	bhi.w	8005bc6 <_strtod_l+0x19e>
 8005cd2:	3a30      	subs	r2, #48	; 0x30
 8005cd4:	9209      	str	r2, [sp, #36]	; 0x24
 8005cd6:	9a19      	ldr	r2, [sp, #100]	; 0x64
 8005cd8:	920c      	str	r2, [sp, #48]	; 0x30
 8005cda:	9a19      	ldr	r2, [sp, #100]	; 0x64
 8005cdc:	1c57      	adds	r7, r2, #1
 8005cde:	9719      	str	r7, [sp, #100]	; 0x64
 8005ce0:	7852      	ldrb	r2, [r2, #1]
 8005ce2:	f1a2 0e30 	sub.w	lr, r2, #48	; 0x30
 8005ce6:	f1be 0f09 	cmp.w	lr, #9
 8005cea:	d938      	bls.n	8005d5e <_strtod_l+0x336>
 8005cec:	990c      	ldr	r1, [sp, #48]	; 0x30
 8005cee:	1a7f      	subs	r7, r7, r1
 8005cf0:	2f08      	cmp	r7, #8
 8005cf2:	f644 671f 	movw	r7, #19999	; 0x4e1f
 8005cf6:	dc03      	bgt.n	8005d00 <_strtod_l+0x2d8>
 8005cf8:	9909      	ldr	r1, [sp, #36]	; 0x24
 8005cfa:	428f      	cmp	r7, r1
 8005cfc:	bfa8      	it	ge
 8005cfe:	460f      	movge	r7, r1
 8005d00:	f1bc 0f00 	cmp.w	ip, #0
 8005d04:	d000      	beq.n	8005d08 <_strtod_l+0x2e0>
 8005d06:	427f      	negs	r7, r7
 8005d08:	2e00      	cmp	r6, #0
 8005d0a:	d14f      	bne.n	8005dac <_strtod_l+0x384>
 8005d0c:	9905      	ldr	r1, [sp, #20]
 8005d0e:	4301      	orrs	r1, r0
 8005d10:	f47f aec3 	bne.w	8005a9a <_strtod_l+0x72>
 8005d14:	2b00      	cmp	r3, #0
 8005d16:	f47f aedb 	bne.w	8005ad0 <_strtod_l+0xa8>
 8005d1a:	2a69      	cmp	r2, #105	; 0x69
 8005d1c:	d029      	beq.n	8005d72 <_strtod_l+0x34a>
 8005d1e:	dc26      	bgt.n	8005d6e <_strtod_l+0x346>
 8005d20:	2a49      	cmp	r2, #73	; 0x49
 8005d22:	d026      	beq.n	8005d72 <_strtod_l+0x34a>
 8005d24:	2a4e      	cmp	r2, #78	; 0x4e
 8005d26:	f47f aed3 	bne.w	8005ad0 <_strtod_l+0xa8>
 8005d2a:	499a      	ldr	r1, [pc, #616]	; (8005f94 <_strtod_l+0x56c>)
 8005d2c:	a819      	add	r0, sp, #100	; 0x64
 8005d2e:	f001 fbfb 	bl	8007528 <__match>
 8005d32:	2800      	cmp	r0, #0
 8005d34:	f43f aecc 	beq.w	8005ad0 <_strtod_l+0xa8>
 8005d38:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8005d3a:	781b      	ldrb	r3, [r3, #0]
 8005d3c:	2b28      	cmp	r3, #40	; 0x28
 8005d3e:	d12f      	bne.n	8005da0 <_strtod_l+0x378>
 8005d40:	4995      	ldr	r1, [pc, #596]	; (8005f98 <_strtod_l+0x570>)
 8005d42:	aa1c      	add	r2, sp, #112	; 0x70
 8005d44:	a819      	add	r0, sp, #100	; 0x64
 8005d46:	f001 fc03 	bl	8007550 <__hexnan>
 8005d4a:	2805      	cmp	r0, #5
 8005d4c:	d128      	bne.n	8005da0 <_strtod_l+0x378>
 8005d4e:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8005d50:	f8dd 8070 	ldr.w	r8, [sp, #112]	; 0x70
 8005d54:	f043 49ff 	orr.w	r9, r3, #2139095040	; 0x7f800000
 8005d58:	f449 09e0 	orr.w	r9, r9, #7340032	; 0x700000
 8005d5c:	e69d      	b.n	8005a9a <_strtod_l+0x72>
 8005d5e:	210a      	movs	r1, #10
 8005d60:	9f09      	ldr	r7, [sp, #36]	; 0x24
 8005d62:	fb01 2107 	mla	r1, r1, r7, r2
 8005d66:	f1a1 0230 	sub.w	r2, r1, #48	; 0x30
 8005d6a:	9209      	str	r2, [sp, #36]	; 0x24
 8005d6c:	e7b5      	b.n	8005cda <_strtod_l+0x2b2>
 8005d6e:	2a6e      	cmp	r2, #110	; 0x6e
 8005d70:	e7d9      	b.n	8005d26 <_strtod_l+0x2fe>
 8005d72:	498a      	ldr	r1, [pc, #552]	; (8005f9c <_strtod_l+0x574>)
 8005d74:	a819      	add	r0, sp, #100	; 0x64
 8005d76:	f001 fbd7 	bl	8007528 <__match>
 8005d7a:	2800      	cmp	r0, #0
 8005d7c:	f43f aea8 	beq.w	8005ad0 <_strtod_l+0xa8>
 8005d80:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8005d82:	4987      	ldr	r1, [pc, #540]	; (8005fa0 <_strtod_l+0x578>)
 8005d84:	3b01      	subs	r3, #1
 8005d86:	a819      	add	r0, sp, #100	; 0x64
 8005d88:	9319      	str	r3, [sp, #100]	; 0x64
 8005d8a:	f001 fbcd 	bl	8007528 <__match>
 8005d8e:	b910      	cbnz	r0, 8005d96 <_strtod_l+0x36e>
 8005d90:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8005d92:	3301      	adds	r3, #1
 8005d94:	9319      	str	r3, [sp, #100]	; 0x64
 8005d96:	f04f 0800 	mov.w	r8, #0
 8005d9a:	f8df 9208 	ldr.w	r9, [pc, #520]	; 8005fa4 <_strtod_l+0x57c>
 8005d9e:	e67c      	b.n	8005a9a <_strtod_l+0x72>
 8005da0:	4881      	ldr	r0, [pc, #516]	; (8005fa8 <_strtod_l+0x580>)
 8005da2:	f001 f8df 	bl	8006f64 <nan>
 8005da6:	4680      	mov	r8, r0
 8005da8:	4689      	mov	r9, r1
 8005daa:	e676      	b.n	8005a9a <_strtod_l+0x72>
 8005dac:	9b08      	ldr	r3, [sp, #32]
 8005dae:	f1bb 0f00 	cmp.w	fp, #0
 8005db2:	bf08      	it	eq
 8005db4:	46b3      	moveq	fp, r6
 8005db6:	1afb      	subs	r3, r7, r3
 8005db8:	2e10      	cmp	r6, #16
 8005dba:	980a      	ldr	r0, [sp, #40]	; 0x28
 8005dbc:	4635      	mov	r5, r6
 8005dbe:	9309      	str	r3, [sp, #36]	; 0x24
 8005dc0:	bfa8      	it	ge
 8005dc2:	2510      	movge	r5, #16
 8005dc4:	f7fa fb1e 	bl	8000404 <__aeabi_ui2d>
 8005dc8:	2e09      	cmp	r6, #9
 8005dca:	4680      	mov	r8, r0
 8005dcc:	4689      	mov	r9, r1
 8005dce:	dd13      	ble.n	8005df8 <_strtod_l+0x3d0>
 8005dd0:	4b76      	ldr	r3, [pc, #472]	; (8005fac <_strtod_l+0x584>)
 8005dd2:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 8005dd6:	e953 2312 	ldrd	r2, r3, [r3, #-72]	; 0x48
 8005dda:	f7fa fb8d 	bl	80004f8 <__aeabi_dmul>
 8005dde:	4680      	mov	r8, r0
 8005de0:	4650      	mov	r0, sl
 8005de2:	4689      	mov	r9, r1
 8005de4:	f7fa fb0e 	bl	8000404 <__aeabi_ui2d>
 8005de8:	4602      	mov	r2, r0
 8005dea:	460b      	mov	r3, r1
 8005dec:	4640      	mov	r0, r8
 8005dee:	4649      	mov	r1, r9
 8005df0:	f7fa f9cc 	bl	800018c <__adddf3>
 8005df4:	4680      	mov	r8, r0
 8005df6:	4689      	mov	r9, r1
 8005df8:	2e0f      	cmp	r6, #15
 8005dfa:	dc36      	bgt.n	8005e6a <_strtod_l+0x442>
 8005dfc:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8005dfe:	2b00      	cmp	r3, #0
 8005e00:	f43f ae4b 	beq.w	8005a9a <_strtod_l+0x72>
 8005e04:	dd22      	ble.n	8005e4c <_strtod_l+0x424>
 8005e06:	2b16      	cmp	r3, #22
 8005e08:	dc09      	bgt.n	8005e1e <_strtod_l+0x3f6>
 8005e0a:	4968      	ldr	r1, [pc, #416]	; (8005fac <_strtod_l+0x584>)
 8005e0c:	4642      	mov	r2, r8
 8005e0e:	eb01 01c3 	add.w	r1, r1, r3, lsl #3
 8005e12:	464b      	mov	r3, r9
 8005e14:	e9d1 0100 	ldrd	r0, r1, [r1]
 8005e18:	f7fa fb6e 	bl	80004f8 <__aeabi_dmul>
 8005e1c:	e7c3      	b.n	8005da6 <_strtod_l+0x37e>
 8005e1e:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8005e20:	f1c6 0325 	rsb	r3, r6, #37	; 0x25
 8005e24:	4293      	cmp	r3, r2
 8005e26:	db20      	blt.n	8005e6a <_strtod_l+0x442>
 8005e28:	4c60      	ldr	r4, [pc, #384]	; (8005fac <_strtod_l+0x584>)
 8005e2a:	f1c6 060f 	rsb	r6, r6, #15
 8005e2e:	eb04 01c6 	add.w	r1, r4, r6, lsl #3
 8005e32:	4642      	mov	r2, r8
 8005e34:	e9d1 0100 	ldrd	r0, r1, [r1]
 8005e38:	464b      	mov	r3, r9
 8005e3a:	f7fa fb5d 	bl	80004f8 <__aeabi_dmul>
 8005e3e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8005e40:	1b9e      	subs	r6, r3, r6
 8005e42:	eb04 04c6 	add.w	r4, r4, r6, lsl #3
 8005e46:	e9d4 2300 	ldrd	r2, r3, [r4]
 8005e4a:	e7e5      	b.n	8005e18 <_strtod_l+0x3f0>
 8005e4c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8005e4e:	3316      	adds	r3, #22
 8005e50:	db0b      	blt.n	8005e6a <_strtod_l+0x442>
 8005e52:	9b08      	ldr	r3, [sp, #32]
 8005e54:	4640      	mov	r0, r8
 8005e56:	1bdf      	subs	r7, r3, r7
 8005e58:	4b54      	ldr	r3, [pc, #336]	; (8005fac <_strtod_l+0x584>)
 8005e5a:	4649      	mov	r1, r9
 8005e5c:	eb03 07c7 	add.w	r7, r3, r7, lsl #3
 8005e60:	e9d7 2300 	ldrd	r2, r3, [r7]
 8005e64:	f7fa fc72 	bl	800074c <__aeabi_ddiv>
 8005e68:	e79d      	b.n	8005da6 <_strtod_l+0x37e>
 8005e6a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8005e6c:	1b75      	subs	r5, r6, r5
 8005e6e:	441d      	add	r5, r3
 8005e70:	2d00      	cmp	r5, #0
 8005e72:	dd70      	ble.n	8005f56 <_strtod_l+0x52e>
 8005e74:	f015 030f 	ands.w	r3, r5, #15
 8005e78:	d00a      	beq.n	8005e90 <_strtod_l+0x468>
 8005e7a:	494c      	ldr	r1, [pc, #304]	; (8005fac <_strtod_l+0x584>)
 8005e7c:	4642      	mov	r2, r8
 8005e7e:	eb01 01c3 	add.w	r1, r1, r3, lsl #3
 8005e82:	e9d1 0100 	ldrd	r0, r1, [r1]
 8005e86:	464b      	mov	r3, r9
 8005e88:	f7fa fb36 	bl	80004f8 <__aeabi_dmul>
 8005e8c:	4680      	mov	r8, r0
 8005e8e:	4689      	mov	r9, r1
 8005e90:	f035 050f 	bics.w	r5, r5, #15
 8005e94:	d04d      	beq.n	8005f32 <_strtod_l+0x50a>
 8005e96:	f5b5 7f9a 	cmp.w	r5, #308	; 0x134
 8005e9a:	dd22      	ble.n	8005ee2 <_strtod_l+0x4ba>
 8005e9c:	2600      	movs	r6, #0
 8005e9e:	46b3      	mov	fp, r6
 8005ea0:	960b      	str	r6, [sp, #44]	; 0x2c
 8005ea2:	9608      	str	r6, [sp, #32]
 8005ea4:	2322      	movs	r3, #34	; 0x22
 8005ea6:	f04f 0800 	mov.w	r8, #0
 8005eaa:	f8df 90f8 	ldr.w	r9, [pc, #248]	; 8005fa4 <_strtod_l+0x57c>
 8005eae:	6023      	str	r3, [r4, #0]
 8005eb0:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8005eb2:	2b00      	cmp	r3, #0
 8005eb4:	f43f adf1 	beq.w	8005a9a <_strtod_l+0x72>
 8005eb8:	4620      	mov	r0, r4
 8005eba:	991a      	ldr	r1, [sp, #104]	; 0x68
 8005ebc:	f7ff f934 	bl	8005128 <_Bfree>
 8005ec0:	4620      	mov	r0, r4
 8005ec2:	9908      	ldr	r1, [sp, #32]
 8005ec4:	f7ff f930 	bl	8005128 <_Bfree>
 8005ec8:	4659      	mov	r1, fp
 8005eca:	4620      	mov	r0, r4
 8005ecc:	f7ff f92c 	bl	8005128 <_Bfree>
 8005ed0:	4620      	mov	r0, r4
 8005ed2:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8005ed4:	f7ff f928 	bl	8005128 <_Bfree>
 8005ed8:	4631      	mov	r1, r6
 8005eda:	4620      	mov	r0, r4
 8005edc:	f7ff f924 	bl	8005128 <_Bfree>
 8005ee0:	e5db      	b.n	8005a9a <_strtod_l+0x72>
 8005ee2:	4b33      	ldr	r3, [pc, #204]	; (8005fb0 <_strtod_l+0x588>)
 8005ee4:	4640      	mov	r0, r8
 8005ee6:	9305      	str	r3, [sp, #20]
 8005ee8:	2300      	movs	r3, #0
 8005eea:	4649      	mov	r1, r9
 8005eec:	469a      	mov	sl, r3
 8005eee:	112d      	asrs	r5, r5, #4
 8005ef0:	2d01      	cmp	r5, #1
 8005ef2:	dc21      	bgt.n	8005f38 <_strtod_l+0x510>
 8005ef4:	b10b      	cbz	r3, 8005efa <_strtod_l+0x4d2>
 8005ef6:	4680      	mov	r8, r0
 8005ef8:	4689      	mov	r9, r1
 8005efa:	492d      	ldr	r1, [pc, #180]	; (8005fb0 <_strtod_l+0x588>)
 8005efc:	f1a9 7954 	sub.w	r9, r9, #55574528	; 0x3500000
 8005f00:	eb01 01ca 	add.w	r1, r1, sl, lsl #3
 8005f04:	4642      	mov	r2, r8
 8005f06:	e9d1 0100 	ldrd	r0, r1, [r1]
 8005f0a:	464b      	mov	r3, r9
 8005f0c:	f7fa faf4 	bl	80004f8 <__aeabi_dmul>
 8005f10:	4b24      	ldr	r3, [pc, #144]	; (8005fa4 <_strtod_l+0x57c>)
 8005f12:	460a      	mov	r2, r1
 8005f14:	400b      	ands	r3, r1
 8005f16:	4927      	ldr	r1, [pc, #156]	; (8005fb4 <_strtod_l+0x58c>)
 8005f18:	4680      	mov	r8, r0
 8005f1a:	428b      	cmp	r3, r1
 8005f1c:	d8be      	bhi.n	8005e9c <_strtod_l+0x474>
 8005f1e:	f5a1 1180 	sub.w	r1, r1, #1048576	; 0x100000
 8005f22:	428b      	cmp	r3, r1
 8005f24:	bf86      	itte	hi
 8005f26:	f04f 38ff 	movhi.w	r8, #4294967295
 8005f2a:	f8df 908c 	ldrhi.w	r9, [pc, #140]	; 8005fb8 <_strtod_l+0x590>
 8005f2e:	f102 7954 	addls.w	r9, r2, #55574528	; 0x3500000
 8005f32:	2300      	movs	r3, #0
 8005f34:	9305      	str	r3, [sp, #20]
 8005f36:	e07b      	b.n	8006030 <_strtod_l+0x608>
 8005f38:	07ea      	lsls	r2, r5, #31
 8005f3a:	d505      	bpl.n	8005f48 <_strtod_l+0x520>
 8005f3c:	9b05      	ldr	r3, [sp, #20]
 8005f3e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8005f42:	f7fa fad9 	bl	80004f8 <__aeabi_dmul>
 8005f46:	2301      	movs	r3, #1
 8005f48:	9a05      	ldr	r2, [sp, #20]
 8005f4a:	f10a 0a01 	add.w	sl, sl, #1
 8005f4e:	3208      	adds	r2, #8
 8005f50:	106d      	asrs	r5, r5, #1
 8005f52:	9205      	str	r2, [sp, #20]
 8005f54:	e7cc      	b.n	8005ef0 <_strtod_l+0x4c8>
 8005f56:	d0ec      	beq.n	8005f32 <_strtod_l+0x50a>
 8005f58:	426d      	negs	r5, r5
 8005f5a:	f015 020f 	ands.w	r2, r5, #15
 8005f5e:	d00a      	beq.n	8005f76 <_strtod_l+0x54e>
 8005f60:	4b12      	ldr	r3, [pc, #72]	; (8005fac <_strtod_l+0x584>)
 8005f62:	4640      	mov	r0, r8
 8005f64:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 8005f68:	4649      	mov	r1, r9
 8005f6a:	e9d3 2300 	ldrd	r2, r3, [r3]
 8005f6e:	f7fa fbed 	bl	800074c <__aeabi_ddiv>
 8005f72:	4680      	mov	r8, r0
 8005f74:	4689      	mov	r9, r1
 8005f76:	112d      	asrs	r5, r5, #4
 8005f78:	d0db      	beq.n	8005f32 <_strtod_l+0x50a>
 8005f7a:	2d1f      	cmp	r5, #31
 8005f7c:	dd1e      	ble.n	8005fbc <_strtod_l+0x594>
 8005f7e:	2600      	movs	r6, #0
 8005f80:	46b3      	mov	fp, r6
 8005f82:	960b      	str	r6, [sp, #44]	; 0x2c
 8005f84:	9608      	str	r6, [sp, #32]
 8005f86:	2322      	movs	r3, #34	; 0x22
 8005f88:	f04f 0800 	mov.w	r8, #0
 8005f8c:	f04f 0900 	mov.w	r9, #0
 8005f90:	6023      	str	r3, [r4, #0]
 8005f92:	e78d      	b.n	8005eb0 <_strtod_l+0x488>
 8005f94:	08009135 	.word	0x08009135
 8005f98:	0800935c 	.word	0x0800935c
 8005f9c:	0800912d 	.word	0x0800912d
 8005fa0:	08009164 	.word	0x08009164
 8005fa4:	7ff00000 	.word	0x7ff00000
 8005fa8:	080094ed 	.word	0x080094ed
 8005fac:	08009270 	.word	0x08009270
 8005fb0:	08009248 	.word	0x08009248
 8005fb4:	7ca00000 	.word	0x7ca00000
 8005fb8:	7fefffff 	.word	0x7fefffff
 8005fbc:	f015 0310 	ands.w	r3, r5, #16
 8005fc0:	bf18      	it	ne
 8005fc2:	236a      	movne	r3, #106	; 0x6a
 8005fc4:	4640      	mov	r0, r8
 8005fc6:	9305      	str	r3, [sp, #20]
 8005fc8:	4649      	mov	r1, r9
 8005fca:	2300      	movs	r3, #0
 8005fcc:	f8df a2c8 	ldr.w	sl, [pc, #712]	; 8006298 <_strtod_l+0x870>
 8005fd0:	07ea      	lsls	r2, r5, #31
 8005fd2:	d504      	bpl.n	8005fde <_strtod_l+0x5b6>
 8005fd4:	e9da 2300 	ldrd	r2, r3, [sl]
 8005fd8:	f7fa fa8e 	bl	80004f8 <__aeabi_dmul>
 8005fdc:	2301      	movs	r3, #1
 8005fde:	106d      	asrs	r5, r5, #1
 8005fe0:	f10a 0a08 	add.w	sl, sl, #8
 8005fe4:	d1f4      	bne.n	8005fd0 <_strtod_l+0x5a8>
 8005fe6:	b10b      	cbz	r3, 8005fec <_strtod_l+0x5c4>
 8005fe8:	4680      	mov	r8, r0
 8005fea:	4689      	mov	r9, r1
 8005fec:	9b05      	ldr	r3, [sp, #20]
 8005fee:	b1bb      	cbz	r3, 8006020 <_strtod_l+0x5f8>
 8005ff0:	f3c9 520a 	ubfx	r2, r9, #20, #11
 8005ff4:	f1c2 036b 	rsb	r3, r2, #107	; 0x6b
 8005ff8:	2b00      	cmp	r3, #0
 8005ffa:	4649      	mov	r1, r9
 8005ffc:	dd10      	ble.n	8006020 <_strtod_l+0x5f8>
 8005ffe:	2b1f      	cmp	r3, #31
 8006000:	f340 8128 	ble.w	8006254 <_strtod_l+0x82c>
 8006004:	2b34      	cmp	r3, #52	; 0x34
 8006006:	bfd8      	it	le
 8006008:	f04f 33ff 	movle.w	r3, #4294967295
 800600c:	f04f 0800 	mov.w	r8, #0
 8006010:	bfcf      	iteee	gt
 8006012:	f04f 795c 	movgt.w	r9, #57671680	; 0x3700000
 8006016:	f1c2 024b 	rsble	r2, r2, #75	; 0x4b
 800601a:	4093      	lslle	r3, r2
 800601c:	ea03 0901 	andle.w	r9, r3, r1
 8006020:	2200      	movs	r2, #0
 8006022:	2300      	movs	r3, #0
 8006024:	4640      	mov	r0, r8
 8006026:	4649      	mov	r1, r9
 8006028:	f7fa fcce 	bl	80009c8 <__aeabi_dcmpeq>
 800602c:	2800      	cmp	r0, #0
 800602e:	d1a6      	bne.n	8005f7e <_strtod_l+0x556>
 8006030:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8006032:	465a      	mov	r2, fp
 8006034:	9300      	str	r3, [sp, #0]
 8006036:	4620      	mov	r0, r4
 8006038:	4633      	mov	r3, r6
 800603a:	990b      	ldr	r1, [sp, #44]	; 0x2c
 800603c:	f7ff f8dc 	bl	80051f8 <__s2b>
 8006040:	900b      	str	r0, [sp, #44]	; 0x2c
 8006042:	2800      	cmp	r0, #0
 8006044:	f43f af2a 	beq.w	8005e9c <_strtod_l+0x474>
 8006048:	2600      	movs	r6, #0
 800604a:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800604c:	9b08      	ldr	r3, [sp, #32]
 800604e:	2a00      	cmp	r2, #0
 8006050:	eba3 0307 	sub.w	r3, r3, r7
 8006054:	bfa8      	it	ge
 8006056:	2300      	movge	r3, #0
 8006058:	46b3      	mov	fp, r6
 800605a:	9312      	str	r3, [sp, #72]	; 0x48
 800605c:	ea22 73e2 	bic.w	r3, r2, r2, asr #31
 8006060:	9316      	str	r3, [sp, #88]	; 0x58
 8006062:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8006064:	4620      	mov	r0, r4
 8006066:	6859      	ldr	r1, [r3, #4]
 8006068:	f7ff f81e 	bl	80050a8 <_Balloc>
 800606c:	9008      	str	r0, [sp, #32]
 800606e:	2800      	cmp	r0, #0
 8006070:	f43f af18 	beq.w	8005ea4 <_strtod_l+0x47c>
 8006074:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8006076:	300c      	adds	r0, #12
 8006078:	691a      	ldr	r2, [r3, #16]
 800607a:	f103 010c 	add.w	r1, r3, #12
 800607e:	3202      	adds	r2, #2
 8006080:	0092      	lsls	r2, r2, #2
 8006082:	f000 ff61 	bl	8006f48 <memcpy>
 8006086:	ab1c      	add	r3, sp, #112	; 0x70
 8006088:	9301      	str	r3, [sp, #4]
 800608a:	ab1b      	add	r3, sp, #108	; 0x6c
 800608c:	9300      	str	r3, [sp, #0]
 800608e:	4642      	mov	r2, r8
 8006090:	464b      	mov	r3, r9
 8006092:	4620      	mov	r0, r4
 8006094:	f8cd 8030 	str.w	r8, [sp, #48]	; 0x30
 8006098:	f8cd 903c 	str.w	r9, [sp, #60]	; 0x3c
 800609c:	f7ff fbd8 	bl	8005850 <__d2b>
 80060a0:	901a      	str	r0, [sp, #104]	; 0x68
 80060a2:	2800      	cmp	r0, #0
 80060a4:	f43f aefe 	beq.w	8005ea4 <_strtod_l+0x47c>
 80060a8:	2101      	movs	r1, #1
 80060aa:	4620      	mov	r0, r4
 80060ac:	f7ff f93c 	bl	8005328 <__i2b>
 80060b0:	4683      	mov	fp, r0
 80060b2:	2800      	cmp	r0, #0
 80060b4:	f43f aef6 	beq.w	8005ea4 <_strtod_l+0x47c>
 80060b8:	9f1b      	ldr	r7, [sp, #108]	; 0x6c
 80060ba:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 80060bc:	2f00      	cmp	r7, #0
 80060be:	bfab      	itete	ge
 80060c0:	9b12      	ldrge	r3, [sp, #72]	; 0x48
 80060c2:	9b16      	ldrlt	r3, [sp, #88]	; 0x58
 80060c4:	eb07 0a03 	addge.w	sl, r7, r3
 80060c8:	1bdd      	sublt	r5, r3, r7
 80060ca:	9b05      	ldr	r3, [sp, #20]
 80060cc:	bfa8      	it	ge
 80060ce:	9d16      	ldrge	r5, [sp, #88]	; 0x58
 80060d0:	eba7 0703 	sub.w	r7, r7, r3
 80060d4:	4417      	add	r7, r2
 80060d6:	4b71      	ldr	r3, [pc, #452]	; (800629c <_strtod_l+0x874>)
 80060d8:	f107 37ff 	add.w	r7, r7, #4294967295
 80060dc:	bfb8      	it	lt
 80060de:	f8dd a048 	ldrlt.w	sl, [sp, #72]	; 0x48
 80060e2:	429f      	cmp	r7, r3
 80060e4:	f1c2 0236 	rsb	r2, r2, #54	; 0x36
 80060e8:	f280 80c7 	bge.w	800627a <_strtod_l+0x852>
 80060ec:	1bdb      	subs	r3, r3, r7
 80060ee:	2b1f      	cmp	r3, #31
 80060f0:	f04f 0101 	mov.w	r1, #1
 80060f4:	eba2 0203 	sub.w	r2, r2, r3
 80060f8:	f300 80b3 	bgt.w	8006262 <_strtod_l+0x83a>
 80060fc:	fa01 f303 	lsl.w	r3, r1, r3
 8006100:	9313      	str	r3, [sp, #76]	; 0x4c
 8006102:	2300      	movs	r3, #0
 8006104:	9310      	str	r3, [sp, #64]	; 0x40
 8006106:	eb0a 0702 	add.w	r7, sl, r2
 800610a:	9b05      	ldr	r3, [sp, #20]
 800610c:	45ba      	cmp	sl, r7
 800610e:	4415      	add	r5, r2
 8006110:	441d      	add	r5, r3
 8006112:	4653      	mov	r3, sl
 8006114:	bfa8      	it	ge
 8006116:	463b      	movge	r3, r7
 8006118:	42ab      	cmp	r3, r5
 800611a:	bfa8      	it	ge
 800611c:	462b      	movge	r3, r5
 800611e:	2b00      	cmp	r3, #0
 8006120:	bfc2      	ittt	gt
 8006122:	1aff      	subgt	r7, r7, r3
 8006124:	1aed      	subgt	r5, r5, r3
 8006126:	ebaa 0a03 	subgt.w	sl, sl, r3
 800612a:	9b12      	ldr	r3, [sp, #72]	; 0x48
 800612c:	2b00      	cmp	r3, #0
 800612e:	dd17      	ble.n	8006160 <_strtod_l+0x738>
 8006130:	4659      	mov	r1, fp
 8006132:	461a      	mov	r2, r3
 8006134:	4620      	mov	r0, r4
 8006136:	f7ff f9b5 	bl	80054a4 <__pow5mult>
 800613a:	4683      	mov	fp, r0
 800613c:	2800      	cmp	r0, #0
 800613e:	f43f aeb1 	beq.w	8005ea4 <_strtod_l+0x47c>
 8006142:	4601      	mov	r1, r0
 8006144:	9a1a      	ldr	r2, [sp, #104]	; 0x68
 8006146:	4620      	mov	r0, r4
 8006148:	f7ff f904 	bl	8005354 <__multiply>
 800614c:	900a      	str	r0, [sp, #40]	; 0x28
 800614e:	2800      	cmp	r0, #0
 8006150:	f43f aea8 	beq.w	8005ea4 <_strtod_l+0x47c>
 8006154:	4620      	mov	r0, r4
 8006156:	991a      	ldr	r1, [sp, #104]	; 0x68
 8006158:	f7fe ffe6 	bl	8005128 <_Bfree>
 800615c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800615e:	931a      	str	r3, [sp, #104]	; 0x68
 8006160:	2f00      	cmp	r7, #0
 8006162:	f300 808f 	bgt.w	8006284 <_strtod_l+0x85c>
 8006166:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8006168:	2b00      	cmp	r3, #0
 800616a:	dd08      	ble.n	800617e <_strtod_l+0x756>
 800616c:	4620      	mov	r0, r4
 800616e:	9a16      	ldr	r2, [sp, #88]	; 0x58
 8006170:	9908      	ldr	r1, [sp, #32]
 8006172:	f7ff f997 	bl	80054a4 <__pow5mult>
 8006176:	9008      	str	r0, [sp, #32]
 8006178:	2800      	cmp	r0, #0
 800617a:	f43f ae93 	beq.w	8005ea4 <_strtod_l+0x47c>
 800617e:	2d00      	cmp	r5, #0
 8006180:	dd08      	ble.n	8006194 <_strtod_l+0x76c>
 8006182:	462a      	mov	r2, r5
 8006184:	4620      	mov	r0, r4
 8006186:	9908      	ldr	r1, [sp, #32]
 8006188:	f7ff f9e6 	bl	8005558 <__lshift>
 800618c:	9008      	str	r0, [sp, #32]
 800618e:	2800      	cmp	r0, #0
 8006190:	f43f ae88 	beq.w	8005ea4 <_strtod_l+0x47c>
 8006194:	f1ba 0f00 	cmp.w	sl, #0
 8006198:	dd08      	ble.n	80061ac <_strtod_l+0x784>
 800619a:	4659      	mov	r1, fp
 800619c:	4652      	mov	r2, sl
 800619e:	4620      	mov	r0, r4
 80061a0:	f7ff f9da 	bl	8005558 <__lshift>
 80061a4:	4683      	mov	fp, r0
 80061a6:	2800      	cmp	r0, #0
 80061a8:	f43f ae7c 	beq.w	8005ea4 <_strtod_l+0x47c>
 80061ac:	4620      	mov	r0, r4
 80061ae:	9a08      	ldr	r2, [sp, #32]
 80061b0:	991a      	ldr	r1, [sp, #104]	; 0x68
 80061b2:	f7ff fa59 	bl	8005668 <__mdiff>
 80061b6:	4606      	mov	r6, r0
 80061b8:	2800      	cmp	r0, #0
 80061ba:	f43f ae73 	beq.w	8005ea4 <_strtod_l+0x47c>
 80061be:	2500      	movs	r5, #0
 80061c0:	68c3      	ldr	r3, [r0, #12]
 80061c2:	4659      	mov	r1, fp
 80061c4:	60c5      	str	r5, [r0, #12]
 80061c6:	930a      	str	r3, [sp, #40]	; 0x28
 80061c8:	f7ff fa32 	bl	8005630 <__mcmp>
 80061cc:	42a8      	cmp	r0, r5
 80061ce:	da6b      	bge.n	80062a8 <_strtod_l+0x880>
 80061d0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80061d2:	ea53 0308 	orrs.w	r3, r3, r8
 80061d6:	f040 808f 	bne.w	80062f8 <_strtod_l+0x8d0>
 80061da:	f3c9 0313 	ubfx	r3, r9, #0, #20
 80061de:	2b00      	cmp	r3, #0
 80061e0:	f040 808a 	bne.w	80062f8 <_strtod_l+0x8d0>
 80061e4:	f029 4300 	bic.w	r3, r9, #2147483648	; 0x80000000
 80061e8:	0d1b      	lsrs	r3, r3, #20
 80061ea:	051b      	lsls	r3, r3, #20
 80061ec:	f1b3 6fd6 	cmp.w	r3, #112197632	; 0x6b00000
 80061f0:	f240 8082 	bls.w	80062f8 <_strtod_l+0x8d0>
 80061f4:	6973      	ldr	r3, [r6, #20]
 80061f6:	b913      	cbnz	r3, 80061fe <_strtod_l+0x7d6>
 80061f8:	6933      	ldr	r3, [r6, #16]
 80061fa:	2b01      	cmp	r3, #1
 80061fc:	dd7c      	ble.n	80062f8 <_strtod_l+0x8d0>
 80061fe:	4631      	mov	r1, r6
 8006200:	2201      	movs	r2, #1
 8006202:	4620      	mov	r0, r4
 8006204:	f7ff f9a8 	bl	8005558 <__lshift>
 8006208:	4659      	mov	r1, fp
 800620a:	4606      	mov	r6, r0
 800620c:	f7ff fa10 	bl	8005630 <__mcmp>
 8006210:	2800      	cmp	r0, #0
 8006212:	dd71      	ble.n	80062f8 <_strtod_l+0x8d0>
 8006214:	9905      	ldr	r1, [sp, #20]
 8006216:	464b      	mov	r3, r9
 8006218:	4a21      	ldr	r2, [pc, #132]	; (80062a0 <_strtod_l+0x878>)
 800621a:	2900      	cmp	r1, #0
 800621c:	f000 808d 	beq.w	800633a <_strtod_l+0x912>
 8006220:	ea02 0109 	and.w	r1, r2, r9
 8006224:	f1b1 6fd6 	cmp.w	r1, #112197632	; 0x6b00000
 8006228:	f300 8087 	bgt.w	800633a <_strtod_l+0x912>
 800622c:	f1b1 7f5c 	cmp.w	r1, #57671680	; 0x3700000
 8006230:	f77f aea9 	ble.w	8005f86 <_strtod_l+0x55e>
 8006234:	4640      	mov	r0, r8
 8006236:	4649      	mov	r1, r9
 8006238:	4b1a      	ldr	r3, [pc, #104]	; (80062a4 <_strtod_l+0x87c>)
 800623a:	2200      	movs	r2, #0
 800623c:	f7fa f95c 	bl	80004f8 <__aeabi_dmul>
 8006240:	4b17      	ldr	r3, [pc, #92]	; (80062a0 <_strtod_l+0x878>)
 8006242:	4680      	mov	r8, r0
 8006244:	400b      	ands	r3, r1
 8006246:	4689      	mov	r9, r1
 8006248:	2b00      	cmp	r3, #0
 800624a:	f47f ae35 	bne.w	8005eb8 <_strtod_l+0x490>
 800624e:	2322      	movs	r3, #34	; 0x22
 8006250:	6023      	str	r3, [r4, #0]
 8006252:	e631      	b.n	8005eb8 <_strtod_l+0x490>
 8006254:	f04f 32ff 	mov.w	r2, #4294967295
 8006258:	fa02 f303 	lsl.w	r3, r2, r3
 800625c:	ea03 0808 	and.w	r8, r3, r8
 8006260:	e6de      	b.n	8006020 <_strtod_l+0x5f8>
 8006262:	f1c7 477f 	rsb	r7, r7, #4278190080	; 0xff000000
 8006266:	f507 077f 	add.w	r7, r7, #16711680	; 0xff0000
 800626a:	f507 477b 	add.w	r7, r7, #64256	; 0xfb00
 800626e:	37e2      	adds	r7, #226	; 0xe2
 8006270:	fa01 f307 	lsl.w	r3, r1, r7
 8006274:	9310      	str	r3, [sp, #64]	; 0x40
 8006276:	9113      	str	r1, [sp, #76]	; 0x4c
 8006278:	e745      	b.n	8006106 <_strtod_l+0x6de>
 800627a:	2300      	movs	r3, #0
 800627c:	9310      	str	r3, [sp, #64]	; 0x40
 800627e:	2301      	movs	r3, #1
 8006280:	9313      	str	r3, [sp, #76]	; 0x4c
 8006282:	e740      	b.n	8006106 <_strtod_l+0x6de>
 8006284:	463a      	mov	r2, r7
 8006286:	4620      	mov	r0, r4
 8006288:	991a      	ldr	r1, [sp, #104]	; 0x68
 800628a:	f7ff f965 	bl	8005558 <__lshift>
 800628e:	901a      	str	r0, [sp, #104]	; 0x68
 8006290:	2800      	cmp	r0, #0
 8006292:	f47f af68 	bne.w	8006166 <_strtod_l+0x73e>
 8006296:	e605      	b.n	8005ea4 <_strtod_l+0x47c>
 8006298:	08009370 	.word	0x08009370
 800629c:	fffffc02 	.word	0xfffffc02
 80062a0:	7ff00000 	.word	0x7ff00000
 80062a4:	39500000 	.word	0x39500000
 80062a8:	46ca      	mov	sl, r9
 80062aa:	d165      	bne.n	8006378 <_strtod_l+0x950>
 80062ac:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80062ae:	f3c9 0313 	ubfx	r3, r9, #0, #20
 80062b2:	b352      	cbz	r2, 800630a <_strtod_l+0x8e2>
 80062b4:	4a9e      	ldr	r2, [pc, #632]	; (8006530 <_strtod_l+0xb08>)
 80062b6:	4293      	cmp	r3, r2
 80062b8:	d12a      	bne.n	8006310 <_strtod_l+0x8e8>
 80062ba:	9b05      	ldr	r3, [sp, #20]
 80062bc:	4641      	mov	r1, r8
 80062be:	b1fb      	cbz	r3, 8006300 <_strtod_l+0x8d8>
 80062c0:	4b9c      	ldr	r3, [pc, #624]	; (8006534 <_strtod_l+0xb0c>)
 80062c2:	f04f 32ff 	mov.w	r2, #4294967295
 80062c6:	ea09 0303 	and.w	r3, r9, r3
 80062ca:	f1b3 6fd4 	cmp.w	r3, #111149056	; 0x6a00000
 80062ce:	d81a      	bhi.n	8006306 <_strtod_l+0x8de>
 80062d0:	0d1b      	lsrs	r3, r3, #20
 80062d2:	f1c3 036b 	rsb	r3, r3, #107	; 0x6b
 80062d6:	fa02 f303 	lsl.w	r3, r2, r3
 80062da:	4299      	cmp	r1, r3
 80062dc:	d118      	bne.n	8006310 <_strtod_l+0x8e8>
 80062de:	4b96      	ldr	r3, [pc, #600]	; (8006538 <_strtod_l+0xb10>)
 80062e0:	459a      	cmp	sl, r3
 80062e2:	d102      	bne.n	80062ea <_strtod_l+0x8c2>
 80062e4:	3101      	adds	r1, #1
 80062e6:	f43f addd 	beq.w	8005ea4 <_strtod_l+0x47c>
 80062ea:	f04f 0800 	mov.w	r8, #0
 80062ee:	4b91      	ldr	r3, [pc, #580]	; (8006534 <_strtod_l+0xb0c>)
 80062f0:	ea0a 0303 	and.w	r3, sl, r3
 80062f4:	f503 1980 	add.w	r9, r3, #1048576	; 0x100000
 80062f8:	9b05      	ldr	r3, [sp, #20]
 80062fa:	2b00      	cmp	r3, #0
 80062fc:	d19a      	bne.n	8006234 <_strtod_l+0x80c>
 80062fe:	e5db      	b.n	8005eb8 <_strtod_l+0x490>
 8006300:	f04f 33ff 	mov.w	r3, #4294967295
 8006304:	e7e9      	b.n	80062da <_strtod_l+0x8b2>
 8006306:	4613      	mov	r3, r2
 8006308:	e7e7      	b.n	80062da <_strtod_l+0x8b2>
 800630a:	ea53 0308 	orrs.w	r3, r3, r8
 800630e:	d081      	beq.n	8006214 <_strtod_l+0x7ec>
 8006310:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8006312:	b1e3      	cbz	r3, 800634e <_strtod_l+0x926>
 8006314:	ea13 0f0a 	tst.w	r3, sl
 8006318:	d0ee      	beq.n	80062f8 <_strtod_l+0x8d0>
 800631a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800631c:	4640      	mov	r0, r8
 800631e:	4649      	mov	r1, r9
 8006320:	9a05      	ldr	r2, [sp, #20]
 8006322:	b1c3      	cbz	r3, 8006356 <_strtod_l+0x92e>
 8006324:	f7ff fb5c 	bl	80059e0 <sulp>
 8006328:	4602      	mov	r2, r0
 800632a:	460b      	mov	r3, r1
 800632c:	980c      	ldr	r0, [sp, #48]	; 0x30
 800632e:	990f      	ldr	r1, [sp, #60]	; 0x3c
 8006330:	f7f9 ff2c 	bl	800018c <__adddf3>
 8006334:	4680      	mov	r8, r0
 8006336:	4689      	mov	r9, r1
 8006338:	e7de      	b.n	80062f8 <_strtod_l+0x8d0>
 800633a:	4013      	ands	r3, r2
 800633c:	f5a3 1380 	sub.w	r3, r3, #1048576	; 0x100000
 8006340:	ea6f 5913 	mvn.w	r9, r3, lsr #20
 8006344:	f04f 38ff 	mov.w	r8, #4294967295
 8006348:	ea6f 5909 	mvn.w	r9, r9, lsl #20
 800634c:	e7d4      	b.n	80062f8 <_strtod_l+0x8d0>
 800634e:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8006350:	ea13 0f08 	tst.w	r3, r8
 8006354:	e7e0      	b.n	8006318 <_strtod_l+0x8f0>
 8006356:	f7ff fb43 	bl	80059e0 <sulp>
 800635a:	4602      	mov	r2, r0
 800635c:	460b      	mov	r3, r1
 800635e:	980c      	ldr	r0, [sp, #48]	; 0x30
 8006360:	990f      	ldr	r1, [sp, #60]	; 0x3c
 8006362:	f7f9 ff11 	bl	8000188 <__aeabi_dsub>
 8006366:	2200      	movs	r2, #0
 8006368:	2300      	movs	r3, #0
 800636a:	4680      	mov	r8, r0
 800636c:	4689      	mov	r9, r1
 800636e:	f7fa fb2b 	bl	80009c8 <__aeabi_dcmpeq>
 8006372:	2800      	cmp	r0, #0
 8006374:	d0c0      	beq.n	80062f8 <_strtod_l+0x8d0>
 8006376:	e606      	b.n	8005f86 <_strtod_l+0x55e>
 8006378:	4659      	mov	r1, fp
 800637a:	4630      	mov	r0, r6
 800637c:	f7ff fabe 	bl	80058fc <__ratio>
 8006380:	4602      	mov	r2, r0
 8006382:	460b      	mov	r3, r1
 8006384:	e9cd 2310 	strd	r2, r3, [sp, #64]	; 0x40
 8006388:	2200      	movs	r2, #0
 800638a:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 800638e:	f7fa fb2f 	bl	80009f0 <__aeabi_dcmple>
 8006392:	2800      	cmp	r0, #0
 8006394:	d06f      	beq.n	8006476 <_strtod_l+0xa4e>
 8006396:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8006398:	2b00      	cmp	r3, #0
 800639a:	d17c      	bne.n	8006496 <_strtod_l+0xa6e>
 800639c:	f1b8 0f00 	cmp.w	r8, #0
 80063a0:	d159      	bne.n	8006456 <_strtod_l+0xa2e>
 80063a2:	f3c9 0313 	ubfx	r3, r9, #0, #20
 80063a6:	2b00      	cmp	r3, #0
 80063a8:	d17b      	bne.n	80064a2 <_strtod_l+0xa7a>
 80063aa:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
 80063ae:	2200      	movs	r2, #0
 80063b0:	4b62      	ldr	r3, [pc, #392]	; (800653c <_strtod_l+0xb14>)
 80063b2:	f7fa fb13 	bl	80009dc <__aeabi_dcmplt>
 80063b6:	2800      	cmp	r0, #0
 80063b8:	d15a      	bne.n	8006470 <_strtod_l+0xa48>
 80063ba:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
 80063be:	2200      	movs	r2, #0
 80063c0:	4b5f      	ldr	r3, [pc, #380]	; (8006540 <_strtod_l+0xb18>)
 80063c2:	f7fa f899 	bl	80004f8 <__aeabi_dmul>
 80063c6:	4605      	mov	r5, r0
 80063c8:	460f      	mov	r7, r1
 80063ca:	f107 4300 	add.w	r3, r7, #2147483648	; 0x80000000
 80063ce:	9506      	str	r5, [sp, #24]
 80063d0:	9307      	str	r3, [sp, #28]
 80063d2:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 80063d6:	e9cd 2310 	strd	r2, r3, [sp, #64]	; 0x40
 80063da:	4b56      	ldr	r3, [pc, #344]	; (8006534 <_strtod_l+0xb0c>)
 80063dc:	4a55      	ldr	r2, [pc, #340]	; (8006534 <_strtod_l+0xb0c>)
 80063de:	ea0a 0303 	and.w	r3, sl, r3
 80063e2:	9313      	str	r3, [sp, #76]	; 0x4c
 80063e4:	4b57      	ldr	r3, [pc, #348]	; (8006544 <_strtod_l+0xb1c>)
 80063e6:	ea0a 0202 	and.w	r2, sl, r2
 80063ea:	429a      	cmp	r2, r3
 80063ec:	f040 80b0 	bne.w	8006550 <_strtod_l+0xb28>
 80063f0:	f1aa 7954 	sub.w	r9, sl, #55574528	; 0x3500000
 80063f4:	4640      	mov	r0, r8
 80063f6:	4649      	mov	r1, r9
 80063f8:	f7ff f9c2 	bl	8005780 <__ulp>
 80063fc:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 8006400:	f7fa f87a 	bl	80004f8 <__aeabi_dmul>
 8006404:	4642      	mov	r2, r8
 8006406:	464b      	mov	r3, r9
 8006408:	f7f9 fec0 	bl	800018c <__adddf3>
 800640c:	f8df a124 	ldr.w	sl, [pc, #292]	; 8006534 <_strtod_l+0xb0c>
 8006410:	4a4d      	ldr	r2, [pc, #308]	; (8006548 <_strtod_l+0xb20>)
 8006412:	ea01 0a0a 	and.w	sl, r1, sl
 8006416:	4592      	cmp	sl, r2
 8006418:	4680      	mov	r8, r0
 800641a:	d948      	bls.n	80064ae <_strtod_l+0xa86>
 800641c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 800641e:	4b46      	ldr	r3, [pc, #280]	; (8006538 <_strtod_l+0xb10>)
 8006420:	429a      	cmp	r2, r3
 8006422:	d103      	bne.n	800642c <_strtod_l+0xa04>
 8006424:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8006426:	3301      	adds	r3, #1
 8006428:	f43f ad3c 	beq.w	8005ea4 <_strtod_l+0x47c>
 800642c:	f04f 38ff 	mov.w	r8, #4294967295
 8006430:	f8df 9104 	ldr.w	r9, [pc, #260]	; 8006538 <_strtod_l+0xb10>
 8006434:	4620      	mov	r0, r4
 8006436:	991a      	ldr	r1, [sp, #104]	; 0x68
 8006438:	f7fe fe76 	bl	8005128 <_Bfree>
 800643c:	4620      	mov	r0, r4
 800643e:	9908      	ldr	r1, [sp, #32]
 8006440:	f7fe fe72 	bl	8005128 <_Bfree>
 8006444:	4659      	mov	r1, fp
 8006446:	4620      	mov	r0, r4
 8006448:	f7fe fe6e 	bl	8005128 <_Bfree>
 800644c:	4631      	mov	r1, r6
 800644e:	4620      	mov	r0, r4
 8006450:	f7fe fe6a 	bl	8005128 <_Bfree>
 8006454:	e605      	b.n	8006062 <_strtod_l+0x63a>
 8006456:	f1b8 0f01 	cmp.w	r8, #1
 800645a:	d103      	bne.n	8006464 <_strtod_l+0xa3c>
 800645c:	f1b9 0f00 	cmp.w	r9, #0
 8006460:	f43f ad91 	beq.w	8005f86 <_strtod_l+0x55e>
 8006464:	2200      	movs	r2, #0
 8006466:	4b39      	ldr	r3, [pc, #228]	; (800654c <_strtod_l+0xb24>)
 8006468:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 800646a:	e9cd 2306 	strd	r2, r3, [sp, #24]
 800646e:	e016      	b.n	800649e <_strtod_l+0xa76>
 8006470:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 8006472:	4f33      	ldr	r7, [pc, #204]	; (8006540 <_strtod_l+0xb18>)
 8006474:	e7a9      	b.n	80063ca <_strtod_l+0x9a2>
 8006476:	4b32      	ldr	r3, [pc, #200]	; (8006540 <_strtod_l+0xb18>)
 8006478:	2200      	movs	r2, #0
 800647a:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
 800647e:	f7fa f83b 	bl	80004f8 <__aeabi_dmul>
 8006482:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8006484:	4605      	mov	r5, r0
 8006486:	460f      	mov	r7, r1
 8006488:	2b00      	cmp	r3, #0
 800648a:	d09e      	beq.n	80063ca <_strtod_l+0x9a2>
 800648c:	4602      	mov	r2, r0
 800648e:	460b      	mov	r3, r1
 8006490:	e9cd 2306 	strd	r2, r3, [sp, #24]
 8006494:	e79d      	b.n	80063d2 <_strtod_l+0x9aa>
 8006496:	2200      	movs	r2, #0
 8006498:	4b28      	ldr	r3, [pc, #160]	; (800653c <_strtod_l+0xb14>)
 800649a:	e9cd 2306 	strd	r2, r3, [sp, #24]
 800649e:	4f27      	ldr	r7, [pc, #156]	; (800653c <_strtod_l+0xb14>)
 80064a0:	e797      	b.n	80063d2 <_strtod_l+0x9aa>
 80064a2:	2200      	movs	r2, #0
 80064a4:	4b29      	ldr	r3, [pc, #164]	; (800654c <_strtod_l+0xb24>)
 80064a6:	4645      	mov	r5, r8
 80064a8:	e9cd 2306 	strd	r2, r3, [sp, #24]
 80064ac:	e7f7      	b.n	800649e <_strtod_l+0xa76>
 80064ae:	f101 7954 	add.w	r9, r1, #55574528	; 0x3500000
 80064b2:	9b05      	ldr	r3, [sp, #20]
 80064b4:	46ca      	mov	sl, r9
 80064b6:	2b00      	cmp	r3, #0
 80064b8:	d1bc      	bne.n	8006434 <_strtod_l+0xa0c>
 80064ba:	f029 4300 	bic.w	r3, r9, #2147483648	; 0x80000000
 80064be:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 80064c0:	0d1b      	lsrs	r3, r3, #20
 80064c2:	051b      	lsls	r3, r3, #20
 80064c4:	429a      	cmp	r2, r3
 80064c6:	d1b5      	bne.n	8006434 <_strtod_l+0xa0c>
 80064c8:	4628      	mov	r0, r5
 80064ca:	4639      	mov	r1, r7
 80064cc:	f7fa fdba 	bl	8001044 <__aeabi_d2lz>
 80064d0:	f7f9 ffe4 	bl	800049c <__aeabi_l2d>
 80064d4:	4602      	mov	r2, r0
 80064d6:	460b      	mov	r3, r1
 80064d8:	4628      	mov	r0, r5
 80064da:	4639      	mov	r1, r7
 80064dc:	f7f9 fe54 	bl	8000188 <__aeabi_dsub>
 80064e0:	460b      	mov	r3, r1
 80064e2:	4602      	mov	r2, r0
 80064e4:	f3c9 0a13 	ubfx	sl, r9, #0, #20
 80064e8:	e9cd 230c 	strd	r2, r3, [sp, #48]	; 0x30
 80064ec:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80064ee:	ea4a 0a08 	orr.w	sl, sl, r8
 80064f2:	ea5a 0a03 	orrs.w	sl, sl, r3
 80064f6:	d06c      	beq.n	80065d2 <_strtod_l+0xbaa>
 80064f8:	a309      	add	r3, pc, #36	; (adr r3, 8006520 <_strtod_l+0xaf8>)
 80064fa:	e9d3 2300 	ldrd	r2, r3, [r3]
 80064fe:	f7fa fa6d 	bl	80009dc <__aeabi_dcmplt>
 8006502:	2800      	cmp	r0, #0
 8006504:	f47f acd8 	bne.w	8005eb8 <_strtod_l+0x490>
 8006508:	a307      	add	r3, pc, #28	; (adr r3, 8006528 <_strtod_l+0xb00>)
 800650a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800650e:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	; 0x30
 8006512:	f7fa fa81 	bl	8000a18 <__aeabi_dcmpgt>
 8006516:	2800      	cmp	r0, #0
 8006518:	d08c      	beq.n	8006434 <_strtod_l+0xa0c>
 800651a:	e4cd      	b.n	8005eb8 <_strtod_l+0x490>
 800651c:	f3af 8000 	nop.w
 8006520:	94a03595 	.word	0x94a03595
 8006524:	3fdfffff 	.word	0x3fdfffff
 8006528:	35afe535 	.word	0x35afe535
 800652c:	3fe00000 	.word	0x3fe00000
 8006530:	000fffff 	.word	0x000fffff
 8006534:	7ff00000 	.word	0x7ff00000
 8006538:	7fefffff 	.word	0x7fefffff
 800653c:	3ff00000 	.word	0x3ff00000
 8006540:	3fe00000 	.word	0x3fe00000
 8006544:	7fe00000 	.word	0x7fe00000
 8006548:	7c9fffff 	.word	0x7c9fffff
 800654c:	bff00000 	.word	0xbff00000
 8006550:	9b05      	ldr	r3, [sp, #20]
 8006552:	b333      	cbz	r3, 80065a2 <_strtod_l+0xb7a>
 8006554:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8006556:	f1b3 6fd4 	cmp.w	r3, #111149056	; 0x6a00000
 800655a:	d822      	bhi.n	80065a2 <_strtod_l+0xb7a>
 800655c:	a328      	add	r3, pc, #160	; (adr r3, 8006600 <_strtod_l+0xbd8>)
 800655e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8006562:	4628      	mov	r0, r5
 8006564:	4639      	mov	r1, r7
 8006566:	f7fa fa43 	bl	80009f0 <__aeabi_dcmple>
 800656a:	b1a0      	cbz	r0, 8006596 <_strtod_l+0xb6e>
 800656c:	4639      	mov	r1, r7
 800656e:	4628      	mov	r0, r5
 8006570:	f7fa fa9a 	bl	8000aa8 <__aeabi_d2uiz>
 8006574:	2801      	cmp	r0, #1
 8006576:	bf38      	it	cc
 8006578:	2001      	movcc	r0, #1
 800657a:	f7f9 ff43 	bl	8000404 <__aeabi_ui2d>
 800657e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8006580:	4605      	mov	r5, r0
 8006582:	460f      	mov	r7, r1
 8006584:	bb03      	cbnz	r3, 80065c8 <_strtod_l+0xba0>
 8006586:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 800658a:	9014      	str	r0, [sp, #80]	; 0x50
 800658c:	9315      	str	r3, [sp, #84]	; 0x54
 800658e:	e9dd 2314 	ldrd	r2, r3, [sp, #80]	; 0x50
 8006592:	e9cd 2310 	strd	r2, r3, [sp, #64]	; 0x40
 8006596:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8006598:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 800659a:	f103 63d6 	add.w	r3, r3, #112197632	; 0x6b00000
 800659e:	1a9b      	subs	r3, r3, r2
 80065a0:	9311      	str	r3, [sp, #68]	; 0x44
 80065a2:	980c      	ldr	r0, [sp, #48]	; 0x30
 80065a4:	990f      	ldr	r1, [sp, #60]	; 0x3c
 80065a6:	e9dd 8910 	ldrd	r8, r9, [sp, #64]	; 0x40
 80065aa:	f7ff f8e9 	bl	8005780 <__ulp>
 80065ae:	4602      	mov	r2, r0
 80065b0:	460b      	mov	r3, r1
 80065b2:	4640      	mov	r0, r8
 80065b4:	4649      	mov	r1, r9
 80065b6:	f7f9 ff9f 	bl	80004f8 <__aeabi_dmul>
 80065ba:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 80065bc:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80065be:	f7f9 fde5 	bl	800018c <__adddf3>
 80065c2:	4680      	mov	r8, r0
 80065c4:	4689      	mov	r9, r1
 80065c6:	e774      	b.n	80064b2 <_strtod_l+0xa8a>
 80065c8:	4602      	mov	r2, r0
 80065ca:	460b      	mov	r3, r1
 80065cc:	e9cd 2314 	strd	r2, r3, [sp, #80]	; 0x50
 80065d0:	e7dd      	b.n	800658e <_strtod_l+0xb66>
 80065d2:	a30d      	add	r3, pc, #52	; (adr r3, 8006608 <_strtod_l+0xbe0>)
 80065d4:	e9d3 2300 	ldrd	r2, r3, [r3]
 80065d8:	f7fa fa00 	bl	80009dc <__aeabi_dcmplt>
 80065dc:	e79b      	b.n	8006516 <_strtod_l+0xaee>
 80065de:	2300      	movs	r3, #0
 80065e0:	930e      	str	r3, [sp, #56]	; 0x38
 80065e2:	9b19      	ldr	r3, [sp, #100]	; 0x64
 80065e4:	9a17      	ldr	r2, [sp, #92]	; 0x5c
 80065e6:	6013      	str	r3, [r2, #0]
 80065e8:	f7ff ba5b 	b.w	8005aa2 <_strtod_l+0x7a>
 80065ec:	2a65      	cmp	r2, #101	; 0x65
 80065ee:	f43f ab52 	beq.w	8005c96 <_strtod_l+0x26e>
 80065f2:	2a45      	cmp	r2, #69	; 0x45
 80065f4:	f43f ab4f 	beq.w	8005c96 <_strtod_l+0x26e>
 80065f8:	2301      	movs	r3, #1
 80065fa:	f7ff bb87 	b.w	8005d0c <_strtod_l+0x2e4>
 80065fe:	bf00      	nop
 8006600:	ffc00000 	.word	0xffc00000
 8006604:	41dfffff 	.word	0x41dfffff
 8006608:	94a03595 	.word	0x94a03595
 800660c:	3fcfffff 	.word	0x3fcfffff

08006610 <_strtod_r>:
 8006610:	4b01      	ldr	r3, [pc, #4]	; (8006618 <_strtod_r+0x8>)
 8006612:	f7ff ba09 	b.w	8005a28 <_strtod_l>
 8006616:	bf00      	nop
 8006618:	20000080 	.word	0x20000080

0800661c <_strtol_l.constprop.0>:
 800661c:	2b01      	cmp	r3, #1
 800661e:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8006622:	4686      	mov	lr, r0
 8006624:	4690      	mov	r8, r2
 8006626:	d001      	beq.n	800662c <_strtol_l.constprop.0+0x10>
 8006628:	2b24      	cmp	r3, #36	; 0x24
 800662a:	d906      	bls.n	800663a <_strtol_l.constprop.0+0x1e>
 800662c:	f7fd fd90 	bl	8004150 <__errno>
 8006630:	2316      	movs	r3, #22
 8006632:	6003      	str	r3, [r0, #0]
 8006634:	2000      	movs	r0, #0
 8006636:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800663a:	460d      	mov	r5, r1
 800663c:	4835      	ldr	r0, [pc, #212]	; (8006714 <_strtol_l.constprop.0+0xf8>)
 800663e:	462a      	mov	r2, r5
 8006640:	f815 4b01 	ldrb.w	r4, [r5], #1
 8006644:	5d06      	ldrb	r6, [r0, r4]
 8006646:	f016 0608 	ands.w	r6, r6, #8
 800664a:	d1f8      	bne.n	800663e <_strtol_l.constprop.0+0x22>
 800664c:	2c2d      	cmp	r4, #45	; 0x2d
 800664e:	d12e      	bne.n	80066ae <_strtol_l.constprop.0+0x92>
 8006650:	2601      	movs	r6, #1
 8006652:	782c      	ldrb	r4, [r5, #0]
 8006654:	1c95      	adds	r5, r2, #2
 8006656:	2b00      	cmp	r3, #0
 8006658:	d057      	beq.n	800670a <_strtol_l.constprop.0+0xee>
 800665a:	2b10      	cmp	r3, #16
 800665c:	d109      	bne.n	8006672 <_strtol_l.constprop.0+0x56>
 800665e:	2c30      	cmp	r4, #48	; 0x30
 8006660:	d107      	bne.n	8006672 <_strtol_l.constprop.0+0x56>
 8006662:	782a      	ldrb	r2, [r5, #0]
 8006664:	f002 02df 	and.w	r2, r2, #223	; 0xdf
 8006668:	2a58      	cmp	r2, #88	; 0x58
 800666a:	d149      	bne.n	8006700 <_strtol_l.constprop.0+0xe4>
 800666c:	2310      	movs	r3, #16
 800666e:	786c      	ldrb	r4, [r5, #1]
 8006670:	3502      	adds	r5, #2
 8006672:	2200      	movs	r2, #0
 8006674:	f106 4c00 	add.w	ip, r6, #2147483648	; 0x80000000
 8006678:	f10c 3cff 	add.w	ip, ip, #4294967295
 800667c:	fbbc f9f3 	udiv	r9, ip, r3
 8006680:	4610      	mov	r0, r2
 8006682:	fb03 ca19 	mls	sl, r3, r9, ip
 8006686:	f1a4 0730 	sub.w	r7, r4, #48	; 0x30
 800668a:	2f09      	cmp	r7, #9
 800668c:	d814      	bhi.n	80066b8 <_strtol_l.constprop.0+0x9c>
 800668e:	463c      	mov	r4, r7
 8006690:	42a3      	cmp	r3, r4
 8006692:	dd20      	ble.n	80066d6 <_strtol_l.constprop.0+0xba>
 8006694:	1c57      	adds	r7, r2, #1
 8006696:	d007      	beq.n	80066a8 <_strtol_l.constprop.0+0x8c>
 8006698:	4581      	cmp	r9, r0
 800669a:	d319      	bcc.n	80066d0 <_strtol_l.constprop.0+0xb4>
 800669c:	d101      	bne.n	80066a2 <_strtol_l.constprop.0+0x86>
 800669e:	45a2      	cmp	sl, r4
 80066a0:	db16      	blt.n	80066d0 <_strtol_l.constprop.0+0xb4>
 80066a2:	2201      	movs	r2, #1
 80066a4:	fb00 4003 	mla	r0, r0, r3, r4
 80066a8:	f815 4b01 	ldrb.w	r4, [r5], #1
 80066ac:	e7eb      	b.n	8006686 <_strtol_l.constprop.0+0x6a>
 80066ae:	2c2b      	cmp	r4, #43	; 0x2b
 80066b0:	bf04      	itt	eq
 80066b2:	782c      	ldrbeq	r4, [r5, #0]
 80066b4:	1c95      	addeq	r5, r2, #2
 80066b6:	e7ce      	b.n	8006656 <_strtol_l.constprop.0+0x3a>
 80066b8:	f1a4 0741 	sub.w	r7, r4, #65	; 0x41
 80066bc:	2f19      	cmp	r7, #25
 80066be:	d801      	bhi.n	80066c4 <_strtol_l.constprop.0+0xa8>
 80066c0:	3c37      	subs	r4, #55	; 0x37
 80066c2:	e7e5      	b.n	8006690 <_strtol_l.constprop.0+0x74>
 80066c4:	f1a4 0761 	sub.w	r7, r4, #97	; 0x61
 80066c8:	2f19      	cmp	r7, #25
 80066ca:	d804      	bhi.n	80066d6 <_strtol_l.constprop.0+0xba>
 80066cc:	3c57      	subs	r4, #87	; 0x57
 80066ce:	e7df      	b.n	8006690 <_strtol_l.constprop.0+0x74>
 80066d0:	f04f 32ff 	mov.w	r2, #4294967295
 80066d4:	e7e8      	b.n	80066a8 <_strtol_l.constprop.0+0x8c>
 80066d6:	1c53      	adds	r3, r2, #1
 80066d8:	d108      	bne.n	80066ec <_strtol_l.constprop.0+0xd0>
 80066da:	2322      	movs	r3, #34	; 0x22
 80066dc:	4660      	mov	r0, ip
 80066de:	f8ce 3000 	str.w	r3, [lr]
 80066e2:	f1b8 0f00 	cmp.w	r8, #0
 80066e6:	d0a6      	beq.n	8006636 <_strtol_l.constprop.0+0x1a>
 80066e8:	1e69      	subs	r1, r5, #1
 80066ea:	e006      	b.n	80066fa <_strtol_l.constprop.0+0xde>
 80066ec:	b106      	cbz	r6, 80066f0 <_strtol_l.constprop.0+0xd4>
 80066ee:	4240      	negs	r0, r0
 80066f0:	f1b8 0f00 	cmp.w	r8, #0
 80066f4:	d09f      	beq.n	8006636 <_strtol_l.constprop.0+0x1a>
 80066f6:	2a00      	cmp	r2, #0
 80066f8:	d1f6      	bne.n	80066e8 <_strtol_l.constprop.0+0xcc>
 80066fa:	f8c8 1000 	str.w	r1, [r8]
 80066fe:	e79a      	b.n	8006636 <_strtol_l.constprop.0+0x1a>
 8006700:	2430      	movs	r4, #48	; 0x30
 8006702:	2b00      	cmp	r3, #0
 8006704:	d1b5      	bne.n	8006672 <_strtol_l.constprop.0+0x56>
 8006706:	2308      	movs	r3, #8
 8006708:	e7b3      	b.n	8006672 <_strtol_l.constprop.0+0x56>
 800670a:	2c30      	cmp	r4, #48	; 0x30
 800670c:	d0a9      	beq.n	8006662 <_strtol_l.constprop.0+0x46>
 800670e:	230a      	movs	r3, #10
 8006710:	e7af      	b.n	8006672 <_strtol_l.constprop.0+0x56>
 8006712:	bf00      	nop
 8006714:	08009399 	.word	0x08009399

08006718 <_strtol_r>:
 8006718:	f7ff bf80 	b.w	800661c <_strtol_l.constprop.0>

0800671c <__ssputs_r>:
 800671c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8006720:	461f      	mov	r7, r3
 8006722:	688e      	ldr	r6, [r1, #8]
 8006724:	4682      	mov	sl, r0
 8006726:	42be      	cmp	r6, r7
 8006728:	460c      	mov	r4, r1
 800672a:	4690      	mov	r8, r2
 800672c:	680b      	ldr	r3, [r1, #0]
 800672e:	d82c      	bhi.n	800678a <__ssputs_r+0x6e>
 8006730:	898a      	ldrh	r2, [r1, #12]
 8006732:	f412 6f90 	tst.w	r2, #1152	; 0x480
 8006736:	d026      	beq.n	8006786 <__ssputs_r+0x6a>
 8006738:	6965      	ldr	r5, [r4, #20]
 800673a:	6909      	ldr	r1, [r1, #16]
 800673c:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8006740:	eba3 0901 	sub.w	r9, r3, r1
 8006744:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
 8006748:	1c7b      	adds	r3, r7, #1
 800674a:	444b      	add	r3, r9
 800674c:	106d      	asrs	r5, r5, #1
 800674e:	429d      	cmp	r5, r3
 8006750:	bf38      	it	cc
 8006752:	461d      	movcc	r5, r3
 8006754:	0553      	lsls	r3, r2, #21
 8006756:	d527      	bpl.n	80067a8 <__ssputs_r+0x8c>
 8006758:	4629      	mov	r1, r5
 800675a:	f7fe fc19 	bl	8004f90 <_malloc_r>
 800675e:	4606      	mov	r6, r0
 8006760:	b360      	cbz	r0, 80067bc <__ssputs_r+0xa0>
 8006762:	464a      	mov	r2, r9
 8006764:	6921      	ldr	r1, [r4, #16]
 8006766:	f000 fbef 	bl	8006f48 <memcpy>
 800676a:	89a3      	ldrh	r3, [r4, #12]
 800676c:	f423 6390 	bic.w	r3, r3, #1152	; 0x480
 8006770:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8006774:	81a3      	strh	r3, [r4, #12]
 8006776:	6126      	str	r6, [r4, #16]
 8006778:	444e      	add	r6, r9
 800677a:	6026      	str	r6, [r4, #0]
 800677c:	463e      	mov	r6, r7
 800677e:	6165      	str	r5, [r4, #20]
 8006780:	eba5 0509 	sub.w	r5, r5, r9
 8006784:	60a5      	str	r5, [r4, #8]
 8006786:	42be      	cmp	r6, r7
 8006788:	d900      	bls.n	800678c <__ssputs_r+0x70>
 800678a:	463e      	mov	r6, r7
 800678c:	4632      	mov	r2, r6
 800678e:	4641      	mov	r1, r8
 8006790:	6820      	ldr	r0, [r4, #0]
 8006792:	f000 fb9d 	bl	8006ed0 <memmove>
 8006796:	2000      	movs	r0, #0
 8006798:	68a3      	ldr	r3, [r4, #8]
 800679a:	1b9b      	subs	r3, r3, r6
 800679c:	60a3      	str	r3, [r4, #8]
 800679e:	6823      	ldr	r3, [r4, #0]
 80067a0:	4433      	add	r3, r6
 80067a2:	6023      	str	r3, [r4, #0]
 80067a4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80067a8:	462a      	mov	r2, r5
 80067aa:	f000 ff7e 	bl	80076aa <_realloc_r>
 80067ae:	4606      	mov	r6, r0
 80067b0:	2800      	cmp	r0, #0
 80067b2:	d1e0      	bne.n	8006776 <__ssputs_r+0x5a>
 80067b4:	4650      	mov	r0, sl
 80067b6:	6921      	ldr	r1, [r4, #16]
 80067b8:	f7fe fb7a 	bl	8004eb0 <_free_r>
 80067bc:	230c      	movs	r3, #12
 80067be:	f8ca 3000 	str.w	r3, [sl]
 80067c2:	89a3      	ldrh	r3, [r4, #12]
 80067c4:	f04f 30ff 	mov.w	r0, #4294967295
 80067c8:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80067cc:	81a3      	strh	r3, [r4, #12]
 80067ce:	e7e9      	b.n	80067a4 <__ssputs_r+0x88>

080067d0 <_svfiprintf_r>:
 80067d0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80067d4:	4698      	mov	r8, r3
 80067d6:	898b      	ldrh	r3, [r1, #12]
 80067d8:	4607      	mov	r7, r0
 80067da:	061b      	lsls	r3, r3, #24
 80067dc:	460d      	mov	r5, r1
 80067de:	4614      	mov	r4, r2
 80067e0:	b09d      	sub	sp, #116	; 0x74
 80067e2:	d50e      	bpl.n	8006802 <_svfiprintf_r+0x32>
 80067e4:	690b      	ldr	r3, [r1, #16]
 80067e6:	b963      	cbnz	r3, 8006802 <_svfiprintf_r+0x32>
 80067e8:	2140      	movs	r1, #64	; 0x40
 80067ea:	f7fe fbd1 	bl	8004f90 <_malloc_r>
 80067ee:	6028      	str	r0, [r5, #0]
 80067f0:	6128      	str	r0, [r5, #16]
 80067f2:	b920      	cbnz	r0, 80067fe <_svfiprintf_r+0x2e>
 80067f4:	230c      	movs	r3, #12
 80067f6:	603b      	str	r3, [r7, #0]
 80067f8:	f04f 30ff 	mov.w	r0, #4294967295
 80067fc:	e0d0      	b.n	80069a0 <_svfiprintf_r+0x1d0>
 80067fe:	2340      	movs	r3, #64	; 0x40
 8006800:	616b      	str	r3, [r5, #20]
 8006802:	2300      	movs	r3, #0
 8006804:	9309      	str	r3, [sp, #36]	; 0x24
 8006806:	2320      	movs	r3, #32
 8006808:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 800680c:	2330      	movs	r3, #48	; 0x30
 800680e:	f04f 0901 	mov.w	r9, #1
 8006812:	f8cd 800c 	str.w	r8, [sp, #12]
 8006816:	f8df 81a0 	ldr.w	r8, [pc, #416]	; 80069b8 <_svfiprintf_r+0x1e8>
 800681a:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 800681e:	4623      	mov	r3, r4
 8006820:	469a      	mov	sl, r3
 8006822:	f813 2b01 	ldrb.w	r2, [r3], #1
 8006826:	b10a      	cbz	r2, 800682c <_svfiprintf_r+0x5c>
 8006828:	2a25      	cmp	r2, #37	; 0x25
 800682a:	d1f9      	bne.n	8006820 <_svfiprintf_r+0x50>
 800682c:	ebba 0b04 	subs.w	fp, sl, r4
 8006830:	d00b      	beq.n	800684a <_svfiprintf_r+0x7a>
 8006832:	465b      	mov	r3, fp
 8006834:	4622      	mov	r2, r4
 8006836:	4629      	mov	r1, r5
 8006838:	4638      	mov	r0, r7
 800683a:	f7ff ff6f 	bl	800671c <__ssputs_r>
 800683e:	3001      	adds	r0, #1
 8006840:	f000 80a9 	beq.w	8006996 <_svfiprintf_r+0x1c6>
 8006844:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8006846:	445a      	add	r2, fp
 8006848:	9209      	str	r2, [sp, #36]	; 0x24
 800684a:	f89a 3000 	ldrb.w	r3, [sl]
 800684e:	2b00      	cmp	r3, #0
 8006850:	f000 80a1 	beq.w	8006996 <_svfiprintf_r+0x1c6>
 8006854:	2300      	movs	r3, #0
 8006856:	f04f 32ff 	mov.w	r2, #4294967295
 800685a:	e9cd 2305 	strd	r2, r3, [sp, #20]
 800685e:	f10a 0a01 	add.w	sl, sl, #1
 8006862:	9304      	str	r3, [sp, #16]
 8006864:	9307      	str	r3, [sp, #28]
 8006866:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 800686a:	931a      	str	r3, [sp, #104]	; 0x68
 800686c:	4654      	mov	r4, sl
 800686e:	2205      	movs	r2, #5
 8006870:	f814 1b01 	ldrb.w	r1, [r4], #1
 8006874:	4850      	ldr	r0, [pc, #320]	; (80069b8 <_svfiprintf_r+0x1e8>)
 8006876:	f7fd fc98 	bl	80041aa <memchr>
 800687a:	9a04      	ldr	r2, [sp, #16]
 800687c:	b9d8      	cbnz	r0, 80068b6 <_svfiprintf_r+0xe6>
 800687e:	06d0      	lsls	r0, r2, #27
 8006880:	bf44      	itt	mi
 8006882:	2320      	movmi	r3, #32
 8006884:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8006888:	0711      	lsls	r1, r2, #28
 800688a:	bf44      	itt	mi
 800688c:	232b      	movmi	r3, #43	; 0x2b
 800688e:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8006892:	f89a 3000 	ldrb.w	r3, [sl]
 8006896:	2b2a      	cmp	r3, #42	; 0x2a
 8006898:	d015      	beq.n	80068c6 <_svfiprintf_r+0xf6>
 800689a:	4654      	mov	r4, sl
 800689c:	2000      	movs	r0, #0
 800689e:	f04f 0c0a 	mov.w	ip, #10
 80068a2:	9a07      	ldr	r2, [sp, #28]
 80068a4:	4621      	mov	r1, r4
 80068a6:	f811 3b01 	ldrb.w	r3, [r1], #1
 80068aa:	3b30      	subs	r3, #48	; 0x30
 80068ac:	2b09      	cmp	r3, #9
 80068ae:	d94d      	bls.n	800694c <_svfiprintf_r+0x17c>
 80068b0:	b1b0      	cbz	r0, 80068e0 <_svfiprintf_r+0x110>
 80068b2:	9207      	str	r2, [sp, #28]
 80068b4:	e014      	b.n	80068e0 <_svfiprintf_r+0x110>
 80068b6:	eba0 0308 	sub.w	r3, r0, r8
 80068ba:	fa09 f303 	lsl.w	r3, r9, r3
 80068be:	4313      	orrs	r3, r2
 80068c0:	46a2      	mov	sl, r4
 80068c2:	9304      	str	r3, [sp, #16]
 80068c4:	e7d2      	b.n	800686c <_svfiprintf_r+0x9c>
 80068c6:	9b03      	ldr	r3, [sp, #12]
 80068c8:	1d19      	adds	r1, r3, #4
 80068ca:	681b      	ldr	r3, [r3, #0]
 80068cc:	9103      	str	r1, [sp, #12]
 80068ce:	2b00      	cmp	r3, #0
 80068d0:	bfbb      	ittet	lt
 80068d2:	425b      	neglt	r3, r3
 80068d4:	f042 0202 	orrlt.w	r2, r2, #2
 80068d8:	9307      	strge	r3, [sp, #28]
 80068da:	9307      	strlt	r3, [sp, #28]
 80068dc:	bfb8      	it	lt
 80068de:	9204      	strlt	r2, [sp, #16]
 80068e0:	7823      	ldrb	r3, [r4, #0]
 80068e2:	2b2e      	cmp	r3, #46	; 0x2e
 80068e4:	d10c      	bne.n	8006900 <_svfiprintf_r+0x130>
 80068e6:	7863      	ldrb	r3, [r4, #1]
 80068e8:	2b2a      	cmp	r3, #42	; 0x2a
 80068ea:	d134      	bne.n	8006956 <_svfiprintf_r+0x186>
 80068ec:	9b03      	ldr	r3, [sp, #12]
 80068ee:	3402      	adds	r4, #2
 80068f0:	1d1a      	adds	r2, r3, #4
 80068f2:	681b      	ldr	r3, [r3, #0]
 80068f4:	9203      	str	r2, [sp, #12]
 80068f6:	2b00      	cmp	r3, #0
 80068f8:	bfb8      	it	lt
 80068fa:	f04f 33ff 	movlt.w	r3, #4294967295
 80068fe:	9305      	str	r3, [sp, #20]
 8006900:	f8df a0b8 	ldr.w	sl, [pc, #184]	; 80069bc <_svfiprintf_r+0x1ec>
 8006904:	2203      	movs	r2, #3
 8006906:	4650      	mov	r0, sl
 8006908:	7821      	ldrb	r1, [r4, #0]
 800690a:	f7fd fc4e 	bl	80041aa <memchr>
 800690e:	b138      	cbz	r0, 8006920 <_svfiprintf_r+0x150>
 8006910:	2240      	movs	r2, #64	; 0x40
 8006912:	9b04      	ldr	r3, [sp, #16]
 8006914:	eba0 000a 	sub.w	r0, r0, sl
 8006918:	4082      	lsls	r2, r0
 800691a:	4313      	orrs	r3, r2
 800691c:	3401      	adds	r4, #1
 800691e:	9304      	str	r3, [sp, #16]
 8006920:	f814 1b01 	ldrb.w	r1, [r4], #1
 8006924:	2206      	movs	r2, #6
 8006926:	4826      	ldr	r0, [pc, #152]	; (80069c0 <_svfiprintf_r+0x1f0>)
 8006928:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 800692c:	f7fd fc3d 	bl	80041aa <memchr>
 8006930:	2800      	cmp	r0, #0
 8006932:	d038      	beq.n	80069a6 <_svfiprintf_r+0x1d6>
 8006934:	4b23      	ldr	r3, [pc, #140]	; (80069c4 <_svfiprintf_r+0x1f4>)
 8006936:	bb1b      	cbnz	r3, 8006980 <_svfiprintf_r+0x1b0>
 8006938:	9b03      	ldr	r3, [sp, #12]
 800693a:	3307      	adds	r3, #7
 800693c:	f023 0307 	bic.w	r3, r3, #7
 8006940:	3308      	adds	r3, #8
 8006942:	9303      	str	r3, [sp, #12]
 8006944:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8006946:	4433      	add	r3, r6
 8006948:	9309      	str	r3, [sp, #36]	; 0x24
 800694a:	e768      	b.n	800681e <_svfiprintf_r+0x4e>
 800694c:	460c      	mov	r4, r1
 800694e:	2001      	movs	r0, #1
 8006950:	fb0c 3202 	mla	r2, ip, r2, r3
 8006954:	e7a6      	b.n	80068a4 <_svfiprintf_r+0xd4>
 8006956:	2300      	movs	r3, #0
 8006958:	f04f 0c0a 	mov.w	ip, #10
 800695c:	4619      	mov	r1, r3
 800695e:	3401      	adds	r4, #1
 8006960:	9305      	str	r3, [sp, #20]
 8006962:	4620      	mov	r0, r4
 8006964:	f810 2b01 	ldrb.w	r2, [r0], #1
 8006968:	3a30      	subs	r2, #48	; 0x30
 800696a:	2a09      	cmp	r2, #9
 800696c:	d903      	bls.n	8006976 <_svfiprintf_r+0x1a6>
 800696e:	2b00      	cmp	r3, #0
 8006970:	d0c6      	beq.n	8006900 <_svfiprintf_r+0x130>
 8006972:	9105      	str	r1, [sp, #20]
 8006974:	e7c4      	b.n	8006900 <_svfiprintf_r+0x130>
 8006976:	4604      	mov	r4, r0
 8006978:	2301      	movs	r3, #1
 800697a:	fb0c 2101 	mla	r1, ip, r1, r2
 800697e:	e7f0      	b.n	8006962 <_svfiprintf_r+0x192>
 8006980:	ab03      	add	r3, sp, #12
 8006982:	9300      	str	r3, [sp, #0]
 8006984:	462a      	mov	r2, r5
 8006986:	4638      	mov	r0, r7
 8006988:	4b0f      	ldr	r3, [pc, #60]	; (80069c8 <_svfiprintf_r+0x1f8>)
 800698a:	a904      	add	r1, sp, #16
 800698c:	f7fc fc52 	bl	8003234 <_printf_float>
 8006990:	1c42      	adds	r2, r0, #1
 8006992:	4606      	mov	r6, r0
 8006994:	d1d6      	bne.n	8006944 <_svfiprintf_r+0x174>
 8006996:	89ab      	ldrh	r3, [r5, #12]
 8006998:	065b      	lsls	r3, r3, #25
 800699a:	f53f af2d 	bmi.w	80067f8 <_svfiprintf_r+0x28>
 800699e:	9809      	ldr	r0, [sp, #36]	; 0x24
 80069a0:	b01d      	add	sp, #116	; 0x74
 80069a2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80069a6:	ab03      	add	r3, sp, #12
 80069a8:	9300      	str	r3, [sp, #0]
 80069aa:	462a      	mov	r2, r5
 80069ac:	4638      	mov	r0, r7
 80069ae:	4b06      	ldr	r3, [pc, #24]	; (80069c8 <_svfiprintf_r+0x1f8>)
 80069b0:	a904      	add	r1, sp, #16
 80069b2:	f7fc fedf 	bl	8003774 <_printf_i>
 80069b6:	e7eb      	b.n	8006990 <_svfiprintf_r+0x1c0>
 80069b8:	08009499 	.word	0x08009499
 80069bc:	0800949f 	.word	0x0800949f
 80069c0:	080094a3 	.word	0x080094a3
 80069c4:	08003235 	.word	0x08003235
 80069c8:	0800671d 	.word	0x0800671d

080069cc <__sfputc_r>:
 80069cc:	6893      	ldr	r3, [r2, #8]
 80069ce:	b410      	push	{r4}
 80069d0:	3b01      	subs	r3, #1
 80069d2:	2b00      	cmp	r3, #0
 80069d4:	6093      	str	r3, [r2, #8]
 80069d6:	da07      	bge.n	80069e8 <__sfputc_r+0x1c>
 80069d8:	6994      	ldr	r4, [r2, #24]
 80069da:	42a3      	cmp	r3, r4
 80069dc:	db01      	blt.n	80069e2 <__sfputc_r+0x16>
 80069de:	290a      	cmp	r1, #10
 80069e0:	d102      	bne.n	80069e8 <__sfputc_r+0x1c>
 80069e2:	bc10      	pop	{r4}
 80069e4:	f000 b9de 	b.w	8006da4 <__swbuf_r>
 80069e8:	6813      	ldr	r3, [r2, #0]
 80069ea:	1c58      	adds	r0, r3, #1
 80069ec:	6010      	str	r0, [r2, #0]
 80069ee:	7019      	strb	r1, [r3, #0]
 80069f0:	4608      	mov	r0, r1
 80069f2:	bc10      	pop	{r4}
 80069f4:	4770      	bx	lr

080069f6 <__sfputs_r>:
 80069f6:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80069f8:	4606      	mov	r6, r0
 80069fa:	460f      	mov	r7, r1
 80069fc:	4614      	mov	r4, r2
 80069fe:	18d5      	adds	r5, r2, r3
 8006a00:	42ac      	cmp	r4, r5
 8006a02:	d101      	bne.n	8006a08 <__sfputs_r+0x12>
 8006a04:	2000      	movs	r0, #0
 8006a06:	e007      	b.n	8006a18 <__sfputs_r+0x22>
 8006a08:	463a      	mov	r2, r7
 8006a0a:	4630      	mov	r0, r6
 8006a0c:	f814 1b01 	ldrb.w	r1, [r4], #1
 8006a10:	f7ff ffdc 	bl	80069cc <__sfputc_r>
 8006a14:	1c43      	adds	r3, r0, #1
 8006a16:	d1f3      	bne.n	8006a00 <__sfputs_r+0xa>
 8006a18:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08006a1c <_vfiprintf_r>:
 8006a1c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8006a20:	460d      	mov	r5, r1
 8006a22:	4614      	mov	r4, r2
 8006a24:	4698      	mov	r8, r3
 8006a26:	4606      	mov	r6, r0
 8006a28:	b09d      	sub	sp, #116	; 0x74
 8006a2a:	b118      	cbz	r0, 8006a34 <_vfiprintf_r+0x18>
 8006a2c:	6a03      	ldr	r3, [r0, #32]
 8006a2e:	b90b      	cbnz	r3, 8006a34 <_vfiprintf_r+0x18>
 8006a30:	f7fd fa5c 	bl	8003eec <__sinit>
 8006a34:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8006a36:	07d9      	lsls	r1, r3, #31
 8006a38:	d405      	bmi.n	8006a46 <_vfiprintf_r+0x2a>
 8006a3a:	89ab      	ldrh	r3, [r5, #12]
 8006a3c:	059a      	lsls	r2, r3, #22
 8006a3e:	d402      	bmi.n	8006a46 <_vfiprintf_r+0x2a>
 8006a40:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8006a42:	f7fd fbb0 	bl	80041a6 <__retarget_lock_acquire_recursive>
 8006a46:	89ab      	ldrh	r3, [r5, #12]
 8006a48:	071b      	lsls	r3, r3, #28
 8006a4a:	d501      	bpl.n	8006a50 <_vfiprintf_r+0x34>
 8006a4c:	692b      	ldr	r3, [r5, #16]
 8006a4e:	b99b      	cbnz	r3, 8006a78 <_vfiprintf_r+0x5c>
 8006a50:	4629      	mov	r1, r5
 8006a52:	4630      	mov	r0, r6
 8006a54:	f000 f9e4 	bl	8006e20 <__swsetup_r>
 8006a58:	b170      	cbz	r0, 8006a78 <_vfiprintf_r+0x5c>
 8006a5a:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8006a5c:	07dc      	lsls	r4, r3, #31
 8006a5e:	d504      	bpl.n	8006a6a <_vfiprintf_r+0x4e>
 8006a60:	f04f 30ff 	mov.w	r0, #4294967295
 8006a64:	b01d      	add	sp, #116	; 0x74
 8006a66:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8006a6a:	89ab      	ldrh	r3, [r5, #12]
 8006a6c:	0598      	lsls	r0, r3, #22
 8006a6e:	d4f7      	bmi.n	8006a60 <_vfiprintf_r+0x44>
 8006a70:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8006a72:	f7fd fb99 	bl	80041a8 <__retarget_lock_release_recursive>
 8006a76:	e7f3      	b.n	8006a60 <_vfiprintf_r+0x44>
 8006a78:	2300      	movs	r3, #0
 8006a7a:	9309      	str	r3, [sp, #36]	; 0x24
 8006a7c:	2320      	movs	r3, #32
 8006a7e:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8006a82:	2330      	movs	r3, #48	; 0x30
 8006a84:	f04f 0901 	mov.w	r9, #1
 8006a88:	f8cd 800c 	str.w	r8, [sp, #12]
 8006a8c:	f8df 81ac 	ldr.w	r8, [pc, #428]	; 8006c3c <_vfiprintf_r+0x220>
 8006a90:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 8006a94:	4623      	mov	r3, r4
 8006a96:	469a      	mov	sl, r3
 8006a98:	f813 2b01 	ldrb.w	r2, [r3], #1
 8006a9c:	b10a      	cbz	r2, 8006aa2 <_vfiprintf_r+0x86>
 8006a9e:	2a25      	cmp	r2, #37	; 0x25
 8006aa0:	d1f9      	bne.n	8006a96 <_vfiprintf_r+0x7a>
 8006aa2:	ebba 0b04 	subs.w	fp, sl, r4
 8006aa6:	d00b      	beq.n	8006ac0 <_vfiprintf_r+0xa4>
 8006aa8:	465b      	mov	r3, fp
 8006aaa:	4622      	mov	r2, r4
 8006aac:	4629      	mov	r1, r5
 8006aae:	4630      	mov	r0, r6
 8006ab0:	f7ff ffa1 	bl	80069f6 <__sfputs_r>
 8006ab4:	3001      	adds	r0, #1
 8006ab6:	f000 80a9 	beq.w	8006c0c <_vfiprintf_r+0x1f0>
 8006aba:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8006abc:	445a      	add	r2, fp
 8006abe:	9209      	str	r2, [sp, #36]	; 0x24
 8006ac0:	f89a 3000 	ldrb.w	r3, [sl]
 8006ac4:	2b00      	cmp	r3, #0
 8006ac6:	f000 80a1 	beq.w	8006c0c <_vfiprintf_r+0x1f0>
 8006aca:	2300      	movs	r3, #0
 8006acc:	f04f 32ff 	mov.w	r2, #4294967295
 8006ad0:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8006ad4:	f10a 0a01 	add.w	sl, sl, #1
 8006ad8:	9304      	str	r3, [sp, #16]
 8006ada:	9307      	str	r3, [sp, #28]
 8006adc:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 8006ae0:	931a      	str	r3, [sp, #104]	; 0x68
 8006ae2:	4654      	mov	r4, sl
 8006ae4:	2205      	movs	r2, #5
 8006ae6:	f814 1b01 	ldrb.w	r1, [r4], #1
 8006aea:	4854      	ldr	r0, [pc, #336]	; (8006c3c <_vfiprintf_r+0x220>)
 8006aec:	f7fd fb5d 	bl	80041aa <memchr>
 8006af0:	9a04      	ldr	r2, [sp, #16]
 8006af2:	b9d8      	cbnz	r0, 8006b2c <_vfiprintf_r+0x110>
 8006af4:	06d1      	lsls	r1, r2, #27
 8006af6:	bf44      	itt	mi
 8006af8:	2320      	movmi	r3, #32
 8006afa:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8006afe:	0713      	lsls	r3, r2, #28
 8006b00:	bf44      	itt	mi
 8006b02:	232b      	movmi	r3, #43	; 0x2b
 8006b04:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8006b08:	f89a 3000 	ldrb.w	r3, [sl]
 8006b0c:	2b2a      	cmp	r3, #42	; 0x2a
 8006b0e:	d015      	beq.n	8006b3c <_vfiprintf_r+0x120>
 8006b10:	4654      	mov	r4, sl
 8006b12:	2000      	movs	r0, #0
 8006b14:	f04f 0c0a 	mov.w	ip, #10
 8006b18:	9a07      	ldr	r2, [sp, #28]
 8006b1a:	4621      	mov	r1, r4
 8006b1c:	f811 3b01 	ldrb.w	r3, [r1], #1
 8006b20:	3b30      	subs	r3, #48	; 0x30
 8006b22:	2b09      	cmp	r3, #9
 8006b24:	d94d      	bls.n	8006bc2 <_vfiprintf_r+0x1a6>
 8006b26:	b1b0      	cbz	r0, 8006b56 <_vfiprintf_r+0x13a>
 8006b28:	9207      	str	r2, [sp, #28]
 8006b2a:	e014      	b.n	8006b56 <_vfiprintf_r+0x13a>
 8006b2c:	eba0 0308 	sub.w	r3, r0, r8
 8006b30:	fa09 f303 	lsl.w	r3, r9, r3
 8006b34:	4313      	orrs	r3, r2
 8006b36:	46a2      	mov	sl, r4
 8006b38:	9304      	str	r3, [sp, #16]
 8006b3a:	e7d2      	b.n	8006ae2 <_vfiprintf_r+0xc6>
 8006b3c:	9b03      	ldr	r3, [sp, #12]
 8006b3e:	1d19      	adds	r1, r3, #4
 8006b40:	681b      	ldr	r3, [r3, #0]
 8006b42:	9103      	str	r1, [sp, #12]
 8006b44:	2b00      	cmp	r3, #0
 8006b46:	bfbb      	ittet	lt
 8006b48:	425b      	neglt	r3, r3
 8006b4a:	f042 0202 	orrlt.w	r2, r2, #2
 8006b4e:	9307      	strge	r3, [sp, #28]
 8006b50:	9307      	strlt	r3, [sp, #28]
 8006b52:	bfb8      	it	lt
 8006b54:	9204      	strlt	r2, [sp, #16]
 8006b56:	7823      	ldrb	r3, [r4, #0]
 8006b58:	2b2e      	cmp	r3, #46	; 0x2e
 8006b5a:	d10c      	bne.n	8006b76 <_vfiprintf_r+0x15a>
 8006b5c:	7863      	ldrb	r3, [r4, #1]
 8006b5e:	2b2a      	cmp	r3, #42	; 0x2a
 8006b60:	d134      	bne.n	8006bcc <_vfiprintf_r+0x1b0>
 8006b62:	9b03      	ldr	r3, [sp, #12]
 8006b64:	3402      	adds	r4, #2
 8006b66:	1d1a      	adds	r2, r3, #4
 8006b68:	681b      	ldr	r3, [r3, #0]
 8006b6a:	9203      	str	r2, [sp, #12]
 8006b6c:	2b00      	cmp	r3, #0
 8006b6e:	bfb8      	it	lt
 8006b70:	f04f 33ff 	movlt.w	r3, #4294967295
 8006b74:	9305      	str	r3, [sp, #20]
 8006b76:	f8df a0c8 	ldr.w	sl, [pc, #200]	; 8006c40 <_vfiprintf_r+0x224>
 8006b7a:	2203      	movs	r2, #3
 8006b7c:	4650      	mov	r0, sl
 8006b7e:	7821      	ldrb	r1, [r4, #0]
 8006b80:	f7fd fb13 	bl	80041aa <memchr>
 8006b84:	b138      	cbz	r0, 8006b96 <_vfiprintf_r+0x17a>
 8006b86:	2240      	movs	r2, #64	; 0x40
 8006b88:	9b04      	ldr	r3, [sp, #16]
 8006b8a:	eba0 000a 	sub.w	r0, r0, sl
 8006b8e:	4082      	lsls	r2, r0
 8006b90:	4313      	orrs	r3, r2
 8006b92:	3401      	adds	r4, #1
 8006b94:	9304      	str	r3, [sp, #16]
 8006b96:	f814 1b01 	ldrb.w	r1, [r4], #1
 8006b9a:	2206      	movs	r2, #6
 8006b9c:	4829      	ldr	r0, [pc, #164]	; (8006c44 <_vfiprintf_r+0x228>)
 8006b9e:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 8006ba2:	f7fd fb02 	bl	80041aa <memchr>
 8006ba6:	2800      	cmp	r0, #0
 8006ba8:	d03f      	beq.n	8006c2a <_vfiprintf_r+0x20e>
 8006baa:	4b27      	ldr	r3, [pc, #156]	; (8006c48 <_vfiprintf_r+0x22c>)
 8006bac:	bb1b      	cbnz	r3, 8006bf6 <_vfiprintf_r+0x1da>
 8006bae:	9b03      	ldr	r3, [sp, #12]
 8006bb0:	3307      	adds	r3, #7
 8006bb2:	f023 0307 	bic.w	r3, r3, #7
 8006bb6:	3308      	adds	r3, #8
 8006bb8:	9303      	str	r3, [sp, #12]
 8006bba:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8006bbc:	443b      	add	r3, r7
 8006bbe:	9309      	str	r3, [sp, #36]	; 0x24
 8006bc0:	e768      	b.n	8006a94 <_vfiprintf_r+0x78>
 8006bc2:	460c      	mov	r4, r1
 8006bc4:	2001      	movs	r0, #1
 8006bc6:	fb0c 3202 	mla	r2, ip, r2, r3
 8006bca:	e7a6      	b.n	8006b1a <_vfiprintf_r+0xfe>
 8006bcc:	2300      	movs	r3, #0
 8006bce:	f04f 0c0a 	mov.w	ip, #10
 8006bd2:	4619      	mov	r1, r3
 8006bd4:	3401      	adds	r4, #1
 8006bd6:	9305      	str	r3, [sp, #20]
 8006bd8:	4620      	mov	r0, r4
 8006bda:	f810 2b01 	ldrb.w	r2, [r0], #1
 8006bde:	3a30      	subs	r2, #48	; 0x30
 8006be0:	2a09      	cmp	r2, #9
 8006be2:	d903      	bls.n	8006bec <_vfiprintf_r+0x1d0>
 8006be4:	2b00      	cmp	r3, #0
 8006be6:	d0c6      	beq.n	8006b76 <_vfiprintf_r+0x15a>
 8006be8:	9105      	str	r1, [sp, #20]
 8006bea:	e7c4      	b.n	8006b76 <_vfiprintf_r+0x15a>
 8006bec:	4604      	mov	r4, r0
 8006bee:	2301      	movs	r3, #1
 8006bf0:	fb0c 2101 	mla	r1, ip, r1, r2
 8006bf4:	e7f0      	b.n	8006bd8 <_vfiprintf_r+0x1bc>
 8006bf6:	ab03      	add	r3, sp, #12
 8006bf8:	9300      	str	r3, [sp, #0]
 8006bfa:	462a      	mov	r2, r5
 8006bfc:	4630      	mov	r0, r6
 8006bfe:	4b13      	ldr	r3, [pc, #76]	; (8006c4c <_vfiprintf_r+0x230>)
 8006c00:	a904      	add	r1, sp, #16
 8006c02:	f7fc fb17 	bl	8003234 <_printf_float>
 8006c06:	4607      	mov	r7, r0
 8006c08:	1c78      	adds	r0, r7, #1
 8006c0a:	d1d6      	bne.n	8006bba <_vfiprintf_r+0x19e>
 8006c0c:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8006c0e:	07d9      	lsls	r1, r3, #31
 8006c10:	d405      	bmi.n	8006c1e <_vfiprintf_r+0x202>
 8006c12:	89ab      	ldrh	r3, [r5, #12]
 8006c14:	059a      	lsls	r2, r3, #22
 8006c16:	d402      	bmi.n	8006c1e <_vfiprintf_r+0x202>
 8006c18:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8006c1a:	f7fd fac5 	bl	80041a8 <__retarget_lock_release_recursive>
 8006c1e:	89ab      	ldrh	r3, [r5, #12]
 8006c20:	065b      	lsls	r3, r3, #25
 8006c22:	f53f af1d 	bmi.w	8006a60 <_vfiprintf_r+0x44>
 8006c26:	9809      	ldr	r0, [sp, #36]	; 0x24
 8006c28:	e71c      	b.n	8006a64 <_vfiprintf_r+0x48>
 8006c2a:	ab03      	add	r3, sp, #12
 8006c2c:	9300      	str	r3, [sp, #0]
 8006c2e:	462a      	mov	r2, r5
 8006c30:	4630      	mov	r0, r6
 8006c32:	4b06      	ldr	r3, [pc, #24]	; (8006c4c <_vfiprintf_r+0x230>)
 8006c34:	a904      	add	r1, sp, #16
 8006c36:	f7fc fd9d 	bl	8003774 <_printf_i>
 8006c3a:	e7e4      	b.n	8006c06 <_vfiprintf_r+0x1ea>
 8006c3c:	08009499 	.word	0x08009499
 8006c40:	0800949f 	.word	0x0800949f
 8006c44:	080094a3 	.word	0x080094a3
 8006c48:	08003235 	.word	0x08003235
 8006c4c:	080069f7 	.word	0x080069f7

08006c50 <__sflush_r>:
 8006c50:	898a      	ldrh	r2, [r1, #12]
 8006c52:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8006c54:	4605      	mov	r5, r0
 8006c56:	0710      	lsls	r0, r2, #28
 8006c58:	460c      	mov	r4, r1
 8006c5a:	d457      	bmi.n	8006d0c <__sflush_r+0xbc>
 8006c5c:	684b      	ldr	r3, [r1, #4]
 8006c5e:	2b00      	cmp	r3, #0
 8006c60:	dc04      	bgt.n	8006c6c <__sflush_r+0x1c>
 8006c62:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 8006c64:	2b00      	cmp	r3, #0
 8006c66:	dc01      	bgt.n	8006c6c <__sflush_r+0x1c>
 8006c68:	2000      	movs	r0, #0
 8006c6a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8006c6c:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8006c6e:	2e00      	cmp	r6, #0
 8006c70:	d0fa      	beq.n	8006c68 <__sflush_r+0x18>
 8006c72:	2300      	movs	r3, #0
 8006c74:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 8006c78:	682f      	ldr	r7, [r5, #0]
 8006c7a:	6a21      	ldr	r1, [r4, #32]
 8006c7c:	602b      	str	r3, [r5, #0]
 8006c7e:	d032      	beq.n	8006ce6 <__sflush_r+0x96>
 8006c80:	6d60      	ldr	r0, [r4, #84]	; 0x54
 8006c82:	89a3      	ldrh	r3, [r4, #12]
 8006c84:	075a      	lsls	r2, r3, #29
 8006c86:	d505      	bpl.n	8006c94 <__sflush_r+0x44>
 8006c88:	6863      	ldr	r3, [r4, #4]
 8006c8a:	1ac0      	subs	r0, r0, r3
 8006c8c:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8006c8e:	b10b      	cbz	r3, 8006c94 <__sflush_r+0x44>
 8006c90:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8006c92:	1ac0      	subs	r0, r0, r3
 8006c94:	2300      	movs	r3, #0
 8006c96:	4602      	mov	r2, r0
 8006c98:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8006c9a:	4628      	mov	r0, r5
 8006c9c:	6a21      	ldr	r1, [r4, #32]
 8006c9e:	47b0      	blx	r6
 8006ca0:	1c43      	adds	r3, r0, #1
 8006ca2:	89a3      	ldrh	r3, [r4, #12]
 8006ca4:	d106      	bne.n	8006cb4 <__sflush_r+0x64>
 8006ca6:	6829      	ldr	r1, [r5, #0]
 8006ca8:	291d      	cmp	r1, #29
 8006caa:	d82b      	bhi.n	8006d04 <__sflush_r+0xb4>
 8006cac:	4a28      	ldr	r2, [pc, #160]	; (8006d50 <__sflush_r+0x100>)
 8006cae:	410a      	asrs	r2, r1
 8006cb0:	07d6      	lsls	r6, r2, #31
 8006cb2:	d427      	bmi.n	8006d04 <__sflush_r+0xb4>
 8006cb4:	2200      	movs	r2, #0
 8006cb6:	6062      	str	r2, [r4, #4]
 8006cb8:	6922      	ldr	r2, [r4, #16]
 8006cba:	04d9      	lsls	r1, r3, #19
 8006cbc:	6022      	str	r2, [r4, #0]
 8006cbe:	d504      	bpl.n	8006cca <__sflush_r+0x7a>
 8006cc0:	1c42      	adds	r2, r0, #1
 8006cc2:	d101      	bne.n	8006cc8 <__sflush_r+0x78>
 8006cc4:	682b      	ldr	r3, [r5, #0]
 8006cc6:	b903      	cbnz	r3, 8006cca <__sflush_r+0x7a>
 8006cc8:	6560      	str	r0, [r4, #84]	; 0x54
 8006cca:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8006ccc:	602f      	str	r7, [r5, #0]
 8006cce:	2900      	cmp	r1, #0
 8006cd0:	d0ca      	beq.n	8006c68 <__sflush_r+0x18>
 8006cd2:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8006cd6:	4299      	cmp	r1, r3
 8006cd8:	d002      	beq.n	8006ce0 <__sflush_r+0x90>
 8006cda:	4628      	mov	r0, r5
 8006cdc:	f7fe f8e8 	bl	8004eb0 <_free_r>
 8006ce0:	2000      	movs	r0, #0
 8006ce2:	6360      	str	r0, [r4, #52]	; 0x34
 8006ce4:	e7c1      	b.n	8006c6a <__sflush_r+0x1a>
 8006ce6:	2301      	movs	r3, #1
 8006ce8:	4628      	mov	r0, r5
 8006cea:	47b0      	blx	r6
 8006cec:	1c41      	adds	r1, r0, #1
 8006cee:	d1c8      	bne.n	8006c82 <__sflush_r+0x32>
 8006cf0:	682b      	ldr	r3, [r5, #0]
 8006cf2:	2b00      	cmp	r3, #0
 8006cf4:	d0c5      	beq.n	8006c82 <__sflush_r+0x32>
 8006cf6:	2b1d      	cmp	r3, #29
 8006cf8:	d001      	beq.n	8006cfe <__sflush_r+0xae>
 8006cfa:	2b16      	cmp	r3, #22
 8006cfc:	d101      	bne.n	8006d02 <__sflush_r+0xb2>
 8006cfe:	602f      	str	r7, [r5, #0]
 8006d00:	e7b2      	b.n	8006c68 <__sflush_r+0x18>
 8006d02:	89a3      	ldrh	r3, [r4, #12]
 8006d04:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8006d08:	81a3      	strh	r3, [r4, #12]
 8006d0a:	e7ae      	b.n	8006c6a <__sflush_r+0x1a>
 8006d0c:	690f      	ldr	r7, [r1, #16]
 8006d0e:	2f00      	cmp	r7, #0
 8006d10:	d0aa      	beq.n	8006c68 <__sflush_r+0x18>
 8006d12:	0793      	lsls	r3, r2, #30
 8006d14:	bf18      	it	ne
 8006d16:	2300      	movne	r3, #0
 8006d18:	680e      	ldr	r6, [r1, #0]
 8006d1a:	bf08      	it	eq
 8006d1c:	694b      	ldreq	r3, [r1, #20]
 8006d1e:	1bf6      	subs	r6, r6, r7
 8006d20:	600f      	str	r7, [r1, #0]
 8006d22:	608b      	str	r3, [r1, #8]
 8006d24:	2e00      	cmp	r6, #0
 8006d26:	dd9f      	ble.n	8006c68 <__sflush_r+0x18>
 8006d28:	4633      	mov	r3, r6
 8006d2a:	463a      	mov	r2, r7
 8006d2c:	4628      	mov	r0, r5
 8006d2e:	6a21      	ldr	r1, [r4, #32]
 8006d30:	f8d4 c028 	ldr.w	ip, [r4, #40]	; 0x28
 8006d34:	47e0      	blx	ip
 8006d36:	2800      	cmp	r0, #0
 8006d38:	dc06      	bgt.n	8006d48 <__sflush_r+0xf8>
 8006d3a:	89a3      	ldrh	r3, [r4, #12]
 8006d3c:	f04f 30ff 	mov.w	r0, #4294967295
 8006d40:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8006d44:	81a3      	strh	r3, [r4, #12]
 8006d46:	e790      	b.n	8006c6a <__sflush_r+0x1a>
 8006d48:	4407      	add	r7, r0
 8006d4a:	1a36      	subs	r6, r6, r0
 8006d4c:	e7ea      	b.n	8006d24 <__sflush_r+0xd4>
 8006d4e:	bf00      	nop
 8006d50:	dfbffffe 	.word	0xdfbffffe

08006d54 <_fflush_r>:
 8006d54:	b538      	push	{r3, r4, r5, lr}
 8006d56:	690b      	ldr	r3, [r1, #16]
 8006d58:	4605      	mov	r5, r0
 8006d5a:	460c      	mov	r4, r1
 8006d5c:	b913      	cbnz	r3, 8006d64 <_fflush_r+0x10>
 8006d5e:	2500      	movs	r5, #0
 8006d60:	4628      	mov	r0, r5
 8006d62:	bd38      	pop	{r3, r4, r5, pc}
 8006d64:	b118      	cbz	r0, 8006d6e <_fflush_r+0x1a>
 8006d66:	6a03      	ldr	r3, [r0, #32]
 8006d68:	b90b      	cbnz	r3, 8006d6e <_fflush_r+0x1a>
 8006d6a:	f7fd f8bf 	bl	8003eec <__sinit>
 8006d6e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8006d72:	2b00      	cmp	r3, #0
 8006d74:	d0f3      	beq.n	8006d5e <_fflush_r+0xa>
 8006d76:	6e62      	ldr	r2, [r4, #100]	; 0x64
 8006d78:	07d0      	lsls	r0, r2, #31
 8006d7a:	d404      	bmi.n	8006d86 <_fflush_r+0x32>
 8006d7c:	0599      	lsls	r1, r3, #22
 8006d7e:	d402      	bmi.n	8006d86 <_fflush_r+0x32>
 8006d80:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8006d82:	f7fd fa10 	bl	80041a6 <__retarget_lock_acquire_recursive>
 8006d86:	4628      	mov	r0, r5
 8006d88:	4621      	mov	r1, r4
 8006d8a:	f7ff ff61 	bl	8006c50 <__sflush_r>
 8006d8e:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8006d90:	4605      	mov	r5, r0
 8006d92:	07da      	lsls	r2, r3, #31
 8006d94:	d4e4      	bmi.n	8006d60 <_fflush_r+0xc>
 8006d96:	89a3      	ldrh	r3, [r4, #12]
 8006d98:	059b      	lsls	r3, r3, #22
 8006d9a:	d4e1      	bmi.n	8006d60 <_fflush_r+0xc>
 8006d9c:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8006d9e:	f7fd fa03 	bl	80041a8 <__retarget_lock_release_recursive>
 8006da2:	e7dd      	b.n	8006d60 <_fflush_r+0xc>

08006da4 <__swbuf_r>:
 8006da4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8006da6:	460e      	mov	r6, r1
 8006da8:	4614      	mov	r4, r2
 8006daa:	4605      	mov	r5, r0
 8006dac:	b118      	cbz	r0, 8006db6 <__swbuf_r+0x12>
 8006dae:	6a03      	ldr	r3, [r0, #32]
 8006db0:	b90b      	cbnz	r3, 8006db6 <__swbuf_r+0x12>
 8006db2:	f7fd f89b 	bl	8003eec <__sinit>
 8006db6:	69a3      	ldr	r3, [r4, #24]
 8006db8:	60a3      	str	r3, [r4, #8]
 8006dba:	89a3      	ldrh	r3, [r4, #12]
 8006dbc:	071a      	lsls	r2, r3, #28
 8006dbe:	d525      	bpl.n	8006e0c <__swbuf_r+0x68>
 8006dc0:	6923      	ldr	r3, [r4, #16]
 8006dc2:	b31b      	cbz	r3, 8006e0c <__swbuf_r+0x68>
 8006dc4:	6823      	ldr	r3, [r4, #0]
 8006dc6:	6922      	ldr	r2, [r4, #16]
 8006dc8:	b2f6      	uxtb	r6, r6
 8006dca:	1a98      	subs	r0, r3, r2
 8006dcc:	6963      	ldr	r3, [r4, #20]
 8006dce:	4637      	mov	r7, r6
 8006dd0:	4283      	cmp	r3, r0
 8006dd2:	dc04      	bgt.n	8006dde <__swbuf_r+0x3a>
 8006dd4:	4621      	mov	r1, r4
 8006dd6:	4628      	mov	r0, r5
 8006dd8:	f7ff ffbc 	bl	8006d54 <_fflush_r>
 8006ddc:	b9e0      	cbnz	r0, 8006e18 <__swbuf_r+0x74>
 8006dde:	68a3      	ldr	r3, [r4, #8]
 8006de0:	3b01      	subs	r3, #1
 8006de2:	60a3      	str	r3, [r4, #8]
 8006de4:	6823      	ldr	r3, [r4, #0]
 8006de6:	1c5a      	adds	r2, r3, #1
 8006de8:	6022      	str	r2, [r4, #0]
 8006dea:	701e      	strb	r6, [r3, #0]
 8006dec:	6962      	ldr	r2, [r4, #20]
 8006dee:	1c43      	adds	r3, r0, #1
 8006df0:	429a      	cmp	r2, r3
 8006df2:	d004      	beq.n	8006dfe <__swbuf_r+0x5a>
 8006df4:	89a3      	ldrh	r3, [r4, #12]
 8006df6:	07db      	lsls	r3, r3, #31
 8006df8:	d506      	bpl.n	8006e08 <__swbuf_r+0x64>
 8006dfa:	2e0a      	cmp	r6, #10
 8006dfc:	d104      	bne.n	8006e08 <__swbuf_r+0x64>
 8006dfe:	4621      	mov	r1, r4
 8006e00:	4628      	mov	r0, r5
 8006e02:	f7ff ffa7 	bl	8006d54 <_fflush_r>
 8006e06:	b938      	cbnz	r0, 8006e18 <__swbuf_r+0x74>
 8006e08:	4638      	mov	r0, r7
 8006e0a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8006e0c:	4621      	mov	r1, r4
 8006e0e:	4628      	mov	r0, r5
 8006e10:	f000 f806 	bl	8006e20 <__swsetup_r>
 8006e14:	2800      	cmp	r0, #0
 8006e16:	d0d5      	beq.n	8006dc4 <__swbuf_r+0x20>
 8006e18:	f04f 37ff 	mov.w	r7, #4294967295
 8006e1c:	e7f4      	b.n	8006e08 <__swbuf_r+0x64>
	...

08006e20 <__swsetup_r>:
 8006e20:	b538      	push	{r3, r4, r5, lr}
 8006e22:	4b2a      	ldr	r3, [pc, #168]	; (8006ecc <__swsetup_r+0xac>)
 8006e24:	4605      	mov	r5, r0
 8006e26:	6818      	ldr	r0, [r3, #0]
 8006e28:	460c      	mov	r4, r1
 8006e2a:	b118      	cbz	r0, 8006e34 <__swsetup_r+0x14>
 8006e2c:	6a03      	ldr	r3, [r0, #32]
 8006e2e:	b90b      	cbnz	r3, 8006e34 <__swsetup_r+0x14>
 8006e30:	f7fd f85c 	bl	8003eec <__sinit>
 8006e34:	89a3      	ldrh	r3, [r4, #12]
 8006e36:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8006e3a:	0718      	lsls	r0, r3, #28
 8006e3c:	d422      	bmi.n	8006e84 <__swsetup_r+0x64>
 8006e3e:	06d9      	lsls	r1, r3, #27
 8006e40:	d407      	bmi.n	8006e52 <__swsetup_r+0x32>
 8006e42:	2309      	movs	r3, #9
 8006e44:	602b      	str	r3, [r5, #0]
 8006e46:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 8006e4a:	f04f 30ff 	mov.w	r0, #4294967295
 8006e4e:	81a3      	strh	r3, [r4, #12]
 8006e50:	e034      	b.n	8006ebc <__swsetup_r+0x9c>
 8006e52:	0758      	lsls	r0, r3, #29
 8006e54:	d512      	bpl.n	8006e7c <__swsetup_r+0x5c>
 8006e56:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8006e58:	b141      	cbz	r1, 8006e6c <__swsetup_r+0x4c>
 8006e5a:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8006e5e:	4299      	cmp	r1, r3
 8006e60:	d002      	beq.n	8006e68 <__swsetup_r+0x48>
 8006e62:	4628      	mov	r0, r5
 8006e64:	f7fe f824 	bl	8004eb0 <_free_r>
 8006e68:	2300      	movs	r3, #0
 8006e6a:	6363      	str	r3, [r4, #52]	; 0x34
 8006e6c:	89a3      	ldrh	r3, [r4, #12]
 8006e6e:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 8006e72:	81a3      	strh	r3, [r4, #12]
 8006e74:	2300      	movs	r3, #0
 8006e76:	6063      	str	r3, [r4, #4]
 8006e78:	6923      	ldr	r3, [r4, #16]
 8006e7a:	6023      	str	r3, [r4, #0]
 8006e7c:	89a3      	ldrh	r3, [r4, #12]
 8006e7e:	f043 0308 	orr.w	r3, r3, #8
 8006e82:	81a3      	strh	r3, [r4, #12]
 8006e84:	6923      	ldr	r3, [r4, #16]
 8006e86:	b94b      	cbnz	r3, 8006e9c <__swsetup_r+0x7c>
 8006e88:	89a3      	ldrh	r3, [r4, #12]
 8006e8a:	f403 7320 	and.w	r3, r3, #640	; 0x280
 8006e8e:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8006e92:	d003      	beq.n	8006e9c <__swsetup_r+0x7c>
 8006e94:	4621      	mov	r1, r4
 8006e96:	4628      	mov	r0, r5
 8006e98:	f000 fc7b 	bl	8007792 <__smakebuf_r>
 8006e9c:	89a0      	ldrh	r0, [r4, #12]
 8006e9e:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8006ea2:	f010 0301 	ands.w	r3, r0, #1
 8006ea6:	d00a      	beq.n	8006ebe <__swsetup_r+0x9e>
 8006ea8:	2300      	movs	r3, #0
 8006eaa:	60a3      	str	r3, [r4, #8]
 8006eac:	6963      	ldr	r3, [r4, #20]
 8006eae:	425b      	negs	r3, r3
 8006eb0:	61a3      	str	r3, [r4, #24]
 8006eb2:	6923      	ldr	r3, [r4, #16]
 8006eb4:	b943      	cbnz	r3, 8006ec8 <__swsetup_r+0xa8>
 8006eb6:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 8006eba:	d1c4      	bne.n	8006e46 <__swsetup_r+0x26>
 8006ebc:	bd38      	pop	{r3, r4, r5, pc}
 8006ebe:	0781      	lsls	r1, r0, #30
 8006ec0:	bf58      	it	pl
 8006ec2:	6963      	ldrpl	r3, [r4, #20]
 8006ec4:	60a3      	str	r3, [r4, #8]
 8006ec6:	e7f4      	b.n	8006eb2 <__swsetup_r+0x92>
 8006ec8:	2000      	movs	r0, #0
 8006eca:	e7f7      	b.n	8006ebc <__swsetup_r+0x9c>
 8006ecc:	2000007c 	.word	0x2000007c

08006ed0 <memmove>:
 8006ed0:	4288      	cmp	r0, r1
 8006ed2:	b510      	push	{r4, lr}
 8006ed4:	eb01 0402 	add.w	r4, r1, r2
 8006ed8:	d902      	bls.n	8006ee0 <memmove+0x10>
 8006eda:	4284      	cmp	r4, r0
 8006edc:	4623      	mov	r3, r4
 8006ede:	d807      	bhi.n	8006ef0 <memmove+0x20>
 8006ee0:	1e43      	subs	r3, r0, #1
 8006ee2:	42a1      	cmp	r1, r4
 8006ee4:	d008      	beq.n	8006ef8 <memmove+0x28>
 8006ee6:	f811 2b01 	ldrb.w	r2, [r1], #1
 8006eea:	f803 2f01 	strb.w	r2, [r3, #1]!
 8006eee:	e7f8      	b.n	8006ee2 <memmove+0x12>
 8006ef0:	4601      	mov	r1, r0
 8006ef2:	4402      	add	r2, r0
 8006ef4:	428a      	cmp	r2, r1
 8006ef6:	d100      	bne.n	8006efa <memmove+0x2a>
 8006ef8:	bd10      	pop	{r4, pc}
 8006efa:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 8006efe:	f802 4d01 	strb.w	r4, [r2, #-1]!
 8006f02:	e7f7      	b.n	8006ef4 <memmove+0x24>

08006f04 <strncmp>:
 8006f04:	b510      	push	{r4, lr}
 8006f06:	b16a      	cbz	r2, 8006f24 <strncmp+0x20>
 8006f08:	3901      	subs	r1, #1
 8006f0a:	1884      	adds	r4, r0, r2
 8006f0c:	f810 2b01 	ldrb.w	r2, [r0], #1
 8006f10:	f811 3f01 	ldrb.w	r3, [r1, #1]!
 8006f14:	429a      	cmp	r2, r3
 8006f16:	d103      	bne.n	8006f20 <strncmp+0x1c>
 8006f18:	42a0      	cmp	r0, r4
 8006f1a:	d001      	beq.n	8006f20 <strncmp+0x1c>
 8006f1c:	2a00      	cmp	r2, #0
 8006f1e:	d1f5      	bne.n	8006f0c <strncmp+0x8>
 8006f20:	1ad0      	subs	r0, r2, r3
 8006f22:	bd10      	pop	{r4, pc}
 8006f24:	4610      	mov	r0, r2
 8006f26:	e7fc      	b.n	8006f22 <strncmp+0x1e>

08006f28 <_sbrk_r>:
 8006f28:	b538      	push	{r3, r4, r5, lr}
 8006f2a:	2300      	movs	r3, #0
 8006f2c:	4d05      	ldr	r5, [pc, #20]	; (8006f44 <_sbrk_r+0x1c>)
 8006f2e:	4604      	mov	r4, r0
 8006f30:	4608      	mov	r0, r1
 8006f32:	602b      	str	r3, [r5, #0]
 8006f34:	f7fb ffd0 	bl	8002ed8 <_sbrk>
 8006f38:	1c43      	adds	r3, r0, #1
 8006f3a:	d102      	bne.n	8006f42 <_sbrk_r+0x1a>
 8006f3c:	682b      	ldr	r3, [r5, #0]
 8006f3e:	b103      	cbz	r3, 8006f42 <_sbrk_r+0x1a>
 8006f40:	6023      	str	r3, [r4, #0]
 8006f42:	bd38      	pop	{r3, r4, r5, pc}
 8006f44:	20000444 	.word	0x20000444

08006f48 <memcpy>:
 8006f48:	440a      	add	r2, r1
 8006f4a:	4291      	cmp	r1, r2
 8006f4c:	f100 33ff 	add.w	r3, r0, #4294967295
 8006f50:	d100      	bne.n	8006f54 <memcpy+0xc>
 8006f52:	4770      	bx	lr
 8006f54:	b510      	push	{r4, lr}
 8006f56:	f811 4b01 	ldrb.w	r4, [r1], #1
 8006f5a:	4291      	cmp	r1, r2
 8006f5c:	f803 4f01 	strb.w	r4, [r3, #1]!
 8006f60:	d1f9      	bne.n	8006f56 <memcpy+0xe>
 8006f62:	bd10      	pop	{r4, pc}

08006f64 <nan>:
 8006f64:	2000      	movs	r0, #0
 8006f66:	4901      	ldr	r1, [pc, #4]	; (8006f6c <nan+0x8>)
 8006f68:	4770      	bx	lr
 8006f6a:	bf00      	nop
 8006f6c:	7ff80000 	.word	0x7ff80000

08006f70 <__assert_func>:
 8006f70:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8006f72:	4614      	mov	r4, r2
 8006f74:	461a      	mov	r2, r3
 8006f76:	4b09      	ldr	r3, [pc, #36]	; (8006f9c <__assert_func+0x2c>)
 8006f78:	4605      	mov	r5, r0
 8006f7a:	681b      	ldr	r3, [r3, #0]
 8006f7c:	68d8      	ldr	r0, [r3, #12]
 8006f7e:	b14c      	cbz	r4, 8006f94 <__assert_func+0x24>
 8006f80:	4b07      	ldr	r3, [pc, #28]	; (8006fa0 <__assert_func+0x30>)
 8006f82:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8006f86:	9100      	str	r1, [sp, #0]
 8006f88:	462b      	mov	r3, r5
 8006f8a:	4906      	ldr	r1, [pc, #24]	; (8006fa4 <__assert_func+0x34>)
 8006f8c:	f000 fbca 	bl	8007724 <fiprintf>
 8006f90:	f000 fc5e 	bl	8007850 <abort>
 8006f94:	4b04      	ldr	r3, [pc, #16]	; (8006fa8 <__assert_func+0x38>)
 8006f96:	461c      	mov	r4, r3
 8006f98:	e7f3      	b.n	8006f82 <__assert_func+0x12>
 8006f9a:	bf00      	nop
 8006f9c:	2000007c 	.word	0x2000007c
 8006fa0:	080094b2 	.word	0x080094b2
 8006fa4:	080094bf 	.word	0x080094bf
 8006fa8:	080094ed 	.word	0x080094ed

08006fac <_calloc_r>:
 8006fac:	b570      	push	{r4, r5, r6, lr}
 8006fae:	fba1 5402 	umull	r5, r4, r1, r2
 8006fb2:	b934      	cbnz	r4, 8006fc2 <_calloc_r+0x16>
 8006fb4:	4629      	mov	r1, r5
 8006fb6:	f7fd ffeb 	bl	8004f90 <_malloc_r>
 8006fba:	4606      	mov	r6, r0
 8006fbc:	b928      	cbnz	r0, 8006fca <_calloc_r+0x1e>
 8006fbe:	4630      	mov	r0, r6
 8006fc0:	bd70      	pop	{r4, r5, r6, pc}
 8006fc2:	220c      	movs	r2, #12
 8006fc4:	2600      	movs	r6, #0
 8006fc6:	6002      	str	r2, [r0, #0]
 8006fc8:	e7f9      	b.n	8006fbe <_calloc_r+0x12>
 8006fca:	462a      	mov	r2, r5
 8006fcc:	4621      	mov	r1, r4
 8006fce:	f7fd f86c 	bl	80040aa <memset>
 8006fd2:	e7f4      	b.n	8006fbe <_calloc_r+0x12>

08006fd4 <rshift>:
 8006fd4:	6903      	ldr	r3, [r0, #16]
 8006fd6:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8006fda:	ebb3 1f61 	cmp.w	r3, r1, asr #5
 8006fde:	f100 0414 	add.w	r4, r0, #20
 8006fe2:	ea4f 1261 	mov.w	r2, r1, asr #5
 8006fe6:	dd46      	ble.n	8007076 <rshift+0xa2>
 8006fe8:	f011 011f 	ands.w	r1, r1, #31
 8006fec:	eb04 0683 	add.w	r6, r4, r3, lsl #2
 8006ff0:	eb04 0582 	add.w	r5, r4, r2, lsl #2
 8006ff4:	d10c      	bne.n	8007010 <rshift+0x3c>
 8006ff6:	4629      	mov	r1, r5
 8006ff8:	f100 0710 	add.w	r7, r0, #16
 8006ffc:	42b1      	cmp	r1, r6
 8006ffe:	d335      	bcc.n	800706c <rshift+0x98>
 8007000:	1a9b      	subs	r3, r3, r2
 8007002:	009b      	lsls	r3, r3, #2
 8007004:	1eea      	subs	r2, r5, #3
 8007006:	4296      	cmp	r6, r2
 8007008:	bf38      	it	cc
 800700a:	2300      	movcc	r3, #0
 800700c:	4423      	add	r3, r4
 800700e:	e015      	b.n	800703c <rshift+0x68>
 8007010:	46a1      	mov	r9, r4
 8007012:	f854 7022 	ldr.w	r7, [r4, r2, lsl #2]
 8007016:	f1c1 0820 	rsb	r8, r1, #32
 800701a:	40cf      	lsrs	r7, r1
 800701c:	f105 0e04 	add.w	lr, r5, #4
 8007020:	4576      	cmp	r6, lr
 8007022:	46f4      	mov	ip, lr
 8007024:	d816      	bhi.n	8007054 <rshift+0x80>
 8007026:	1a9a      	subs	r2, r3, r2
 8007028:	0092      	lsls	r2, r2, #2
 800702a:	3a04      	subs	r2, #4
 800702c:	3501      	adds	r5, #1
 800702e:	42ae      	cmp	r6, r5
 8007030:	bf38      	it	cc
 8007032:	2200      	movcc	r2, #0
 8007034:	18a3      	adds	r3, r4, r2
 8007036:	50a7      	str	r7, [r4, r2]
 8007038:	b107      	cbz	r7, 800703c <rshift+0x68>
 800703a:	3304      	adds	r3, #4
 800703c:	42a3      	cmp	r3, r4
 800703e:	eba3 0204 	sub.w	r2, r3, r4
 8007042:	bf08      	it	eq
 8007044:	2300      	moveq	r3, #0
 8007046:	ea4f 02a2 	mov.w	r2, r2, asr #2
 800704a:	6102      	str	r2, [r0, #16]
 800704c:	bf08      	it	eq
 800704e:	6143      	streq	r3, [r0, #20]
 8007050:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8007054:	f8dc c000 	ldr.w	ip, [ip]
 8007058:	fa0c fc08 	lsl.w	ip, ip, r8
 800705c:	ea4c 0707 	orr.w	r7, ip, r7
 8007060:	f849 7b04 	str.w	r7, [r9], #4
 8007064:	f85e 7b04 	ldr.w	r7, [lr], #4
 8007068:	40cf      	lsrs	r7, r1
 800706a:	e7d9      	b.n	8007020 <rshift+0x4c>
 800706c:	f851 cb04 	ldr.w	ip, [r1], #4
 8007070:	f847 cf04 	str.w	ip, [r7, #4]!
 8007074:	e7c2      	b.n	8006ffc <rshift+0x28>
 8007076:	4623      	mov	r3, r4
 8007078:	e7e0      	b.n	800703c <rshift+0x68>

0800707a <__hexdig_fun>:
 800707a:	f1a0 0330 	sub.w	r3, r0, #48	; 0x30
 800707e:	2b09      	cmp	r3, #9
 8007080:	d802      	bhi.n	8007088 <__hexdig_fun+0xe>
 8007082:	3820      	subs	r0, #32
 8007084:	b2c0      	uxtb	r0, r0
 8007086:	4770      	bx	lr
 8007088:	f1a0 0361 	sub.w	r3, r0, #97	; 0x61
 800708c:	2b05      	cmp	r3, #5
 800708e:	d801      	bhi.n	8007094 <__hexdig_fun+0x1a>
 8007090:	3847      	subs	r0, #71	; 0x47
 8007092:	e7f7      	b.n	8007084 <__hexdig_fun+0xa>
 8007094:	f1a0 0341 	sub.w	r3, r0, #65	; 0x41
 8007098:	2b05      	cmp	r3, #5
 800709a:	d801      	bhi.n	80070a0 <__hexdig_fun+0x26>
 800709c:	3827      	subs	r0, #39	; 0x27
 800709e:	e7f1      	b.n	8007084 <__hexdig_fun+0xa>
 80070a0:	2000      	movs	r0, #0
 80070a2:	4770      	bx	lr

080070a4 <__gethex>:
 80070a4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80070a8:	4681      	mov	r9, r0
 80070aa:	468a      	mov	sl, r1
 80070ac:	4617      	mov	r7, r2
 80070ae:	680a      	ldr	r2, [r1, #0]
 80070b0:	b085      	sub	sp, #20
 80070b2:	f102 0b02 	add.w	fp, r2, #2
 80070b6:	f1c2 22ff 	rsb	r2, r2, #4278255360	; 0xff00ff00
 80070ba:	f502 027f 	add.w	r2, r2, #16711680	; 0xff0000
 80070be:	9302      	str	r3, [sp, #8]
 80070c0:	32fe      	adds	r2, #254	; 0xfe
 80070c2:	eb02 030b 	add.w	r3, r2, fp
 80070c6:	46d8      	mov	r8, fp
 80070c8:	f81b 0b01 	ldrb.w	r0, [fp], #1
 80070cc:	9301      	str	r3, [sp, #4]
 80070ce:	2830      	cmp	r0, #48	; 0x30
 80070d0:	d0f7      	beq.n	80070c2 <__gethex+0x1e>
 80070d2:	f7ff ffd2 	bl	800707a <__hexdig_fun>
 80070d6:	4604      	mov	r4, r0
 80070d8:	2800      	cmp	r0, #0
 80070da:	d138      	bne.n	800714e <__gethex+0xaa>
 80070dc:	2201      	movs	r2, #1
 80070de:	4640      	mov	r0, r8
 80070e0:	49a7      	ldr	r1, [pc, #668]	; (8007380 <__gethex+0x2dc>)
 80070e2:	f7ff ff0f 	bl	8006f04 <strncmp>
 80070e6:	4606      	mov	r6, r0
 80070e8:	2800      	cmp	r0, #0
 80070ea:	d169      	bne.n	80071c0 <__gethex+0x11c>
 80070ec:	f898 0001 	ldrb.w	r0, [r8, #1]
 80070f0:	465d      	mov	r5, fp
 80070f2:	f7ff ffc2 	bl	800707a <__hexdig_fun>
 80070f6:	2800      	cmp	r0, #0
 80070f8:	d064      	beq.n	80071c4 <__gethex+0x120>
 80070fa:	465a      	mov	r2, fp
 80070fc:	7810      	ldrb	r0, [r2, #0]
 80070fe:	4690      	mov	r8, r2
 8007100:	2830      	cmp	r0, #48	; 0x30
 8007102:	f102 0201 	add.w	r2, r2, #1
 8007106:	d0f9      	beq.n	80070fc <__gethex+0x58>
 8007108:	f7ff ffb7 	bl	800707a <__hexdig_fun>
 800710c:	2301      	movs	r3, #1
 800710e:	fab0 f480 	clz	r4, r0
 8007112:	465e      	mov	r6, fp
 8007114:	0964      	lsrs	r4, r4, #5
 8007116:	9301      	str	r3, [sp, #4]
 8007118:	4642      	mov	r2, r8
 800711a:	4615      	mov	r5, r2
 800711c:	7828      	ldrb	r0, [r5, #0]
 800711e:	3201      	adds	r2, #1
 8007120:	f7ff ffab 	bl	800707a <__hexdig_fun>
 8007124:	2800      	cmp	r0, #0
 8007126:	d1f8      	bne.n	800711a <__gethex+0x76>
 8007128:	2201      	movs	r2, #1
 800712a:	4628      	mov	r0, r5
 800712c:	4994      	ldr	r1, [pc, #592]	; (8007380 <__gethex+0x2dc>)
 800712e:	f7ff fee9 	bl	8006f04 <strncmp>
 8007132:	b978      	cbnz	r0, 8007154 <__gethex+0xb0>
 8007134:	b946      	cbnz	r6, 8007148 <__gethex+0xa4>
 8007136:	1c6e      	adds	r6, r5, #1
 8007138:	4632      	mov	r2, r6
 800713a:	4615      	mov	r5, r2
 800713c:	7828      	ldrb	r0, [r5, #0]
 800713e:	3201      	adds	r2, #1
 8007140:	f7ff ff9b 	bl	800707a <__hexdig_fun>
 8007144:	2800      	cmp	r0, #0
 8007146:	d1f8      	bne.n	800713a <__gethex+0x96>
 8007148:	1b73      	subs	r3, r6, r5
 800714a:	009e      	lsls	r6, r3, #2
 800714c:	e004      	b.n	8007158 <__gethex+0xb4>
 800714e:	2400      	movs	r4, #0
 8007150:	4626      	mov	r6, r4
 8007152:	e7e1      	b.n	8007118 <__gethex+0x74>
 8007154:	2e00      	cmp	r6, #0
 8007156:	d1f7      	bne.n	8007148 <__gethex+0xa4>
 8007158:	782b      	ldrb	r3, [r5, #0]
 800715a:	f003 03df 	and.w	r3, r3, #223	; 0xdf
 800715e:	2b50      	cmp	r3, #80	; 0x50
 8007160:	d13d      	bne.n	80071de <__gethex+0x13a>
 8007162:	786b      	ldrb	r3, [r5, #1]
 8007164:	2b2b      	cmp	r3, #43	; 0x2b
 8007166:	d02f      	beq.n	80071c8 <__gethex+0x124>
 8007168:	2b2d      	cmp	r3, #45	; 0x2d
 800716a:	d031      	beq.n	80071d0 <__gethex+0x12c>
 800716c:	f04f 0b00 	mov.w	fp, #0
 8007170:	1c69      	adds	r1, r5, #1
 8007172:	7808      	ldrb	r0, [r1, #0]
 8007174:	f7ff ff81 	bl	800707a <__hexdig_fun>
 8007178:	1e42      	subs	r2, r0, #1
 800717a:	b2d2      	uxtb	r2, r2
 800717c:	2a18      	cmp	r2, #24
 800717e:	d82e      	bhi.n	80071de <__gethex+0x13a>
 8007180:	f1a0 0210 	sub.w	r2, r0, #16
 8007184:	f811 0f01 	ldrb.w	r0, [r1, #1]!
 8007188:	f7ff ff77 	bl	800707a <__hexdig_fun>
 800718c:	f100 3cff 	add.w	ip, r0, #4294967295
 8007190:	fa5f fc8c 	uxtb.w	ip, ip
 8007194:	f1bc 0f18 	cmp.w	ip, #24
 8007198:	d91d      	bls.n	80071d6 <__gethex+0x132>
 800719a:	f1bb 0f00 	cmp.w	fp, #0
 800719e:	d000      	beq.n	80071a2 <__gethex+0xfe>
 80071a0:	4252      	negs	r2, r2
 80071a2:	4416      	add	r6, r2
 80071a4:	f8ca 1000 	str.w	r1, [sl]
 80071a8:	b1dc      	cbz	r4, 80071e2 <__gethex+0x13e>
 80071aa:	9b01      	ldr	r3, [sp, #4]
 80071ac:	2b00      	cmp	r3, #0
 80071ae:	bf14      	ite	ne
 80071b0:	f04f 0800 	movne.w	r8, #0
 80071b4:	f04f 0806 	moveq.w	r8, #6
 80071b8:	4640      	mov	r0, r8
 80071ba:	b005      	add	sp, #20
 80071bc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80071c0:	4645      	mov	r5, r8
 80071c2:	4626      	mov	r6, r4
 80071c4:	2401      	movs	r4, #1
 80071c6:	e7c7      	b.n	8007158 <__gethex+0xb4>
 80071c8:	f04f 0b00 	mov.w	fp, #0
 80071cc:	1ca9      	adds	r1, r5, #2
 80071ce:	e7d0      	b.n	8007172 <__gethex+0xce>
 80071d0:	f04f 0b01 	mov.w	fp, #1
 80071d4:	e7fa      	b.n	80071cc <__gethex+0x128>
 80071d6:	230a      	movs	r3, #10
 80071d8:	fb03 0002 	mla	r0, r3, r2, r0
 80071dc:	e7d0      	b.n	8007180 <__gethex+0xdc>
 80071de:	4629      	mov	r1, r5
 80071e0:	e7e0      	b.n	80071a4 <__gethex+0x100>
 80071e2:	4621      	mov	r1, r4
 80071e4:	eba5 0308 	sub.w	r3, r5, r8
 80071e8:	3b01      	subs	r3, #1
 80071ea:	2b07      	cmp	r3, #7
 80071ec:	dc0a      	bgt.n	8007204 <__gethex+0x160>
 80071ee:	4648      	mov	r0, r9
 80071f0:	f7fd ff5a 	bl	80050a8 <_Balloc>
 80071f4:	4604      	mov	r4, r0
 80071f6:	b940      	cbnz	r0, 800720a <__gethex+0x166>
 80071f8:	4602      	mov	r2, r0
 80071fa:	21e4      	movs	r1, #228	; 0xe4
 80071fc:	4b61      	ldr	r3, [pc, #388]	; (8007384 <__gethex+0x2e0>)
 80071fe:	4862      	ldr	r0, [pc, #392]	; (8007388 <__gethex+0x2e4>)
 8007200:	f7ff feb6 	bl	8006f70 <__assert_func>
 8007204:	3101      	adds	r1, #1
 8007206:	105b      	asrs	r3, r3, #1
 8007208:	e7ef      	b.n	80071ea <__gethex+0x146>
 800720a:	2300      	movs	r3, #0
 800720c:	469b      	mov	fp, r3
 800720e:	f100 0a14 	add.w	sl, r0, #20
 8007212:	f8cd a004 	str.w	sl, [sp, #4]
 8007216:	45a8      	cmp	r8, r5
 8007218:	d344      	bcc.n	80072a4 <__gethex+0x200>
 800721a:	f8dd 8004 	ldr.w	r8, [sp, #4]
 800721e:	4658      	mov	r0, fp
 8007220:	f848 bb04 	str.w	fp, [r8], #4
 8007224:	eba8 080a 	sub.w	r8, r8, sl
 8007228:	ea4f 02a8 	mov.w	r2, r8, asr #2
 800722c:	6122      	str	r2, [r4, #16]
 800722e:	ea4f 1842 	mov.w	r8, r2, lsl #5
 8007232:	f7fe f82b 	bl	800528c <__hi0bits>
 8007236:	683d      	ldr	r5, [r7, #0]
 8007238:	eba8 0800 	sub.w	r8, r8, r0
 800723c:	45a8      	cmp	r8, r5
 800723e:	dd59      	ble.n	80072f4 <__gethex+0x250>
 8007240:	eba8 0805 	sub.w	r8, r8, r5
 8007244:	4641      	mov	r1, r8
 8007246:	4620      	mov	r0, r4
 8007248:	f7fe fba9 	bl	800599e <__any_on>
 800724c:	4683      	mov	fp, r0
 800724e:	b1b8      	cbz	r0, 8007280 <__gethex+0x1dc>
 8007250:	f04f 0b01 	mov.w	fp, #1
 8007254:	f108 33ff 	add.w	r3, r8, #4294967295
 8007258:	1159      	asrs	r1, r3, #5
 800725a:	f85a 1021 	ldr.w	r1, [sl, r1, lsl #2]
 800725e:	f003 021f 	and.w	r2, r3, #31
 8007262:	fa0b f202 	lsl.w	r2, fp, r2
 8007266:	420a      	tst	r2, r1
 8007268:	d00a      	beq.n	8007280 <__gethex+0x1dc>
 800726a:	455b      	cmp	r3, fp
 800726c:	dd06      	ble.n	800727c <__gethex+0x1d8>
 800726e:	4620      	mov	r0, r4
 8007270:	f1a8 0102 	sub.w	r1, r8, #2
 8007274:	f7fe fb93 	bl	800599e <__any_on>
 8007278:	2800      	cmp	r0, #0
 800727a:	d138      	bne.n	80072ee <__gethex+0x24a>
 800727c:	f04f 0b02 	mov.w	fp, #2
 8007280:	4641      	mov	r1, r8
 8007282:	4620      	mov	r0, r4
 8007284:	f7ff fea6 	bl	8006fd4 <rshift>
 8007288:	4446      	add	r6, r8
 800728a:	68bb      	ldr	r3, [r7, #8]
 800728c:	42b3      	cmp	r3, r6
 800728e:	da41      	bge.n	8007314 <__gethex+0x270>
 8007290:	4621      	mov	r1, r4
 8007292:	4648      	mov	r0, r9
 8007294:	f7fd ff48 	bl	8005128 <_Bfree>
 8007298:	2300      	movs	r3, #0
 800729a:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 800729c:	f04f 08a3 	mov.w	r8, #163	; 0xa3
 80072a0:	6013      	str	r3, [r2, #0]
 80072a2:	e789      	b.n	80071b8 <__gethex+0x114>
 80072a4:	f815 2d01 	ldrb.w	r2, [r5, #-1]!
 80072a8:	2a2e      	cmp	r2, #46	; 0x2e
 80072aa:	d014      	beq.n	80072d6 <__gethex+0x232>
 80072ac:	2b20      	cmp	r3, #32
 80072ae:	d106      	bne.n	80072be <__gethex+0x21a>
 80072b0:	9b01      	ldr	r3, [sp, #4]
 80072b2:	f843 bb04 	str.w	fp, [r3], #4
 80072b6:	f04f 0b00 	mov.w	fp, #0
 80072ba:	9301      	str	r3, [sp, #4]
 80072bc:	465b      	mov	r3, fp
 80072be:	7828      	ldrb	r0, [r5, #0]
 80072c0:	9303      	str	r3, [sp, #12]
 80072c2:	f7ff feda 	bl	800707a <__hexdig_fun>
 80072c6:	9b03      	ldr	r3, [sp, #12]
 80072c8:	f000 000f 	and.w	r0, r0, #15
 80072cc:	4098      	lsls	r0, r3
 80072ce:	ea4b 0b00 	orr.w	fp, fp, r0
 80072d2:	3304      	adds	r3, #4
 80072d4:	e79f      	b.n	8007216 <__gethex+0x172>
 80072d6:	45a8      	cmp	r8, r5
 80072d8:	d8e8      	bhi.n	80072ac <__gethex+0x208>
 80072da:	2201      	movs	r2, #1
 80072dc:	4628      	mov	r0, r5
 80072de:	4928      	ldr	r1, [pc, #160]	; (8007380 <__gethex+0x2dc>)
 80072e0:	9303      	str	r3, [sp, #12]
 80072e2:	f7ff fe0f 	bl	8006f04 <strncmp>
 80072e6:	9b03      	ldr	r3, [sp, #12]
 80072e8:	2800      	cmp	r0, #0
 80072ea:	d1df      	bne.n	80072ac <__gethex+0x208>
 80072ec:	e793      	b.n	8007216 <__gethex+0x172>
 80072ee:	f04f 0b03 	mov.w	fp, #3
 80072f2:	e7c5      	b.n	8007280 <__gethex+0x1dc>
 80072f4:	da0b      	bge.n	800730e <__gethex+0x26a>
 80072f6:	eba5 0808 	sub.w	r8, r5, r8
 80072fa:	4621      	mov	r1, r4
 80072fc:	4642      	mov	r2, r8
 80072fe:	4648      	mov	r0, r9
 8007300:	f7fe f92a 	bl	8005558 <__lshift>
 8007304:	4604      	mov	r4, r0
 8007306:	eba6 0608 	sub.w	r6, r6, r8
 800730a:	f100 0a14 	add.w	sl, r0, #20
 800730e:	f04f 0b00 	mov.w	fp, #0
 8007312:	e7ba      	b.n	800728a <__gethex+0x1e6>
 8007314:	687b      	ldr	r3, [r7, #4]
 8007316:	42b3      	cmp	r3, r6
 8007318:	dd74      	ble.n	8007404 <__gethex+0x360>
 800731a:	1b9e      	subs	r6, r3, r6
 800731c:	42b5      	cmp	r5, r6
 800731e:	dc35      	bgt.n	800738c <__gethex+0x2e8>
 8007320:	68fb      	ldr	r3, [r7, #12]
 8007322:	2b02      	cmp	r3, #2
 8007324:	d023      	beq.n	800736e <__gethex+0x2ca>
 8007326:	2b03      	cmp	r3, #3
 8007328:	d025      	beq.n	8007376 <__gethex+0x2d2>
 800732a:	2b01      	cmp	r3, #1
 800732c:	d115      	bne.n	800735a <__gethex+0x2b6>
 800732e:	42b5      	cmp	r5, r6
 8007330:	d113      	bne.n	800735a <__gethex+0x2b6>
 8007332:	2d01      	cmp	r5, #1
 8007334:	d10b      	bne.n	800734e <__gethex+0x2aa>
 8007336:	687b      	ldr	r3, [r7, #4]
 8007338:	9a02      	ldr	r2, [sp, #8]
 800733a:	f04f 0862 	mov.w	r8, #98	; 0x62
 800733e:	6013      	str	r3, [r2, #0]
 8007340:	2301      	movs	r3, #1
 8007342:	6123      	str	r3, [r4, #16]
 8007344:	f8ca 3000 	str.w	r3, [sl]
 8007348:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800734a:	601c      	str	r4, [r3, #0]
 800734c:	e734      	b.n	80071b8 <__gethex+0x114>
 800734e:	4620      	mov	r0, r4
 8007350:	1e69      	subs	r1, r5, #1
 8007352:	f7fe fb24 	bl	800599e <__any_on>
 8007356:	2800      	cmp	r0, #0
 8007358:	d1ed      	bne.n	8007336 <__gethex+0x292>
 800735a:	4621      	mov	r1, r4
 800735c:	4648      	mov	r0, r9
 800735e:	f7fd fee3 	bl	8005128 <_Bfree>
 8007362:	2300      	movs	r3, #0
 8007364:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8007366:	f04f 0850 	mov.w	r8, #80	; 0x50
 800736a:	6013      	str	r3, [r2, #0]
 800736c:	e724      	b.n	80071b8 <__gethex+0x114>
 800736e:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8007370:	2b00      	cmp	r3, #0
 8007372:	d1f2      	bne.n	800735a <__gethex+0x2b6>
 8007374:	e7df      	b.n	8007336 <__gethex+0x292>
 8007376:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8007378:	2b00      	cmp	r3, #0
 800737a:	d1dc      	bne.n	8007336 <__gethex+0x292>
 800737c:	e7ed      	b.n	800735a <__gethex+0x2b6>
 800737e:	bf00      	nop
 8007380:	08009344 	.word	0x08009344
 8007384:	080091dd 	.word	0x080091dd
 8007388:	080094ee 	.word	0x080094ee
 800738c:	f106 38ff 	add.w	r8, r6, #4294967295
 8007390:	f1bb 0f00 	cmp.w	fp, #0
 8007394:	d133      	bne.n	80073fe <__gethex+0x35a>
 8007396:	f1b8 0f00 	cmp.w	r8, #0
 800739a:	d004      	beq.n	80073a6 <__gethex+0x302>
 800739c:	4641      	mov	r1, r8
 800739e:	4620      	mov	r0, r4
 80073a0:	f7fe fafd 	bl	800599e <__any_on>
 80073a4:	4683      	mov	fp, r0
 80073a6:	2301      	movs	r3, #1
 80073a8:	ea4f 1268 	mov.w	r2, r8, asr #5
 80073ac:	f008 081f 	and.w	r8, r8, #31
 80073b0:	fa03 f308 	lsl.w	r3, r3, r8
 80073b4:	f04f 0802 	mov.w	r8, #2
 80073b8:	f85a 2022 	ldr.w	r2, [sl, r2, lsl #2]
 80073bc:	4631      	mov	r1, r6
 80073be:	4213      	tst	r3, r2
 80073c0:	4620      	mov	r0, r4
 80073c2:	bf18      	it	ne
 80073c4:	f04b 0b02 	orrne.w	fp, fp, #2
 80073c8:	1bad      	subs	r5, r5, r6
 80073ca:	f7ff fe03 	bl	8006fd4 <rshift>
 80073ce:	687e      	ldr	r6, [r7, #4]
 80073d0:	f1bb 0f00 	cmp.w	fp, #0
 80073d4:	d04a      	beq.n	800746c <__gethex+0x3c8>
 80073d6:	68fb      	ldr	r3, [r7, #12]
 80073d8:	2b02      	cmp	r3, #2
 80073da:	d016      	beq.n	800740a <__gethex+0x366>
 80073dc:	2b03      	cmp	r3, #3
 80073de:	d018      	beq.n	8007412 <__gethex+0x36e>
 80073e0:	2b01      	cmp	r3, #1
 80073e2:	d109      	bne.n	80073f8 <__gethex+0x354>
 80073e4:	f01b 0f02 	tst.w	fp, #2
 80073e8:	d006      	beq.n	80073f8 <__gethex+0x354>
 80073ea:	f8da 3000 	ldr.w	r3, [sl]
 80073ee:	ea4b 0b03 	orr.w	fp, fp, r3
 80073f2:	f01b 0f01 	tst.w	fp, #1
 80073f6:	d10f      	bne.n	8007418 <__gethex+0x374>
 80073f8:	f048 0810 	orr.w	r8, r8, #16
 80073fc:	e036      	b.n	800746c <__gethex+0x3c8>
 80073fe:	f04f 0b01 	mov.w	fp, #1
 8007402:	e7d0      	b.n	80073a6 <__gethex+0x302>
 8007404:	f04f 0801 	mov.w	r8, #1
 8007408:	e7e2      	b.n	80073d0 <__gethex+0x32c>
 800740a:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 800740c:	f1c3 0301 	rsb	r3, r3, #1
 8007410:	930f      	str	r3, [sp, #60]	; 0x3c
 8007412:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8007414:	2b00      	cmp	r3, #0
 8007416:	d0ef      	beq.n	80073f8 <__gethex+0x354>
 8007418:	f8d4 b010 	ldr.w	fp, [r4, #16]
 800741c:	f104 0214 	add.w	r2, r4, #20
 8007420:	ea4f 038b 	mov.w	r3, fp, lsl #2
 8007424:	9301      	str	r3, [sp, #4]
 8007426:	2300      	movs	r3, #0
 8007428:	eb02 008b 	add.w	r0, r2, fp, lsl #2
 800742c:	4694      	mov	ip, r2
 800742e:	f852 1b04 	ldr.w	r1, [r2], #4
 8007432:	f1b1 3fff 	cmp.w	r1, #4294967295
 8007436:	d01e      	beq.n	8007476 <__gethex+0x3d2>
 8007438:	3101      	adds	r1, #1
 800743a:	f8cc 1000 	str.w	r1, [ip]
 800743e:	f1b8 0f02 	cmp.w	r8, #2
 8007442:	f104 0214 	add.w	r2, r4, #20
 8007446:	d13d      	bne.n	80074c4 <__gethex+0x420>
 8007448:	683b      	ldr	r3, [r7, #0]
 800744a:	3b01      	subs	r3, #1
 800744c:	42ab      	cmp	r3, r5
 800744e:	d10b      	bne.n	8007468 <__gethex+0x3c4>
 8007450:	2301      	movs	r3, #1
 8007452:	1169      	asrs	r1, r5, #5
 8007454:	f005 051f 	and.w	r5, r5, #31
 8007458:	fa03 f505 	lsl.w	r5, r3, r5
 800745c:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 8007460:	421d      	tst	r5, r3
 8007462:	bf18      	it	ne
 8007464:	f04f 0801 	movne.w	r8, #1
 8007468:	f048 0820 	orr.w	r8, r8, #32
 800746c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800746e:	601c      	str	r4, [r3, #0]
 8007470:	9b02      	ldr	r3, [sp, #8]
 8007472:	601e      	str	r6, [r3, #0]
 8007474:	e6a0      	b.n	80071b8 <__gethex+0x114>
 8007476:	4290      	cmp	r0, r2
 8007478:	f842 3c04 	str.w	r3, [r2, #-4]
 800747c:	d8d6      	bhi.n	800742c <__gethex+0x388>
 800747e:	68a2      	ldr	r2, [r4, #8]
 8007480:	4593      	cmp	fp, r2
 8007482:	db17      	blt.n	80074b4 <__gethex+0x410>
 8007484:	6861      	ldr	r1, [r4, #4]
 8007486:	4648      	mov	r0, r9
 8007488:	3101      	adds	r1, #1
 800748a:	f7fd fe0d 	bl	80050a8 <_Balloc>
 800748e:	4682      	mov	sl, r0
 8007490:	b918      	cbnz	r0, 800749a <__gethex+0x3f6>
 8007492:	4602      	mov	r2, r0
 8007494:	2184      	movs	r1, #132	; 0x84
 8007496:	4b1a      	ldr	r3, [pc, #104]	; (8007500 <__gethex+0x45c>)
 8007498:	e6b1      	b.n	80071fe <__gethex+0x15a>
 800749a:	6922      	ldr	r2, [r4, #16]
 800749c:	f104 010c 	add.w	r1, r4, #12
 80074a0:	3202      	adds	r2, #2
 80074a2:	0092      	lsls	r2, r2, #2
 80074a4:	300c      	adds	r0, #12
 80074a6:	f7ff fd4f 	bl	8006f48 <memcpy>
 80074aa:	4621      	mov	r1, r4
 80074ac:	4648      	mov	r0, r9
 80074ae:	f7fd fe3b 	bl	8005128 <_Bfree>
 80074b2:	4654      	mov	r4, sl
 80074b4:	6922      	ldr	r2, [r4, #16]
 80074b6:	1c51      	adds	r1, r2, #1
 80074b8:	6121      	str	r1, [r4, #16]
 80074ba:	2101      	movs	r1, #1
 80074bc:	eb04 0282 	add.w	r2, r4, r2, lsl #2
 80074c0:	6151      	str	r1, [r2, #20]
 80074c2:	e7bc      	b.n	800743e <__gethex+0x39a>
 80074c4:	6921      	ldr	r1, [r4, #16]
 80074c6:	4559      	cmp	r1, fp
 80074c8:	dd0b      	ble.n	80074e2 <__gethex+0x43e>
 80074ca:	2101      	movs	r1, #1
 80074cc:	4620      	mov	r0, r4
 80074ce:	f7ff fd81 	bl	8006fd4 <rshift>
 80074d2:	68bb      	ldr	r3, [r7, #8]
 80074d4:	3601      	adds	r6, #1
 80074d6:	42b3      	cmp	r3, r6
 80074d8:	f6ff aeda 	blt.w	8007290 <__gethex+0x1ec>
 80074dc:	f04f 0801 	mov.w	r8, #1
 80074e0:	e7c2      	b.n	8007468 <__gethex+0x3c4>
 80074e2:	f015 051f 	ands.w	r5, r5, #31
 80074e6:	d0f9      	beq.n	80074dc <__gethex+0x438>
 80074e8:	9b01      	ldr	r3, [sp, #4]
 80074ea:	f1c5 0520 	rsb	r5, r5, #32
 80074ee:	441a      	add	r2, r3
 80074f0:	f852 0c04 	ldr.w	r0, [r2, #-4]
 80074f4:	f7fd feca 	bl	800528c <__hi0bits>
 80074f8:	42a8      	cmp	r0, r5
 80074fa:	dbe6      	blt.n	80074ca <__gethex+0x426>
 80074fc:	e7ee      	b.n	80074dc <__gethex+0x438>
 80074fe:	bf00      	nop
 8007500:	080091dd 	.word	0x080091dd

08007504 <L_shift>:
 8007504:	f1c2 0208 	rsb	r2, r2, #8
 8007508:	0092      	lsls	r2, r2, #2
 800750a:	b570      	push	{r4, r5, r6, lr}
 800750c:	f1c2 0620 	rsb	r6, r2, #32
 8007510:	6843      	ldr	r3, [r0, #4]
 8007512:	6804      	ldr	r4, [r0, #0]
 8007514:	fa03 f506 	lsl.w	r5, r3, r6
 8007518:	432c      	orrs	r4, r5
 800751a:	40d3      	lsrs	r3, r2
 800751c:	6004      	str	r4, [r0, #0]
 800751e:	f840 3f04 	str.w	r3, [r0, #4]!
 8007522:	4288      	cmp	r0, r1
 8007524:	d3f4      	bcc.n	8007510 <L_shift+0xc>
 8007526:	bd70      	pop	{r4, r5, r6, pc}

08007528 <__match>:
 8007528:	b530      	push	{r4, r5, lr}
 800752a:	6803      	ldr	r3, [r0, #0]
 800752c:	3301      	adds	r3, #1
 800752e:	f811 4b01 	ldrb.w	r4, [r1], #1
 8007532:	b914      	cbnz	r4, 800753a <__match+0x12>
 8007534:	6003      	str	r3, [r0, #0]
 8007536:	2001      	movs	r0, #1
 8007538:	bd30      	pop	{r4, r5, pc}
 800753a:	f813 2b01 	ldrb.w	r2, [r3], #1
 800753e:	f1a2 0541 	sub.w	r5, r2, #65	; 0x41
 8007542:	2d19      	cmp	r5, #25
 8007544:	bf98      	it	ls
 8007546:	3220      	addls	r2, #32
 8007548:	42a2      	cmp	r2, r4
 800754a:	d0f0      	beq.n	800752e <__match+0x6>
 800754c:	2000      	movs	r0, #0
 800754e:	e7f3      	b.n	8007538 <__match+0x10>

08007550 <__hexnan>:
 8007550:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8007554:	2500      	movs	r5, #0
 8007556:	680b      	ldr	r3, [r1, #0]
 8007558:	4682      	mov	sl, r0
 800755a:	115e      	asrs	r6, r3, #5
 800755c:	eb02 0686 	add.w	r6, r2, r6, lsl #2
 8007560:	f013 031f 	ands.w	r3, r3, #31
 8007564:	bf18      	it	ne
 8007566:	3604      	addne	r6, #4
 8007568:	1f37      	subs	r7, r6, #4
 800756a:	4690      	mov	r8, r2
 800756c:	46b9      	mov	r9, r7
 800756e:	463c      	mov	r4, r7
 8007570:	46ab      	mov	fp, r5
 8007572:	b087      	sub	sp, #28
 8007574:	6801      	ldr	r1, [r0, #0]
 8007576:	9301      	str	r3, [sp, #4]
 8007578:	f846 5c04 	str.w	r5, [r6, #-4]
 800757c:	9502      	str	r5, [sp, #8]
 800757e:	784a      	ldrb	r2, [r1, #1]
 8007580:	1c4b      	adds	r3, r1, #1
 8007582:	9303      	str	r3, [sp, #12]
 8007584:	b342      	cbz	r2, 80075d8 <__hexnan+0x88>
 8007586:	4610      	mov	r0, r2
 8007588:	9105      	str	r1, [sp, #20]
 800758a:	9204      	str	r2, [sp, #16]
 800758c:	f7ff fd75 	bl	800707a <__hexdig_fun>
 8007590:	2800      	cmp	r0, #0
 8007592:	d14f      	bne.n	8007634 <__hexnan+0xe4>
 8007594:	9a04      	ldr	r2, [sp, #16]
 8007596:	9905      	ldr	r1, [sp, #20]
 8007598:	2a20      	cmp	r2, #32
 800759a:	d818      	bhi.n	80075ce <__hexnan+0x7e>
 800759c:	9b02      	ldr	r3, [sp, #8]
 800759e:	459b      	cmp	fp, r3
 80075a0:	dd13      	ble.n	80075ca <__hexnan+0x7a>
 80075a2:	454c      	cmp	r4, r9
 80075a4:	d206      	bcs.n	80075b4 <__hexnan+0x64>
 80075a6:	2d07      	cmp	r5, #7
 80075a8:	dc04      	bgt.n	80075b4 <__hexnan+0x64>
 80075aa:	462a      	mov	r2, r5
 80075ac:	4649      	mov	r1, r9
 80075ae:	4620      	mov	r0, r4
 80075b0:	f7ff ffa8 	bl	8007504 <L_shift>
 80075b4:	4544      	cmp	r4, r8
 80075b6:	d950      	bls.n	800765a <__hexnan+0x10a>
 80075b8:	2300      	movs	r3, #0
 80075ba:	f1a4 0904 	sub.w	r9, r4, #4
 80075be:	f844 3c04 	str.w	r3, [r4, #-4]
 80075c2:	461d      	mov	r5, r3
 80075c4:	464c      	mov	r4, r9
 80075c6:	f8cd b008 	str.w	fp, [sp, #8]
 80075ca:	9903      	ldr	r1, [sp, #12]
 80075cc:	e7d7      	b.n	800757e <__hexnan+0x2e>
 80075ce:	2a29      	cmp	r2, #41	; 0x29
 80075d0:	d155      	bne.n	800767e <__hexnan+0x12e>
 80075d2:	3102      	adds	r1, #2
 80075d4:	f8ca 1000 	str.w	r1, [sl]
 80075d8:	f1bb 0f00 	cmp.w	fp, #0
 80075dc:	d04f      	beq.n	800767e <__hexnan+0x12e>
 80075de:	454c      	cmp	r4, r9
 80075e0:	d206      	bcs.n	80075f0 <__hexnan+0xa0>
 80075e2:	2d07      	cmp	r5, #7
 80075e4:	dc04      	bgt.n	80075f0 <__hexnan+0xa0>
 80075e6:	462a      	mov	r2, r5
 80075e8:	4649      	mov	r1, r9
 80075ea:	4620      	mov	r0, r4
 80075ec:	f7ff ff8a 	bl	8007504 <L_shift>
 80075f0:	4544      	cmp	r4, r8
 80075f2:	d934      	bls.n	800765e <__hexnan+0x10e>
 80075f4:	4623      	mov	r3, r4
 80075f6:	f1a8 0204 	sub.w	r2, r8, #4
 80075fa:	f853 1b04 	ldr.w	r1, [r3], #4
 80075fe:	429f      	cmp	r7, r3
 8007600:	f842 1f04 	str.w	r1, [r2, #4]!
 8007604:	d2f9      	bcs.n	80075fa <__hexnan+0xaa>
 8007606:	1b3b      	subs	r3, r7, r4
 8007608:	f023 0303 	bic.w	r3, r3, #3
 800760c:	3304      	adds	r3, #4
 800760e:	3e03      	subs	r6, #3
 8007610:	3401      	adds	r4, #1
 8007612:	42a6      	cmp	r6, r4
 8007614:	bf38      	it	cc
 8007616:	2304      	movcc	r3, #4
 8007618:	2200      	movs	r2, #0
 800761a:	4443      	add	r3, r8
 800761c:	f843 2b04 	str.w	r2, [r3], #4
 8007620:	429f      	cmp	r7, r3
 8007622:	d2fb      	bcs.n	800761c <__hexnan+0xcc>
 8007624:	683b      	ldr	r3, [r7, #0]
 8007626:	b91b      	cbnz	r3, 8007630 <__hexnan+0xe0>
 8007628:	4547      	cmp	r7, r8
 800762a:	d126      	bne.n	800767a <__hexnan+0x12a>
 800762c:	2301      	movs	r3, #1
 800762e:	603b      	str	r3, [r7, #0]
 8007630:	2005      	movs	r0, #5
 8007632:	e025      	b.n	8007680 <__hexnan+0x130>
 8007634:	3501      	adds	r5, #1
 8007636:	2d08      	cmp	r5, #8
 8007638:	f10b 0b01 	add.w	fp, fp, #1
 800763c:	dd06      	ble.n	800764c <__hexnan+0xfc>
 800763e:	4544      	cmp	r4, r8
 8007640:	d9c3      	bls.n	80075ca <__hexnan+0x7a>
 8007642:	2300      	movs	r3, #0
 8007644:	2501      	movs	r5, #1
 8007646:	f844 3c04 	str.w	r3, [r4, #-4]
 800764a:	3c04      	subs	r4, #4
 800764c:	6822      	ldr	r2, [r4, #0]
 800764e:	f000 000f 	and.w	r0, r0, #15
 8007652:	ea40 1002 	orr.w	r0, r0, r2, lsl #4
 8007656:	6020      	str	r0, [r4, #0]
 8007658:	e7b7      	b.n	80075ca <__hexnan+0x7a>
 800765a:	2508      	movs	r5, #8
 800765c:	e7b5      	b.n	80075ca <__hexnan+0x7a>
 800765e:	9b01      	ldr	r3, [sp, #4]
 8007660:	2b00      	cmp	r3, #0
 8007662:	d0df      	beq.n	8007624 <__hexnan+0xd4>
 8007664:	f04f 32ff 	mov.w	r2, #4294967295
 8007668:	f1c3 0320 	rsb	r3, r3, #32
 800766c:	40da      	lsrs	r2, r3
 800766e:	f856 3c04 	ldr.w	r3, [r6, #-4]
 8007672:	4013      	ands	r3, r2
 8007674:	f846 3c04 	str.w	r3, [r6, #-4]
 8007678:	e7d4      	b.n	8007624 <__hexnan+0xd4>
 800767a:	3f04      	subs	r7, #4
 800767c:	e7d2      	b.n	8007624 <__hexnan+0xd4>
 800767e:	2004      	movs	r0, #4
 8007680:	b007      	add	sp, #28
 8007682:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08007686 <__ascii_mbtowc>:
 8007686:	b082      	sub	sp, #8
 8007688:	b901      	cbnz	r1, 800768c <__ascii_mbtowc+0x6>
 800768a:	a901      	add	r1, sp, #4
 800768c:	b142      	cbz	r2, 80076a0 <__ascii_mbtowc+0x1a>
 800768e:	b14b      	cbz	r3, 80076a4 <__ascii_mbtowc+0x1e>
 8007690:	7813      	ldrb	r3, [r2, #0]
 8007692:	600b      	str	r3, [r1, #0]
 8007694:	7812      	ldrb	r2, [r2, #0]
 8007696:	1e10      	subs	r0, r2, #0
 8007698:	bf18      	it	ne
 800769a:	2001      	movne	r0, #1
 800769c:	b002      	add	sp, #8
 800769e:	4770      	bx	lr
 80076a0:	4610      	mov	r0, r2
 80076a2:	e7fb      	b.n	800769c <__ascii_mbtowc+0x16>
 80076a4:	f06f 0001 	mvn.w	r0, #1
 80076a8:	e7f8      	b.n	800769c <__ascii_mbtowc+0x16>

080076aa <_realloc_r>:
 80076aa:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80076ae:	4680      	mov	r8, r0
 80076b0:	4614      	mov	r4, r2
 80076b2:	460e      	mov	r6, r1
 80076b4:	b921      	cbnz	r1, 80076c0 <_realloc_r+0x16>
 80076b6:	4611      	mov	r1, r2
 80076b8:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80076bc:	f7fd bc68 	b.w	8004f90 <_malloc_r>
 80076c0:	b92a      	cbnz	r2, 80076ce <_realloc_r+0x24>
 80076c2:	f7fd fbf5 	bl	8004eb0 <_free_r>
 80076c6:	4625      	mov	r5, r4
 80076c8:	4628      	mov	r0, r5
 80076ca:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80076ce:	f000 f8c6 	bl	800785e <_malloc_usable_size_r>
 80076d2:	4284      	cmp	r4, r0
 80076d4:	4607      	mov	r7, r0
 80076d6:	d802      	bhi.n	80076de <_realloc_r+0x34>
 80076d8:	ebb4 0f50 	cmp.w	r4, r0, lsr #1
 80076dc:	d812      	bhi.n	8007704 <_realloc_r+0x5a>
 80076de:	4621      	mov	r1, r4
 80076e0:	4640      	mov	r0, r8
 80076e2:	f7fd fc55 	bl	8004f90 <_malloc_r>
 80076e6:	4605      	mov	r5, r0
 80076e8:	2800      	cmp	r0, #0
 80076ea:	d0ed      	beq.n	80076c8 <_realloc_r+0x1e>
 80076ec:	42bc      	cmp	r4, r7
 80076ee:	4622      	mov	r2, r4
 80076f0:	4631      	mov	r1, r6
 80076f2:	bf28      	it	cs
 80076f4:	463a      	movcs	r2, r7
 80076f6:	f7ff fc27 	bl	8006f48 <memcpy>
 80076fa:	4631      	mov	r1, r6
 80076fc:	4640      	mov	r0, r8
 80076fe:	f7fd fbd7 	bl	8004eb0 <_free_r>
 8007702:	e7e1      	b.n	80076c8 <_realloc_r+0x1e>
 8007704:	4635      	mov	r5, r6
 8007706:	e7df      	b.n	80076c8 <_realloc_r+0x1e>

08007708 <__ascii_wctomb>:
 8007708:	4603      	mov	r3, r0
 800770a:	4608      	mov	r0, r1
 800770c:	b141      	cbz	r1, 8007720 <__ascii_wctomb+0x18>
 800770e:	2aff      	cmp	r2, #255	; 0xff
 8007710:	d904      	bls.n	800771c <__ascii_wctomb+0x14>
 8007712:	228a      	movs	r2, #138	; 0x8a
 8007714:	f04f 30ff 	mov.w	r0, #4294967295
 8007718:	601a      	str	r2, [r3, #0]
 800771a:	4770      	bx	lr
 800771c:	2001      	movs	r0, #1
 800771e:	700a      	strb	r2, [r1, #0]
 8007720:	4770      	bx	lr
	...

08007724 <fiprintf>:
 8007724:	b40e      	push	{r1, r2, r3}
 8007726:	b503      	push	{r0, r1, lr}
 8007728:	4601      	mov	r1, r0
 800772a:	ab03      	add	r3, sp, #12
 800772c:	4805      	ldr	r0, [pc, #20]	; (8007744 <fiprintf+0x20>)
 800772e:	f853 2b04 	ldr.w	r2, [r3], #4
 8007732:	6800      	ldr	r0, [r0, #0]
 8007734:	9301      	str	r3, [sp, #4]
 8007736:	f7ff f971 	bl	8006a1c <_vfiprintf_r>
 800773a:	b002      	add	sp, #8
 800773c:	f85d eb04 	ldr.w	lr, [sp], #4
 8007740:	b003      	add	sp, #12
 8007742:	4770      	bx	lr
 8007744:	2000007c 	.word	0x2000007c

08007748 <__swhatbuf_r>:
 8007748:	b570      	push	{r4, r5, r6, lr}
 800774a:	460c      	mov	r4, r1
 800774c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8007750:	4615      	mov	r5, r2
 8007752:	2900      	cmp	r1, #0
 8007754:	461e      	mov	r6, r3
 8007756:	b096      	sub	sp, #88	; 0x58
 8007758:	da0c      	bge.n	8007774 <__swhatbuf_r+0x2c>
 800775a:	89a3      	ldrh	r3, [r4, #12]
 800775c:	2100      	movs	r1, #0
 800775e:	f013 0f80 	tst.w	r3, #128	; 0x80
 8007762:	bf0c      	ite	eq
 8007764:	f44f 6380 	moveq.w	r3, #1024	; 0x400
 8007768:	2340      	movne	r3, #64	; 0x40
 800776a:	2000      	movs	r0, #0
 800776c:	6031      	str	r1, [r6, #0]
 800776e:	602b      	str	r3, [r5, #0]
 8007770:	b016      	add	sp, #88	; 0x58
 8007772:	bd70      	pop	{r4, r5, r6, pc}
 8007774:	466a      	mov	r2, sp
 8007776:	f000 f849 	bl	800780c <_fstat_r>
 800777a:	2800      	cmp	r0, #0
 800777c:	dbed      	blt.n	800775a <__swhatbuf_r+0x12>
 800777e:	9901      	ldr	r1, [sp, #4]
 8007780:	f401 4170 	and.w	r1, r1, #61440	; 0xf000
 8007784:	f5a1 5300 	sub.w	r3, r1, #8192	; 0x2000
 8007788:	4259      	negs	r1, r3
 800778a:	4159      	adcs	r1, r3
 800778c:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8007790:	e7eb      	b.n	800776a <__swhatbuf_r+0x22>

08007792 <__smakebuf_r>:
 8007792:	898b      	ldrh	r3, [r1, #12]
 8007794:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8007796:	079d      	lsls	r5, r3, #30
 8007798:	4606      	mov	r6, r0
 800779a:	460c      	mov	r4, r1
 800779c:	d507      	bpl.n	80077ae <__smakebuf_r+0x1c>
 800779e:	f104 0347 	add.w	r3, r4, #71	; 0x47
 80077a2:	6023      	str	r3, [r4, #0]
 80077a4:	6123      	str	r3, [r4, #16]
 80077a6:	2301      	movs	r3, #1
 80077a8:	6163      	str	r3, [r4, #20]
 80077aa:	b002      	add	sp, #8
 80077ac:	bd70      	pop	{r4, r5, r6, pc}
 80077ae:	466a      	mov	r2, sp
 80077b0:	ab01      	add	r3, sp, #4
 80077b2:	f7ff ffc9 	bl	8007748 <__swhatbuf_r>
 80077b6:	9900      	ldr	r1, [sp, #0]
 80077b8:	4605      	mov	r5, r0
 80077ba:	4630      	mov	r0, r6
 80077bc:	f7fd fbe8 	bl	8004f90 <_malloc_r>
 80077c0:	b948      	cbnz	r0, 80077d6 <__smakebuf_r+0x44>
 80077c2:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80077c6:	059a      	lsls	r2, r3, #22
 80077c8:	d4ef      	bmi.n	80077aa <__smakebuf_r+0x18>
 80077ca:	f023 0303 	bic.w	r3, r3, #3
 80077ce:	f043 0302 	orr.w	r3, r3, #2
 80077d2:	81a3      	strh	r3, [r4, #12]
 80077d4:	e7e3      	b.n	800779e <__smakebuf_r+0xc>
 80077d6:	89a3      	ldrh	r3, [r4, #12]
 80077d8:	6020      	str	r0, [r4, #0]
 80077da:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80077de:	81a3      	strh	r3, [r4, #12]
 80077e0:	9b00      	ldr	r3, [sp, #0]
 80077e2:	6120      	str	r0, [r4, #16]
 80077e4:	6163      	str	r3, [r4, #20]
 80077e6:	9b01      	ldr	r3, [sp, #4]
 80077e8:	b15b      	cbz	r3, 8007802 <__smakebuf_r+0x70>
 80077ea:	4630      	mov	r0, r6
 80077ec:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 80077f0:	f000 f81e 	bl	8007830 <_isatty_r>
 80077f4:	b128      	cbz	r0, 8007802 <__smakebuf_r+0x70>
 80077f6:	89a3      	ldrh	r3, [r4, #12]
 80077f8:	f023 0303 	bic.w	r3, r3, #3
 80077fc:	f043 0301 	orr.w	r3, r3, #1
 8007800:	81a3      	strh	r3, [r4, #12]
 8007802:	89a3      	ldrh	r3, [r4, #12]
 8007804:	431d      	orrs	r5, r3
 8007806:	81a5      	strh	r5, [r4, #12]
 8007808:	e7cf      	b.n	80077aa <__smakebuf_r+0x18>
	...

0800780c <_fstat_r>:
 800780c:	b538      	push	{r3, r4, r5, lr}
 800780e:	2300      	movs	r3, #0
 8007810:	4d06      	ldr	r5, [pc, #24]	; (800782c <_fstat_r+0x20>)
 8007812:	4604      	mov	r4, r0
 8007814:	4608      	mov	r0, r1
 8007816:	4611      	mov	r1, r2
 8007818:	602b      	str	r3, [r5, #0]
 800781a:	f7fb fb38 	bl	8002e8e <_fstat>
 800781e:	1c43      	adds	r3, r0, #1
 8007820:	d102      	bne.n	8007828 <_fstat_r+0x1c>
 8007822:	682b      	ldr	r3, [r5, #0]
 8007824:	b103      	cbz	r3, 8007828 <_fstat_r+0x1c>
 8007826:	6023      	str	r3, [r4, #0]
 8007828:	bd38      	pop	{r3, r4, r5, pc}
 800782a:	bf00      	nop
 800782c:	20000444 	.word	0x20000444

08007830 <_isatty_r>:
 8007830:	b538      	push	{r3, r4, r5, lr}
 8007832:	2300      	movs	r3, #0
 8007834:	4d05      	ldr	r5, [pc, #20]	; (800784c <_isatty_r+0x1c>)
 8007836:	4604      	mov	r4, r0
 8007838:	4608      	mov	r0, r1
 800783a:	602b      	str	r3, [r5, #0]
 800783c:	f7fb fb36 	bl	8002eac <_isatty>
 8007840:	1c43      	adds	r3, r0, #1
 8007842:	d102      	bne.n	800784a <_isatty_r+0x1a>
 8007844:	682b      	ldr	r3, [r5, #0]
 8007846:	b103      	cbz	r3, 800784a <_isatty_r+0x1a>
 8007848:	6023      	str	r3, [r4, #0]
 800784a:	bd38      	pop	{r3, r4, r5, pc}
 800784c:	20000444 	.word	0x20000444

08007850 <abort>:
 8007850:	2006      	movs	r0, #6
 8007852:	b508      	push	{r3, lr}
 8007854:	f000 f834 	bl	80078c0 <raise>
 8007858:	2001      	movs	r0, #1
 800785a:	f7fb fae6 	bl	8002e2a <_exit>

0800785e <_malloc_usable_size_r>:
 800785e:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8007862:	1f18      	subs	r0, r3, #4
 8007864:	2b00      	cmp	r3, #0
 8007866:	bfbc      	itt	lt
 8007868:	580b      	ldrlt	r3, [r1, r0]
 800786a:	18c0      	addlt	r0, r0, r3
 800786c:	4770      	bx	lr

0800786e <_raise_r>:
 800786e:	291f      	cmp	r1, #31
 8007870:	b538      	push	{r3, r4, r5, lr}
 8007872:	4604      	mov	r4, r0
 8007874:	460d      	mov	r5, r1
 8007876:	d904      	bls.n	8007882 <_raise_r+0x14>
 8007878:	2316      	movs	r3, #22
 800787a:	6003      	str	r3, [r0, #0]
 800787c:	f04f 30ff 	mov.w	r0, #4294967295
 8007880:	bd38      	pop	{r3, r4, r5, pc}
 8007882:	6bc2      	ldr	r2, [r0, #60]	; 0x3c
 8007884:	b112      	cbz	r2, 800788c <_raise_r+0x1e>
 8007886:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 800788a:	b94b      	cbnz	r3, 80078a0 <_raise_r+0x32>
 800788c:	4620      	mov	r0, r4
 800788e:	f000 f831 	bl	80078f4 <_getpid_r>
 8007892:	462a      	mov	r2, r5
 8007894:	4601      	mov	r1, r0
 8007896:	4620      	mov	r0, r4
 8007898:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800789c:	f000 b818 	b.w	80078d0 <_kill_r>
 80078a0:	2b01      	cmp	r3, #1
 80078a2:	d00a      	beq.n	80078ba <_raise_r+0x4c>
 80078a4:	1c59      	adds	r1, r3, #1
 80078a6:	d103      	bne.n	80078b0 <_raise_r+0x42>
 80078a8:	2316      	movs	r3, #22
 80078aa:	6003      	str	r3, [r0, #0]
 80078ac:	2001      	movs	r0, #1
 80078ae:	e7e7      	b.n	8007880 <_raise_r+0x12>
 80078b0:	2400      	movs	r4, #0
 80078b2:	4628      	mov	r0, r5
 80078b4:	f842 4025 	str.w	r4, [r2, r5, lsl #2]
 80078b8:	4798      	blx	r3
 80078ba:	2000      	movs	r0, #0
 80078bc:	e7e0      	b.n	8007880 <_raise_r+0x12>
	...

080078c0 <raise>:
 80078c0:	4b02      	ldr	r3, [pc, #8]	; (80078cc <raise+0xc>)
 80078c2:	4601      	mov	r1, r0
 80078c4:	6818      	ldr	r0, [r3, #0]
 80078c6:	f7ff bfd2 	b.w	800786e <_raise_r>
 80078ca:	bf00      	nop
 80078cc:	2000007c 	.word	0x2000007c

080078d0 <_kill_r>:
 80078d0:	b538      	push	{r3, r4, r5, lr}
 80078d2:	2300      	movs	r3, #0
 80078d4:	4d06      	ldr	r5, [pc, #24]	; (80078f0 <_kill_r+0x20>)
 80078d6:	4604      	mov	r4, r0
 80078d8:	4608      	mov	r0, r1
 80078da:	4611      	mov	r1, r2
 80078dc:	602b      	str	r3, [r5, #0]
 80078de:	f7fb fa94 	bl	8002e0a <_kill>
 80078e2:	1c43      	adds	r3, r0, #1
 80078e4:	d102      	bne.n	80078ec <_kill_r+0x1c>
 80078e6:	682b      	ldr	r3, [r5, #0]
 80078e8:	b103      	cbz	r3, 80078ec <_kill_r+0x1c>
 80078ea:	6023      	str	r3, [r4, #0]
 80078ec:	bd38      	pop	{r3, r4, r5, pc}
 80078ee:	bf00      	nop
 80078f0:	20000444 	.word	0x20000444

080078f4 <_getpid_r>:
 80078f4:	f7fb ba82 	b.w	8002dfc <_getpid>

080078f8 <pow>:
 80078f8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80078fc:	4614      	mov	r4, r2
 80078fe:	461d      	mov	r5, r3
 8007900:	4680      	mov	r8, r0
 8007902:	4689      	mov	r9, r1
 8007904:	f000 f9e4 	bl	8007cd0 <__ieee754_pow>
 8007908:	4622      	mov	r2, r4
 800790a:	4606      	mov	r6, r0
 800790c:	460f      	mov	r7, r1
 800790e:	462b      	mov	r3, r5
 8007910:	4620      	mov	r0, r4
 8007912:	4629      	mov	r1, r5
 8007914:	f7f9 f88a 	bl	8000a2c <__aeabi_dcmpun>
 8007918:	bbc8      	cbnz	r0, 800798e <pow+0x96>
 800791a:	2200      	movs	r2, #0
 800791c:	2300      	movs	r3, #0
 800791e:	4640      	mov	r0, r8
 8007920:	4649      	mov	r1, r9
 8007922:	f7f9 f851 	bl	80009c8 <__aeabi_dcmpeq>
 8007926:	b1b8      	cbz	r0, 8007958 <pow+0x60>
 8007928:	2200      	movs	r2, #0
 800792a:	2300      	movs	r3, #0
 800792c:	4620      	mov	r0, r4
 800792e:	4629      	mov	r1, r5
 8007930:	f7f9 f84a 	bl	80009c8 <__aeabi_dcmpeq>
 8007934:	2800      	cmp	r0, #0
 8007936:	d141      	bne.n	80079bc <pow+0xc4>
 8007938:	4620      	mov	r0, r4
 800793a:	4629      	mov	r1, r5
 800793c:	f000 f868 	bl	8007a10 <finite>
 8007940:	b328      	cbz	r0, 800798e <pow+0x96>
 8007942:	2200      	movs	r2, #0
 8007944:	2300      	movs	r3, #0
 8007946:	4620      	mov	r0, r4
 8007948:	4629      	mov	r1, r5
 800794a:	f7f9 f847 	bl	80009dc <__aeabi_dcmplt>
 800794e:	b1f0      	cbz	r0, 800798e <pow+0x96>
 8007950:	f7fc fbfe 	bl	8004150 <__errno>
 8007954:	2322      	movs	r3, #34	; 0x22
 8007956:	e019      	b.n	800798c <pow+0x94>
 8007958:	4630      	mov	r0, r6
 800795a:	4639      	mov	r1, r7
 800795c:	f000 f858 	bl	8007a10 <finite>
 8007960:	b9c8      	cbnz	r0, 8007996 <pow+0x9e>
 8007962:	4640      	mov	r0, r8
 8007964:	4649      	mov	r1, r9
 8007966:	f000 f853 	bl	8007a10 <finite>
 800796a:	b1a0      	cbz	r0, 8007996 <pow+0x9e>
 800796c:	4620      	mov	r0, r4
 800796e:	4629      	mov	r1, r5
 8007970:	f000 f84e 	bl	8007a10 <finite>
 8007974:	b178      	cbz	r0, 8007996 <pow+0x9e>
 8007976:	4632      	mov	r2, r6
 8007978:	463b      	mov	r3, r7
 800797a:	4630      	mov	r0, r6
 800797c:	4639      	mov	r1, r7
 800797e:	f7f9 f855 	bl	8000a2c <__aeabi_dcmpun>
 8007982:	2800      	cmp	r0, #0
 8007984:	d0e4      	beq.n	8007950 <pow+0x58>
 8007986:	f7fc fbe3 	bl	8004150 <__errno>
 800798a:	2321      	movs	r3, #33	; 0x21
 800798c:	6003      	str	r3, [r0, #0]
 800798e:	4630      	mov	r0, r6
 8007990:	4639      	mov	r1, r7
 8007992:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8007996:	2200      	movs	r2, #0
 8007998:	2300      	movs	r3, #0
 800799a:	4630      	mov	r0, r6
 800799c:	4639      	mov	r1, r7
 800799e:	f7f9 f813 	bl	80009c8 <__aeabi_dcmpeq>
 80079a2:	2800      	cmp	r0, #0
 80079a4:	d0f3      	beq.n	800798e <pow+0x96>
 80079a6:	4640      	mov	r0, r8
 80079a8:	4649      	mov	r1, r9
 80079aa:	f000 f831 	bl	8007a10 <finite>
 80079ae:	2800      	cmp	r0, #0
 80079b0:	d0ed      	beq.n	800798e <pow+0x96>
 80079b2:	4620      	mov	r0, r4
 80079b4:	4629      	mov	r1, r5
 80079b6:	f000 f82b 	bl	8007a10 <finite>
 80079ba:	e7c8      	b.n	800794e <pow+0x56>
 80079bc:	2600      	movs	r6, #0
 80079be:	4f01      	ldr	r7, [pc, #4]	; (80079c4 <pow+0xcc>)
 80079c0:	e7e5      	b.n	800798e <pow+0x96>
 80079c2:	bf00      	nop
 80079c4:	3ff00000 	.word	0x3ff00000

080079c8 <sqrt>:
 80079c8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80079ca:	4606      	mov	r6, r0
 80079cc:	460f      	mov	r7, r1
 80079ce:	f000 f825 	bl	8007a1c <__ieee754_sqrt>
 80079d2:	4632      	mov	r2, r6
 80079d4:	4604      	mov	r4, r0
 80079d6:	460d      	mov	r5, r1
 80079d8:	463b      	mov	r3, r7
 80079da:	4630      	mov	r0, r6
 80079dc:	4639      	mov	r1, r7
 80079de:	f7f9 f825 	bl	8000a2c <__aeabi_dcmpun>
 80079e2:	b990      	cbnz	r0, 8007a0a <sqrt+0x42>
 80079e4:	2200      	movs	r2, #0
 80079e6:	2300      	movs	r3, #0
 80079e8:	4630      	mov	r0, r6
 80079ea:	4639      	mov	r1, r7
 80079ec:	f7f8 fff6 	bl	80009dc <__aeabi_dcmplt>
 80079f0:	b158      	cbz	r0, 8007a0a <sqrt+0x42>
 80079f2:	f7fc fbad 	bl	8004150 <__errno>
 80079f6:	2321      	movs	r3, #33	; 0x21
 80079f8:	2200      	movs	r2, #0
 80079fa:	6003      	str	r3, [r0, #0]
 80079fc:	2300      	movs	r3, #0
 80079fe:	4610      	mov	r0, r2
 8007a00:	4619      	mov	r1, r3
 8007a02:	f7f8 fea3 	bl	800074c <__aeabi_ddiv>
 8007a06:	4604      	mov	r4, r0
 8007a08:	460d      	mov	r5, r1
 8007a0a:	4620      	mov	r0, r4
 8007a0c:	4629      	mov	r1, r5
 8007a0e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

08007a10 <finite>:
 8007a10:	f041 4000 	orr.w	r0, r1, #2147483648	; 0x80000000
 8007a14:	f500 1080 	add.w	r0, r0, #1048576	; 0x100000
 8007a18:	0fc0      	lsrs	r0, r0, #31
 8007a1a:	4770      	bx	lr

08007a1c <__ieee754_sqrt>:
 8007a1c:	f8df c1a0 	ldr.w	ip, [pc, #416]	; 8007bc0 <__ieee754_sqrt+0x1a4>
 8007a20:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8007a24:	ea3c 0c01 	bics.w	ip, ip, r1
 8007a28:	460b      	mov	r3, r1
 8007a2a:	4606      	mov	r6, r0
 8007a2c:	460d      	mov	r5, r1
 8007a2e:	460a      	mov	r2, r1
 8007a30:	4604      	mov	r4, r0
 8007a32:	d10e      	bne.n	8007a52 <__ieee754_sqrt+0x36>
 8007a34:	4602      	mov	r2, r0
 8007a36:	f7f8 fd5f 	bl	80004f8 <__aeabi_dmul>
 8007a3a:	4602      	mov	r2, r0
 8007a3c:	460b      	mov	r3, r1
 8007a3e:	4630      	mov	r0, r6
 8007a40:	4629      	mov	r1, r5
 8007a42:	f7f8 fba3 	bl	800018c <__adddf3>
 8007a46:	4606      	mov	r6, r0
 8007a48:	460d      	mov	r5, r1
 8007a4a:	4630      	mov	r0, r6
 8007a4c:	4629      	mov	r1, r5
 8007a4e:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8007a52:	2900      	cmp	r1, #0
 8007a54:	dc0d      	bgt.n	8007a72 <__ieee754_sqrt+0x56>
 8007a56:	f021 4c00 	bic.w	ip, r1, #2147483648	; 0x80000000
 8007a5a:	ea5c 0c00 	orrs.w	ip, ip, r0
 8007a5e:	d0f4      	beq.n	8007a4a <__ieee754_sqrt+0x2e>
 8007a60:	b139      	cbz	r1, 8007a72 <__ieee754_sqrt+0x56>
 8007a62:	4602      	mov	r2, r0
 8007a64:	f7f8 fb90 	bl	8000188 <__aeabi_dsub>
 8007a68:	4602      	mov	r2, r0
 8007a6a:	460b      	mov	r3, r1
 8007a6c:	f7f8 fe6e 	bl	800074c <__aeabi_ddiv>
 8007a70:	e7e9      	b.n	8007a46 <__ieee754_sqrt+0x2a>
 8007a72:	1512      	asrs	r2, r2, #20
 8007a74:	f000 8089 	beq.w	8007b8a <__ieee754_sqrt+0x16e>
 8007a78:	2500      	movs	r5, #0
 8007a7a:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8007a7e:	f2a2 36ff 	subw	r6, r2, #1023	; 0x3ff
 8007a82:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8007a86:	07d2      	lsls	r2, r2, #31
 8007a88:	bf5c      	itt	pl
 8007a8a:	005b      	lslpl	r3, r3, #1
 8007a8c:	eb03 73d4 	addpl.w	r3, r3, r4, lsr #31
 8007a90:	ea4f 0343 	mov.w	r3, r3, lsl #1
 8007a94:	bf58      	it	pl
 8007a96:	0064      	lslpl	r4, r4, #1
 8007a98:	eb03 73d4 	add.w	r3, r3, r4, lsr #31
 8007a9c:	0062      	lsls	r2, r4, #1
 8007a9e:	2016      	movs	r0, #22
 8007aa0:	4629      	mov	r1, r5
 8007aa2:	f44f 1400 	mov.w	r4, #2097152	; 0x200000
 8007aa6:	1076      	asrs	r6, r6, #1
 8007aa8:	190f      	adds	r7, r1, r4
 8007aaa:	429f      	cmp	r7, r3
 8007aac:	bfde      	ittt	le
 8007aae:	1bdb      	suble	r3, r3, r7
 8007ab0:	1939      	addle	r1, r7, r4
 8007ab2:	192d      	addle	r5, r5, r4
 8007ab4:	005b      	lsls	r3, r3, #1
 8007ab6:	3801      	subs	r0, #1
 8007ab8:	eb03 73d2 	add.w	r3, r3, r2, lsr #31
 8007abc:	ea4f 0454 	mov.w	r4, r4, lsr #1
 8007ac0:	ea4f 0242 	mov.w	r2, r2, lsl #1
 8007ac4:	d1f0      	bne.n	8007aa8 <__ieee754_sqrt+0x8c>
 8007ac6:	4604      	mov	r4, r0
 8007ac8:	2720      	movs	r7, #32
 8007aca:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
 8007ace:	428b      	cmp	r3, r1
 8007ad0:	eb0c 0e00 	add.w	lr, ip, r0
 8007ad4:	dc02      	bgt.n	8007adc <__ieee754_sqrt+0xc0>
 8007ad6:	d113      	bne.n	8007b00 <__ieee754_sqrt+0xe4>
 8007ad8:	4596      	cmp	lr, r2
 8007ada:	d811      	bhi.n	8007b00 <__ieee754_sqrt+0xe4>
 8007adc:	f1be 0f00 	cmp.w	lr, #0
 8007ae0:	eb0e 000c 	add.w	r0, lr, ip
 8007ae4:	da56      	bge.n	8007b94 <__ieee754_sqrt+0x178>
 8007ae6:	2800      	cmp	r0, #0
 8007ae8:	db54      	blt.n	8007b94 <__ieee754_sqrt+0x178>
 8007aea:	f101 0801 	add.w	r8, r1, #1
 8007aee:	1a5b      	subs	r3, r3, r1
 8007af0:	4641      	mov	r1, r8
 8007af2:	4596      	cmp	lr, r2
 8007af4:	bf88      	it	hi
 8007af6:	f103 33ff 	addhi.w	r3, r3, #4294967295
 8007afa:	eba2 020e 	sub.w	r2, r2, lr
 8007afe:	4464      	add	r4, ip
 8007b00:	005b      	lsls	r3, r3, #1
 8007b02:	3f01      	subs	r7, #1
 8007b04:	eb03 73d2 	add.w	r3, r3, r2, lsr #31
 8007b08:	ea4f 0c5c 	mov.w	ip, ip, lsr #1
 8007b0c:	ea4f 0242 	mov.w	r2, r2, lsl #1
 8007b10:	d1dd      	bne.n	8007ace <__ieee754_sqrt+0xb2>
 8007b12:	4313      	orrs	r3, r2
 8007b14:	d01b      	beq.n	8007b4e <__ieee754_sqrt+0x132>
 8007b16:	f8df a0ac 	ldr.w	sl, [pc, #172]	; 8007bc4 <__ieee754_sqrt+0x1a8>
 8007b1a:	f8df b0ac 	ldr.w	fp, [pc, #172]	; 8007bc8 <__ieee754_sqrt+0x1ac>
 8007b1e:	e9da 0100 	ldrd	r0, r1, [sl]
 8007b22:	e9db 2300 	ldrd	r2, r3, [fp]
 8007b26:	f7f8 fb2f 	bl	8000188 <__aeabi_dsub>
 8007b2a:	e9da 8900 	ldrd	r8, r9, [sl]
 8007b2e:	4602      	mov	r2, r0
 8007b30:	460b      	mov	r3, r1
 8007b32:	4640      	mov	r0, r8
 8007b34:	4649      	mov	r1, r9
 8007b36:	f7f8 ff5b 	bl	80009f0 <__aeabi_dcmple>
 8007b3a:	b140      	cbz	r0, 8007b4e <__ieee754_sqrt+0x132>
 8007b3c:	e9da 0100 	ldrd	r0, r1, [sl]
 8007b40:	e9db 2300 	ldrd	r2, r3, [fp]
 8007b44:	f1b4 3fff 	cmp.w	r4, #4294967295
 8007b48:	d126      	bne.n	8007b98 <__ieee754_sqrt+0x17c>
 8007b4a:	463c      	mov	r4, r7
 8007b4c:	3501      	adds	r5, #1
 8007b4e:	106b      	asrs	r3, r5, #1
 8007b50:	0864      	lsrs	r4, r4, #1
 8007b52:	f103 537f 	add.w	r3, r3, #1069547520	; 0x3fc00000
 8007b56:	07ea      	lsls	r2, r5, #31
 8007b58:	f503 1300 	add.w	r3, r3, #2097152	; 0x200000
 8007b5c:	bf48      	it	mi
 8007b5e:	f044 4400 	orrmi.w	r4, r4, #2147483648	; 0x80000000
 8007b62:	4620      	mov	r0, r4
 8007b64:	eb03 5106 	add.w	r1, r3, r6, lsl #20
 8007b68:	e76d      	b.n	8007a46 <__ieee754_sqrt+0x2a>
 8007b6a:	0ae3      	lsrs	r3, r4, #11
 8007b6c:	3915      	subs	r1, #21
 8007b6e:	0564      	lsls	r4, r4, #21
 8007b70:	2b00      	cmp	r3, #0
 8007b72:	d0fa      	beq.n	8007b6a <__ieee754_sqrt+0x14e>
 8007b74:	02d8      	lsls	r0, r3, #11
 8007b76:	d50a      	bpl.n	8007b8e <__ieee754_sqrt+0x172>
 8007b78:	f1c2 0020 	rsb	r0, r2, #32
 8007b7c:	fa24 f000 	lsr.w	r0, r4, r0
 8007b80:	1e55      	subs	r5, r2, #1
 8007b82:	4094      	lsls	r4, r2
 8007b84:	4303      	orrs	r3, r0
 8007b86:	1b4a      	subs	r2, r1, r5
 8007b88:	e776      	b.n	8007a78 <__ieee754_sqrt+0x5c>
 8007b8a:	4611      	mov	r1, r2
 8007b8c:	e7f0      	b.n	8007b70 <__ieee754_sqrt+0x154>
 8007b8e:	005b      	lsls	r3, r3, #1
 8007b90:	3201      	adds	r2, #1
 8007b92:	e7ef      	b.n	8007b74 <__ieee754_sqrt+0x158>
 8007b94:	4688      	mov	r8, r1
 8007b96:	e7aa      	b.n	8007aee <__ieee754_sqrt+0xd2>
 8007b98:	f7f8 faf8 	bl	800018c <__adddf3>
 8007b9c:	e9da 8900 	ldrd	r8, r9, [sl]
 8007ba0:	4602      	mov	r2, r0
 8007ba2:	460b      	mov	r3, r1
 8007ba4:	4640      	mov	r0, r8
 8007ba6:	4649      	mov	r1, r9
 8007ba8:	f7f8 ff18 	bl	80009dc <__aeabi_dcmplt>
 8007bac:	b120      	cbz	r0, 8007bb8 <__ieee754_sqrt+0x19c>
 8007bae:	1ca1      	adds	r1, r4, #2
 8007bb0:	bf08      	it	eq
 8007bb2:	3501      	addeq	r5, #1
 8007bb4:	3402      	adds	r4, #2
 8007bb6:	e7ca      	b.n	8007b4e <__ieee754_sqrt+0x132>
 8007bb8:	3401      	adds	r4, #1
 8007bba:	f024 0401 	bic.w	r4, r4, #1
 8007bbe:	e7c6      	b.n	8007b4e <__ieee754_sqrt+0x132>
 8007bc0:	7ff00000 	.word	0x7ff00000
 8007bc4:	200001f0 	.word	0x200001f0
 8007bc8:	200001f8 	.word	0x200001f8
 8007bcc:	00000000 	.word	0x00000000

08007bd0 <floor>:
 8007bd0:	f3c1 520a 	ubfx	r2, r1, #20, #11
 8007bd4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8007bd8:	f2a2 36ff 	subw	r6, r2, #1023	; 0x3ff
 8007bdc:	2e13      	cmp	r6, #19
 8007bde:	460b      	mov	r3, r1
 8007be0:	4607      	mov	r7, r0
 8007be2:	460c      	mov	r4, r1
 8007be4:	4605      	mov	r5, r0
 8007be6:	dc32      	bgt.n	8007c4e <floor+0x7e>
 8007be8:	2e00      	cmp	r6, #0
 8007bea:	da14      	bge.n	8007c16 <floor+0x46>
 8007bec:	a334      	add	r3, pc, #208	; (adr r3, 8007cc0 <floor+0xf0>)
 8007bee:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007bf2:	f7f8 facb 	bl	800018c <__adddf3>
 8007bf6:	2200      	movs	r2, #0
 8007bf8:	2300      	movs	r3, #0
 8007bfa:	f7f8 ff0d 	bl	8000a18 <__aeabi_dcmpgt>
 8007bfe:	b138      	cbz	r0, 8007c10 <floor+0x40>
 8007c00:	2c00      	cmp	r4, #0
 8007c02:	da56      	bge.n	8007cb2 <floor+0xe2>
 8007c04:	f024 4400 	bic.w	r4, r4, #2147483648	; 0x80000000
 8007c08:	4325      	orrs	r5, r4
 8007c0a:	d055      	beq.n	8007cb8 <floor+0xe8>
 8007c0c:	2500      	movs	r5, #0
 8007c0e:	4c2e      	ldr	r4, [pc, #184]	; (8007cc8 <floor+0xf8>)
 8007c10:	4623      	mov	r3, r4
 8007c12:	462f      	mov	r7, r5
 8007c14:	e025      	b.n	8007c62 <floor+0x92>
 8007c16:	4a2d      	ldr	r2, [pc, #180]	; (8007ccc <floor+0xfc>)
 8007c18:	fa42 f806 	asr.w	r8, r2, r6
 8007c1c:	ea01 0208 	and.w	r2, r1, r8
 8007c20:	4302      	orrs	r2, r0
 8007c22:	d01e      	beq.n	8007c62 <floor+0x92>
 8007c24:	a326      	add	r3, pc, #152	; (adr r3, 8007cc0 <floor+0xf0>)
 8007c26:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007c2a:	f7f8 faaf 	bl	800018c <__adddf3>
 8007c2e:	2200      	movs	r2, #0
 8007c30:	2300      	movs	r3, #0
 8007c32:	f7f8 fef1 	bl	8000a18 <__aeabi_dcmpgt>
 8007c36:	2800      	cmp	r0, #0
 8007c38:	d0ea      	beq.n	8007c10 <floor+0x40>
 8007c3a:	2c00      	cmp	r4, #0
 8007c3c:	bfbe      	ittt	lt
 8007c3e:	f44f 1380 	movlt.w	r3, #1048576	; 0x100000
 8007c42:	4133      	asrlt	r3, r6
 8007c44:	18e4      	addlt	r4, r4, r3
 8007c46:	2500      	movs	r5, #0
 8007c48:	ea24 0408 	bic.w	r4, r4, r8
 8007c4c:	e7e0      	b.n	8007c10 <floor+0x40>
 8007c4e:	2e33      	cmp	r6, #51	; 0x33
 8007c50:	dd0b      	ble.n	8007c6a <floor+0x9a>
 8007c52:	f5b6 6f80 	cmp.w	r6, #1024	; 0x400
 8007c56:	d104      	bne.n	8007c62 <floor+0x92>
 8007c58:	4602      	mov	r2, r0
 8007c5a:	f7f8 fa97 	bl	800018c <__adddf3>
 8007c5e:	4607      	mov	r7, r0
 8007c60:	460b      	mov	r3, r1
 8007c62:	4638      	mov	r0, r7
 8007c64:	4619      	mov	r1, r3
 8007c66:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8007c6a:	f04f 38ff 	mov.w	r8, #4294967295
 8007c6e:	f2a2 4213 	subw	r2, r2, #1043	; 0x413
 8007c72:	fa28 f802 	lsr.w	r8, r8, r2
 8007c76:	ea10 0f08 	tst.w	r0, r8
 8007c7a:	d0f2      	beq.n	8007c62 <floor+0x92>
 8007c7c:	a310      	add	r3, pc, #64	; (adr r3, 8007cc0 <floor+0xf0>)
 8007c7e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007c82:	f7f8 fa83 	bl	800018c <__adddf3>
 8007c86:	2200      	movs	r2, #0
 8007c88:	2300      	movs	r3, #0
 8007c8a:	f7f8 fec5 	bl	8000a18 <__aeabi_dcmpgt>
 8007c8e:	2800      	cmp	r0, #0
 8007c90:	d0be      	beq.n	8007c10 <floor+0x40>
 8007c92:	2c00      	cmp	r4, #0
 8007c94:	da0a      	bge.n	8007cac <floor+0xdc>
 8007c96:	2e14      	cmp	r6, #20
 8007c98:	d101      	bne.n	8007c9e <floor+0xce>
 8007c9a:	3401      	adds	r4, #1
 8007c9c:	e006      	b.n	8007cac <floor+0xdc>
 8007c9e:	2301      	movs	r3, #1
 8007ca0:	f1c6 0634 	rsb	r6, r6, #52	; 0x34
 8007ca4:	40b3      	lsls	r3, r6
 8007ca6:	441d      	add	r5, r3
 8007ca8:	42af      	cmp	r7, r5
 8007caa:	d8f6      	bhi.n	8007c9a <floor+0xca>
 8007cac:	ea25 0508 	bic.w	r5, r5, r8
 8007cb0:	e7ae      	b.n	8007c10 <floor+0x40>
 8007cb2:	2500      	movs	r5, #0
 8007cb4:	462c      	mov	r4, r5
 8007cb6:	e7ab      	b.n	8007c10 <floor+0x40>
 8007cb8:	f04f 4400 	mov.w	r4, #2147483648	; 0x80000000
 8007cbc:	e7a8      	b.n	8007c10 <floor+0x40>
 8007cbe:	bf00      	nop
 8007cc0:	8800759c 	.word	0x8800759c
 8007cc4:	7e37e43c 	.word	0x7e37e43c
 8007cc8:	bff00000 	.word	0xbff00000
 8007ccc:	000fffff 	.word	0x000fffff

08007cd0 <__ieee754_pow>:
 8007cd0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8007cd4:	b093      	sub	sp, #76	; 0x4c
 8007cd6:	e9cd 2302 	strd	r2, r3, [sp, #8]
 8007cda:	e9dd 2702 	ldrd	r2, r7, [sp, #8]
 8007cde:	f027 4600 	bic.w	r6, r7, #2147483648	; 0x80000000
 8007ce2:	4689      	mov	r9, r1
 8007ce4:	ea56 0102 	orrs.w	r1, r6, r2
 8007ce8:	4680      	mov	r8, r0
 8007cea:	d111      	bne.n	8007d10 <__ieee754_pow+0x40>
 8007cec:	1803      	adds	r3, r0, r0
 8007cee:	f489 2200 	eor.w	r2, r9, #524288	; 0x80000
 8007cf2:	4152      	adcs	r2, r2
 8007cf4:	4299      	cmp	r1, r3
 8007cf6:	4b82      	ldr	r3, [pc, #520]	; (8007f00 <__ieee754_pow+0x230>)
 8007cf8:	4193      	sbcs	r3, r2
 8007cfa:	f080 84ba 	bcs.w	8008672 <__ieee754_pow+0x9a2>
 8007cfe:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8007d02:	4640      	mov	r0, r8
 8007d04:	4649      	mov	r1, r9
 8007d06:	f7f8 fa41 	bl	800018c <__adddf3>
 8007d0a:	4683      	mov	fp, r0
 8007d0c:	468c      	mov	ip, r1
 8007d0e:	e06f      	b.n	8007df0 <__ieee754_pow+0x120>
 8007d10:	4b7c      	ldr	r3, [pc, #496]	; (8007f04 <__ieee754_pow+0x234>)
 8007d12:	f029 4400 	bic.w	r4, r9, #2147483648	; 0x80000000
 8007d16:	429c      	cmp	r4, r3
 8007d18:	464d      	mov	r5, r9
 8007d1a:	4682      	mov	sl, r0
 8007d1c:	dc06      	bgt.n	8007d2c <__ieee754_pow+0x5c>
 8007d1e:	d101      	bne.n	8007d24 <__ieee754_pow+0x54>
 8007d20:	2800      	cmp	r0, #0
 8007d22:	d1ec      	bne.n	8007cfe <__ieee754_pow+0x2e>
 8007d24:	429e      	cmp	r6, r3
 8007d26:	dc01      	bgt.n	8007d2c <__ieee754_pow+0x5c>
 8007d28:	d10f      	bne.n	8007d4a <__ieee754_pow+0x7a>
 8007d2a:	b172      	cbz	r2, 8007d4a <__ieee754_pow+0x7a>
 8007d2c:	f105 4540 	add.w	r5, r5, #3221225472	; 0xc0000000
 8007d30:	f505 1580 	add.w	r5, r5, #1048576	; 0x100000
 8007d34:	ea55 050a 	orrs.w	r5, r5, sl
 8007d38:	d1e1      	bne.n	8007cfe <__ieee754_pow+0x2e>
 8007d3a:	e9dd 3202 	ldrd	r3, r2, [sp, #8]
 8007d3e:	18db      	adds	r3, r3, r3
 8007d40:	f482 2200 	eor.w	r2, r2, #524288	; 0x80000
 8007d44:	4152      	adcs	r2, r2
 8007d46:	429d      	cmp	r5, r3
 8007d48:	e7d5      	b.n	8007cf6 <__ieee754_pow+0x26>
 8007d4a:	2d00      	cmp	r5, #0
 8007d4c:	da39      	bge.n	8007dc2 <__ieee754_pow+0xf2>
 8007d4e:	4b6e      	ldr	r3, [pc, #440]	; (8007f08 <__ieee754_pow+0x238>)
 8007d50:	429e      	cmp	r6, r3
 8007d52:	dc52      	bgt.n	8007dfa <__ieee754_pow+0x12a>
 8007d54:	f1a3 7354 	sub.w	r3, r3, #55574528	; 0x3500000
 8007d58:	429e      	cmp	r6, r3
 8007d5a:	f340 849d 	ble.w	8008698 <__ieee754_pow+0x9c8>
 8007d5e:	1533      	asrs	r3, r6, #20
 8007d60:	f2a3 33ff 	subw	r3, r3, #1023	; 0x3ff
 8007d64:	2b14      	cmp	r3, #20
 8007d66:	dd0f      	ble.n	8007d88 <__ieee754_pow+0xb8>
 8007d68:	f1c3 0334 	rsb	r3, r3, #52	; 0x34
 8007d6c:	fa22 f103 	lsr.w	r1, r2, r3
 8007d70:	fa01 f303 	lsl.w	r3, r1, r3
 8007d74:	4293      	cmp	r3, r2
 8007d76:	f040 848f 	bne.w	8008698 <__ieee754_pow+0x9c8>
 8007d7a:	f001 0101 	and.w	r1, r1, #1
 8007d7e:	f1c1 0302 	rsb	r3, r1, #2
 8007d82:	9300      	str	r3, [sp, #0]
 8007d84:	b182      	cbz	r2, 8007da8 <__ieee754_pow+0xd8>
 8007d86:	e05d      	b.n	8007e44 <__ieee754_pow+0x174>
 8007d88:	2a00      	cmp	r2, #0
 8007d8a:	d159      	bne.n	8007e40 <__ieee754_pow+0x170>
 8007d8c:	f1c3 0314 	rsb	r3, r3, #20
 8007d90:	fa46 f103 	asr.w	r1, r6, r3
 8007d94:	fa01 f303 	lsl.w	r3, r1, r3
 8007d98:	42b3      	cmp	r3, r6
 8007d9a:	f040 847a 	bne.w	8008692 <__ieee754_pow+0x9c2>
 8007d9e:	f001 0101 	and.w	r1, r1, #1
 8007da2:	f1c1 0302 	rsb	r3, r1, #2
 8007da6:	9300      	str	r3, [sp, #0]
 8007da8:	4b58      	ldr	r3, [pc, #352]	; (8007f0c <__ieee754_pow+0x23c>)
 8007daa:	429e      	cmp	r6, r3
 8007dac:	d132      	bne.n	8007e14 <__ieee754_pow+0x144>
 8007dae:	2f00      	cmp	r7, #0
 8007db0:	f280 846b 	bge.w	800868a <__ieee754_pow+0x9ba>
 8007db4:	4642      	mov	r2, r8
 8007db6:	464b      	mov	r3, r9
 8007db8:	2000      	movs	r0, #0
 8007dba:	4954      	ldr	r1, [pc, #336]	; (8007f0c <__ieee754_pow+0x23c>)
 8007dbc:	f7f8 fcc6 	bl	800074c <__aeabi_ddiv>
 8007dc0:	e7a3      	b.n	8007d0a <__ieee754_pow+0x3a>
 8007dc2:	2300      	movs	r3, #0
 8007dc4:	9300      	str	r3, [sp, #0]
 8007dc6:	2a00      	cmp	r2, #0
 8007dc8:	d13c      	bne.n	8007e44 <__ieee754_pow+0x174>
 8007dca:	4b4e      	ldr	r3, [pc, #312]	; (8007f04 <__ieee754_pow+0x234>)
 8007dcc:	429e      	cmp	r6, r3
 8007dce:	d1eb      	bne.n	8007da8 <__ieee754_pow+0xd8>
 8007dd0:	f104 4340 	add.w	r3, r4, #3221225472	; 0xc0000000
 8007dd4:	f503 1380 	add.w	r3, r3, #1048576	; 0x100000
 8007dd8:	ea53 030a 	orrs.w	r3, r3, sl
 8007ddc:	f000 8449 	beq.w	8008672 <__ieee754_pow+0x9a2>
 8007de0:	4b4b      	ldr	r3, [pc, #300]	; (8007f10 <__ieee754_pow+0x240>)
 8007de2:	429c      	cmp	r4, r3
 8007de4:	dd0b      	ble.n	8007dfe <__ieee754_pow+0x12e>
 8007de6:	2f00      	cmp	r7, #0
 8007de8:	f2c0 8449 	blt.w	800867e <__ieee754_pow+0x9ae>
 8007dec:	e9dd bc02 	ldrd	fp, ip, [sp, #8]
 8007df0:	4658      	mov	r0, fp
 8007df2:	4661      	mov	r1, ip
 8007df4:	b013      	add	sp, #76	; 0x4c
 8007df6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8007dfa:	2302      	movs	r3, #2
 8007dfc:	e7e2      	b.n	8007dc4 <__ieee754_pow+0xf4>
 8007dfe:	2f00      	cmp	r7, #0
 8007e00:	f04f 0b00 	mov.w	fp, #0
 8007e04:	f04f 0c00 	mov.w	ip, #0
 8007e08:	daf2      	bge.n	8007df0 <__ieee754_pow+0x120>
 8007e0a:	e9dd b302 	ldrd	fp, r3, [sp, #8]
 8007e0e:	f103 4c00 	add.w	ip, r3, #2147483648	; 0x80000000
 8007e12:	e7ed      	b.n	8007df0 <__ieee754_pow+0x120>
 8007e14:	f1b7 4f80 	cmp.w	r7, #1073741824	; 0x40000000
 8007e18:	d106      	bne.n	8007e28 <__ieee754_pow+0x158>
 8007e1a:	4642      	mov	r2, r8
 8007e1c:	464b      	mov	r3, r9
 8007e1e:	4640      	mov	r0, r8
 8007e20:	4649      	mov	r1, r9
 8007e22:	f7f8 fb69 	bl	80004f8 <__aeabi_dmul>
 8007e26:	e770      	b.n	8007d0a <__ieee754_pow+0x3a>
 8007e28:	4b3a      	ldr	r3, [pc, #232]	; (8007f14 <__ieee754_pow+0x244>)
 8007e2a:	429f      	cmp	r7, r3
 8007e2c:	d10a      	bne.n	8007e44 <__ieee754_pow+0x174>
 8007e2e:	2d00      	cmp	r5, #0
 8007e30:	db08      	blt.n	8007e44 <__ieee754_pow+0x174>
 8007e32:	4640      	mov	r0, r8
 8007e34:	4649      	mov	r1, r9
 8007e36:	b013      	add	sp, #76	; 0x4c
 8007e38:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8007e3c:	f7ff bdee 	b.w	8007a1c <__ieee754_sqrt>
 8007e40:	2300      	movs	r3, #0
 8007e42:	9300      	str	r3, [sp, #0]
 8007e44:	4640      	mov	r0, r8
 8007e46:	4649      	mov	r1, r9
 8007e48:	f000 fc58 	bl	80086fc <fabs>
 8007e4c:	4683      	mov	fp, r0
 8007e4e:	468c      	mov	ip, r1
 8007e50:	f1ba 0f00 	cmp.w	sl, #0
 8007e54:	d128      	bne.n	8007ea8 <__ieee754_pow+0x1d8>
 8007e56:	b124      	cbz	r4, 8007e62 <__ieee754_pow+0x192>
 8007e58:	4b2c      	ldr	r3, [pc, #176]	; (8007f0c <__ieee754_pow+0x23c>)
 8007e5a:	f025 4240 	bic.w	r2, r5, #3221225472	; 0xc0000000
 8007e5e:	429a      	cmp	r2, r3
 8007e60:	d122      	bne.n	8007ea8 <__ieee754_pow+0x1d8>
 8007e62:	2f00      	cmp	r7, #0
 8007e64:	da07      	bge.n	8007e76 <__ieee754_pow+0x1a6>
 8007e66:	465a      	mov	r2, fp
 8007e68:	4663      	mov	r3, ip
 8007e6a:	2000      	movs	r0, #0
 8007e6c:	4927      	ldr	r1, [pc, #156]	; (8007f0c <__ieee754_pow+0x23c>)
 8007e6e:	f7f8 fc6d 	bl	800074c <__aeabi_ddiv>
 8007e72:	4683      	mov	fp, r0
 8007e74:	468c      	mov	ip, r1
 8007e76:	2d00      	cmp	r5, #0
 8007e78:	daba      	bge.n	8007df0 <__ieee754_pow+0x120>
 8007e7a:	9b00      	ldr	r3, [sp, #0]
 8007e7c:	f104 4440 	add.w	r4, r4, #3221225472	; 0xc0000000
 8007e80:	f504 1480 	add.w	r4, r4, #1048576	; 0x100000
 8007e84:	431c      	orrs	r4, r3
 8007e86:	d108      	bne.n	8007e9a <__ieee754_pow+0x1ca>
 8007e88:	465a      	mov	r2, fp
 8007e8a:	4663      	mov	r3, ip
 8007e8c:	4658      	mov	r0, fp
 8007e8e:	4661      	mov	r1, ip
 8007e90:	f7f8 f97a 	bl	8000188 <__aeabi_dsub>
 8007e94:	4602      	mov	r2, r0
 8007e96:	460b      	mov	r3, r1
 8007e98:	e790      	b.n	8007dbc <__ieee754_pow+0xec>
 8007e9a:	9b00      	ldr	r3, [sp, #0]
 8007e9c:	2b01      	cmp	r3, #1
 8007e9e:	d1a7      	bne.n	8007df0 <__ieee754_pow+0x120>
 8007ea0:	f10c 4300 	add.w	r3, ip, #2147483648	; 0x80000000
 8007ea4:	469c      	mov	ip, r3
 8007ea6:	e7a3      	b.n	8007df0 <__ieee754_pow+0x120>
 8007ea8:	0feb      	lsrs	r3, r5, #31
 8007eaa:	3b01      	subs	r3, #1
 8007eac:	930c      	str	r3, [sp, #48]	; 0x30
 8007eae:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8007eb0:	9b00      	ldr	r3, [sp, #0]
 8007eb2:	4313      	orrs	r3, r2
 8007eb4:	d104      	bne.n	8007ec0 <__ieee754_pow+0x1f0>
 8007eb6:	4642      	mov	r2, r8
 8007eb8:	464b      	mov	r3, r9
 8007eba:	4640      	mov	r0, r8
 8007ebc:	4649      	mov	r1, r9
 8007ebe:	e7e7      	b.n	8007e90 <__ieee754_pow+0x1c0>
 8007ec0:	4b15      	ldr	r3, [pc, #84]	; (8007f18 <__ieee754_pow+0x248>)
 8007ec2:	429e      	cmp	r6, r3
 8007ec4:	f340 80f6 	ble.w	80080b4 <__ieee754_pow+0x3e4>
 8007ec8:	f103 7304 	add.w	r3, r3, #34603008	; 0x2100000
 8007ecc:	429e      	cmp	r6, r3
 8007ece:	4b10      	ldr	r3, [pc, #64]	; (8007f10 <__ieee754_pow+0x240>)
 8007ed0:	dd09      	ble.n	8007ee6 <__ieee754_pow+0x216>
 8007ed2:	429c      	cmp	r4, r3
 8007ed4:	dc0c      	bgt.n	8007ef0 <__ieee754_pow+0x220>
 8007ed6:	2f00      	cmp	r7, #0
 8007ed8:	da0c      	bge.n	8007ef4 <__ieee754_pow+0x224>
 8007eda:	2000      	movs	r0, #0
 8007edc:	b013      	add	sp, #76	; 0x4c
 8007ede:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8007ee2:	f000 bcb2 	b.w	800884a <__math_oflow>
 8007ee6:	429c      	cmp	r4, r3
 8007ee8:	dbf5      	blt.n	8007ed6 <__ieee754_pow+0x206>
 8007eea:	4b08      	ldr	r3, [pc, #32]	; (8007f0c <__ieee754_pow+0x23c>)
 8007eec:	429c      	cmp	r4, r3
 8007eee:	dd15      	ble.n	8007f1c <__ieee754_pow+0x24c>
 8007ef0:	2f00      	cmp	r7, #0
 8007ef2:	dcf2      	bgt.n	8007eda <__ieee754_pow+0x20a>
 8007ef4:	2000      	movs	r0, #0
 8007ef6:	b013      	add	sp, #76	; 0x4c
 8007ef8:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8007efc:	f000 bca0 	b.w	8008840 <__math_uflow>
 8007f00:	fff00000 	.word	0xfff00000
 8007f04:	7ff00000 	.word	0x7ff00000
 8007f08:	433fffff 	.word	0x433fffff
 8007f0c:	3ff00000 	.word	0x3ff00000
 8007f10:	3fefffff 	.word	0x3fefffff
 8007f14:	3fe00000 	.word	0x3fe00000
 8007f18:	41e00000 	.word	0x41e00000
 8007f1c:	4661      	mov	r1, ip
 8007f1e:	2200      	movs	r2, #0
 8007f20:	4658      	mov	r0, fp
 8007f22:	4b5f      	ldr	r3, [pc, #380]	; (80080a0 <__ieee754_pow+0x3d0>)
 8007f24:	f7f8 f930 	bl	8000188 <__aeabi_dsub>
 8007f28:	a355      	add	r3, pc, #340	; (adr r3, 8008080 <__ieee754_pow+0x3b0>)
 8007f2a:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007f2e:	4604      	mov	r4, r0
 8007f30:	460d      	mov	r5, r1
 8007f32:	f7f8 fae1 	bl	80004f8 <__aeabi_dmul>
 8007f36:	a354      	add	r3, pc, #336	; (adr r3, 8008088 <__ieee754_pow+0x3b8>)
 8007f38:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007f3c:	4606      	mov	r6, r0
 8007f3e:	460f      	mov	r7, r1
 8007f40:	4620      	mov	r0, r4
 8007f42:	4629      	mov	r1, r5
 8007f44:	f7f8 fad8 	bl	80004f8 <__aeabi_dmul>
 8007f48:	2200      	movs	r2, #0
 8007f4a:	4682      	mov	sl, r0
 8007f4c:	468b      	mov	fp, r1
 8007f4e:	4620      	mov	r0, r4
 8007f50:	4629      	mov	r1, r5
 8007f52:	4b54      	ldr	r3, [pc, #336]	; (80080a4 <__ieee754_pow+0x3d4>)
 8007f54:	f7f8 fad0 	bl	80004f8 <__aeabi_dmul>
 8007f58:	4602      	mov	r2, r0
 8007f5a:	460b      	mov	r3, r1
 8007f5c:	a14c      	add	r1, pc, #304	; (adr r1, 8008090 <__ieee754_pow+0x3c0>)
 8007f5e:	e9d1 0100 	ldrd	r0, r1, [r1]
 8007f62:	f7f8 f911 	bl	8000188 <__aeabi_dsub>
 8007f66:	4622      	mov	r2, r4
 8007f68:	462b      	mov	r3, r5
 8007f6a:	f7f8 fac5 	bl	80004f8 <__aeabi_dmul>
 8007f6e:	4602      	mov	r2, r0
 8007f70:	460b      	mov	r3, r1
 8007f72:	2000      	movs	r0, #0
 8007f74:	494c      	ldr	r1, [pc, #304]	; (80080a8 <__ieee754_pow+0x3d8>)
 8007f76:	f7f8 f907 	bl	8000188 <__aeabi_dsub>
 8007f7a:	4622      	mov	r2, r4
 8007f7c:	462b      	mov	r3, r5
 8007f7e:	4680      	mov	r8, r0
 8007f80:	4689      	mov	r9, r1
 8007f82:	4620      	mov	r0, r4
 8007f84:	4629      	mov	r1, r5
 8007f86:	f7f8 fab7 	bl	80004f8 <__aeabi_dmul>
 8007f8a:	4602      	mov	r2, r0
 8007f8c:	460b      	mov	r3, r1
 8007f8e:	4640      	mov	r0, r8
 8007f90:	4649      	mov	r1, r9
 8007f92:	f7f8 fab1 	bl	80004f8 <__aeabi_dmul>
 8007f96:	a340      	add	r3, pc, #256	; (adr r3, 8008098 <__ieee754_pow+0x3c8>)
 8007f98:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007f9c:	f7f8 faac 	bl	80004f8 <__aeabi_dmul>
 8007fa0:	4602      	mov	r2, r0
 8007fa2:	460b      	mov	r3, r1
 8007fa4:	4650      	mov	r0, sl
 8007fa6:	4659      	mov	r1, fp
 8007fa8:	f7f8 f8ee 	bl	8000188 <__aeabi_dsub>
 8007fac:	4602      	mov	r2, r0
 8007fae:	460b      	mov	r3, r1
 8007fb0:	4604      	mov	r4, r0
 8007fb2:	460d      	mov	r5, r1
 8007fb4:	4630      	mov	r0, r6
 8007fb6:	4639      	mov	r1, r7
 8007fb8:	f7f8 f8e8 	bl	800018c <__adddf3>
 8007fbc:	2000      	movs	r0, #0
 8007fbe:	4632      	mov	r2, r6
 8007fc0:	463b      	mov	r3, r7
 8007fc2:	4682      	mov	sl, r0
 8007fc4:	468b      	mov	fp, r1
 8007fc6:	f7f8 f8df 	bl	8000188 <__aeabi_dsub>
 8007fca:	4602      	mov	r2, r0
 8007fcc:	460b      	mov	r3, r1
 8007fce:	4620      	mov	r0, r4
 8007fd0:	4629      	mov	r1, r5
 8007fd2:	f7f8 f8d9 	bl	8000188 <__aeabi_dsub>
 8007fd6:	e9dd 6702 	ldrd	r6, r7, [sp, #8]
 8007fda:	9b00      	ldr	r3, [sp, #0]
 8007fdc:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8007fde:	3b01      	subs	r3, #1
 8007fe0:	4313      	orrs	r3, r2
 8007fe2:	f04f 0600 	mov.w	r6, #0
 8007fe6:	f04f 0200 	mov.w	r2, #0
 8007fea:	bf0c      	ite	eq
 8007fec:	4b2f      	ldreq	r3, [pc, #188]	; (80080ac <__ieee754_pow+0x3dc>)
 8007fee:	4b2c      	ldrne	r3, [pc, #176]	; (80080a0 <__ieee754_pow+0x3d0>)
 8007ff0:	4604      	mov	r4, r0
 8007ff2:	460d      	mov	r5, r1
 8007ff4:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8007ff8:	e9cd 2300 	strd	r2, r3, [sp]
 8007ffc:	4632      	mov	r2, r6
 8007ffe:	463b      	mov	r3, r7
 8008000:	f7f8 f8c2 	bl	8000188 <__aeabi_dsub>
 8008004:	4652      	mov	r2, sl
 8008006:	465b      	mov	r3, fp
 8008008:	f7f8 fa76 	bl	80004f8 <__aeabi_dmul>
 800800c:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8008010:	4680      	mov	r8, r0
 8008012:	4689      	mov	r9, r1
 8008014:	4620      	mov	r0, r4
 8008016:	4629      	mov	r1, r5
 8008018:	f7f8 fa6e 	bl	80004f8 <__aeabi_dmul>
 800801c:	4602      	mov	r2, r0
 800801e:	460b      	mov	r3, r1
 8008020:	4640      	mov	r0, r8
 8008022:	4649      	mov	r1, r9
 8008024:	f7f8 f8b2 	bl	800018c <__adddf3>
 8008028:	4632      	mov	r2, r6
 800802a:	463b      	mov	r3, r7
 800802c:	4680      	mov	r8, r0
 800802e:	4689      	mov	r9, r1
 8008030:	4650      	mov	r0, sl
 8008032:	4659      	mov	r1, fp
 8008034:	f7f8 fa60 	bl	80004f8 <__aeabi_dmul>
 8008038:	4604      	mov	r4, r0
 800803a:	460d      	mov	r5, r1
 800803c:	460b      	mov	r3, r1
 800803e:	4602      	mov	r2, r0
 8008040:	4649      	mov	r1, r9
 8008042:	4640      	mov	r0, r8
 8008044:	e9cd 4502 	strd	r4, r5, [sp, #8]
 8008048:	f7f8 f8a0 	bl	800018c <__adddf3>
 800804c:	4b18      	ldr	r3, [pc, #96]	; (80080b0 <__ieee754_pow+0x3e0>)
 800804e:	4682      	mov	sl, r0
 8008050:	4299      	cmp	r1, r3
 8008052:	460f      	mov	r7, r1
 8008054:	460e      	mov	r6, r1
 8008056:	f340 82e7 	ble.w	8008628 <__ieee754_pow+0x958>
 800805a:	f101 433f 	add.w	r3, r1, #3204448256	; 0xbf000000
 800805e:	f503 03e0 	add.w	r3, r3, #7340032	; 0x700000
 8008062:	4303      	orrs	r3, r0
 8008064:	f000 81e2 	beq.w	800842c <__ieee754_pow+0x75c>
 8008068:	e9dd 0100 	ldrd	r0, r1, [sp]
 800806c:	2200      	movs	r2, #0
 800806e:	2300      	movs	r3, #0
 8008070:	f7f8 fcb4 	bl	80009dc <__aeabi_dcmplt>
 8008074:	3800      	subs	r0, #0
 8008076:	bf18      	it	ne
 8008078:	2001      	movne	r0, #1
 800807a:	e72f      	b.n	8007edc <__ieee754_pow+0x20c>
 800807c:	f3af 8000 	nop.w
 8008080:	60000000 	.word	0x60000000
 8008084:	3ff71547 	.word	0x3ff71547
 8008088:	f85ddf44 	.word	0xf85ddf44
 800808c:	3e54ae0b 	.word	0x3e54ae0b
 8008090:	55555555 	.word	0x55555555
 8008094:	3fd55555 	.word	0x3fd55555
 8008098:	652b82fe 	.word	0x652b82fe
 800809c:	3ff71547 	.word	0x3ff71547
 80080a0:	3ff00000 	.word	0x3ff00000
 80080a4:	3fd00000 	.word	0x3fd00000
 80080a8:	3fe00000 	.word	0x3fe00000
 80080ac:	bff00000 	.word	0xbff00000
 80080b0:	408fffff 	.word	0x408fffff
 80080b4:	4bd4      	ldr	r3, [pc, #848]	; (8008408 <__ieee754_pow+0x738>)
 80080b6:	2200      	movs	r2, #0
 80080b8:	402b      	ands	r3, r5
 80080ba:	b943      	cbnz	r3, 80080ce <__ieee754_pow+0x3fe>
 80080bc:	4658      	mov	r0, fp
 80080be:	4661      	mov	r1, ip
 80080c0:	4bd2      	ldr	r3, [pc, #840]	; (800840c <__ieee754_pow+0x73c>)
 80080c2:	f7f8 fa19 	bl	80004f8 <__aeabi_dmul>
 80080c6:	f06f 0234 	mvn.w	r2, #52	; 0x34
 80080ca:	4683      	mov	fp, r0
 80080cc:	460c      	mov	r4, r1
 80080ce:	1523      	asrs	r3, r4, #20
 80080d0:	f2a3 33ff 	subw	r3, r3, #1023	; 0x3ff
 80080d4:	4413      	add	r3, r2
 80080d6:	930b      	str	r3, [sp, #44]	; 0x2c
 80080d8:	4bcd      	ldr	r3, [pc, #820]	; (8008410 <__ieee754_pow+0x740>)
 80080da:	f3c4 0413 	ubfx	r4, r4, #0, #20
 80080de:	f044 557f 	orr.w	r5, r4, #1069547520	; 0x3fc00000
 80080e2:	429c      	cmp	r4, r3
 80080e4:	f445 1540 	orr.w	r5, r5, #3145728	; 0x300000
 80080e8:	dd08      	ble.n	80080fc <__ieee754_pow+0x42c>
 80080ea:	4bca      	ldr	r3, [pc, #808]	; (8008414 <__ieee754_pow+0x744>)
 80080ec:	429c      	cmp	r4, r3
 80080ee:	f340 8164 	ble.w	80083ba <__ieee754_pow+0x6ea>
 80080f2:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80080f4:	f5a5 1580 	sub.w	r5, r5, #1048576	; 0x100000
 80080f8:	3301      	adds	r3, #1
 80080fa:	930b      	str	r3, [sp, #44]	; 0x2c
 80080fc:	2600      	movs	r6, #0
 80080fe:	00f3      	lsls	r3, r6, #3
 8008100:	930d      	str	r3, [sp, #52]	; 0x34
 8008102:	4bc5      	ldr	r3, [pc, #788]	; (8008418 <__ieee754_pow+0x748>)
 8008104:	4658      	mov	r0, fp
 8008106:	eb03 03c6 	add.w	r3, r3, r6, lsl #3
 800810a:	e9d3 3400 	ldrd	r3, r4, [r3]
 800810e:	4629      	mov	r1, r5
 8008110:	461a      	mov	r2, r3
 8008112:	e9cd 3408 	strd	r3, r4, [sp, #32]
 8008116:	4623      	mov	r3, r4
 8008118:	f7f8 f836 	bl	8000188 <__aeabi_dsub>
 800811c:	46da      	mov	sl, fp
 800811e:	462b      	mov	r3, r5
 8008120:	4652      	mov	r2, sl
 8008122:	e9cd 010e 	strd	r0, r1, [sp, #56]	; 0x38
 8008126:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
 800812a:	f7f8 f82f 	bl	800018c <__adddf3>
 800812e:	4602      	mov	r2, r0
 8008130:	460b      	mov	r3, r1
 8008132:	2000      	movs	r0, #0
 8008134:	49b9      	ldr	r1, [pc, #740]	; (800841c <__ieee754_pow+0x74c>)
 8008136:	f7f8 fb09 	bl	800074c <__aeabi_ddiv>
 800813a:	4602      	mov	r2, r0
 800813c:	460b      	mov	r3, r1
 800813e:	e9cd 0110 	strd	r0, r1, [sp, #64]	; 0x40
 8008142:	e9dd 010e 	ldrd	r0, r1, [sp, #56]	; 0x38
 8008146:	f7f8 f9d7 	bl	80004f8 <__aeabi_dmul>
 800814a:	e9cd 0106 	strd	r0, r1, [sp, #24]
 800814e:	e9dd 3406 	ldrd	r3, r4, [sp, #24]
 8008152:	e9cd 3404 	strd	r3, r4, [sp, #16]
 8008156:	2300      	movs	r3, #0
 8008158:	2200      	movs	r2, #0
 800815a:	46ab      	mov	fp, r5
 800815c:	106d      	asrs	r5, r5, #1
 800815e:	f045 5500 	orr.w	r5, r5, #536870912	; 0x20000000
 8008162:	9304      	str	r3, [sp, #16]
 8008164:	f505 2500 	add.w	r5, r5, #524288	; 0x80000
 8008168:	e9dd 8904 	ldrd	r8, r9, [sp, #16]
 800816c:	eb05 4386 	add.w	r3, r5, r6, lsl #18
 8008170:	4640      	mov	r0, r8
 8008172:	4649      	mov	r1, r9
 8008174:	4614      	mov	r4, r2
 8008176:	461d      	mov	r5, r3
 8008178:	f7f8 f9be 	bl	80004f8 <__aeabi_dmul>
 800817c:	4602      	mov	r2, r0
 800817e:	460b      	mov	r3, r1
 8008180:	e9dd 010e 	ldrd	r0, r1, [sp, #56]	; 0x38
 8008184:	f7f8 f800 	bl	8000188 <__aeabi_dsub>
 8008188:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 800818c:	4606      	mov	r6, r0
 800818e:	460f      	mov	r7, r1
 8008190:	4620      	mov	r0, r4
 8008192:	4629      	mov	r1, r5
 8008194:	f7f7 fff8 	bl	8000188 <__aeabi_dsub>
 8008198:	4602      	mov	r2, r0
 800819a:	460b      	mov	r3, r1
 800819c:	4650      	mov	r0, sl
 800819e:	4659      	mov	r1, fp
 80081a0:	f7f7 fff2 	bl	8000188 <__aeabi_dsub>
 80081a4:	4642      	mov	r2, r8
 80081a6:	464b      	mov	r3, r9
 80081a8:	f7f8 f9a6 	bl	80004f8 <__aeabi_dmul>
 80081ac:	4602      	mov	r2, r0
 80081ae:	460b      	mov	r3, r1
 80081b0:	4630      	mov	r0, r6
 80081b2:	4639      	mov	r1, r7
 80081b4:	f7f7 ffe8 	bl	8000188 <__aeabi_dsub>
 80081b8:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	; 0x40
 80081bc:	f7f8 f99c 	bl	80004f8 <__aeabi_dmul>
 80081c0:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 80081c4:	4682      	mov	sl, r0
 80081c6:	468b      	mov	fp, r1
 80081c8:	4610      	mov	r0, r2
 80081ca:	4619      	mov	r1, r3
 80081cc:	f7f8 f994 	bl	80004f8 <__aeabi_dmul>
 80081d0:	a37b      	add	r3, pc, #492	; (adr r3, 80083c0 <__ieee754_pow+0x6f0>)
 80081d2:	e9d3 2300 	ldrd	r2, r3, [r3]
 80081d6:	4604      	mov	r4, r0
 80081d8:	460d      	mov	r5, r1
 80081da:	f7f8 f98d 	bl	80004f8 <__aeabi_dmul>
 80081de:	a37a      	add	r3, pc, #488	; (adr r3, 80083c8 <__ieee754_pow+0x6f8>)
 80081e0:	e9d3 2300 	ldrd	r2, r3, [r3]
 80081e4:	f7f7 ffd2 	bl	800018c <__adddf3>
 80081e8:	4622      	mov	r2, r4
 80081ea:	462b      	mov	r3, r5
 80081ec:	f7f8 f984 	bl	80004f8 <__aeabi_dmul>
 80081f0:	a377      	add	r3, pc, #476	; (adr r3, 80083d0 <__ieee754_pow+0x700>)
 80081f2:	e9d3 2300 	ldrd	r2, r3, [r3]
 80081f6:	f7f7 ffc9 	bl	800018c <__adddf3>
 80081fa:	4622      	mov	r2, r4
 80081fc:	462b      	mov	r3, r5
 80081fe:	f7f8 f97b 	bl	80004f8 <__aeabi_dmul>
 8008202:	a375      	add	r3, pc, #468	; (adr r3, 80083d8 <__ieee754_pow+0x708>)
 8008204:	e9d3 2300 	ldrd	r2, r3, [r3]
 8008208:	f7f7 ffc0 	bl	800018c <__adddf3>
 800820c:	4622      	mov	r2, r4
 800820e:	462b      	mov	r3, r5
 8008210:	f7f8 f972 	bl	80004f8 <__aeabi_dmul>
 8008214:	a372      	add	r3, pc, #456	; (adr r3, 80083e0 <__ieee754_pow+0x710>)
 8008216:	e9d3 2300 	ldrd	r2, r3, [r3]
 800821a:	f7f7 ffb7 	bl	800018c <__adddf3>
 800821e:	4622      	mov	r2, r4
 8008220:	462b      	mov	r3, r5
 8008222:	f7f8 f969 	bl	80004f8 <__aeabi_dmul>
 8008226:	a370      	add	r3, pc, #448	; (adr r3, 80083e8 <__ieee754_pow+0x718>)
 8008228:	e9d3 2300 	ldrd	r2, r3, [r3]
 800822c:	f7f7 ffae 	bl	800018c <__adddf3>
 8008230:	4622      	mov	r2, r4
 8008232:	4606      	mov	r6, r0
 8008234:	460f      	mov	r7, r1
 8008236:	462b      	mov	r3, r5
 8008238:	4620      	mov	r0, r4
 800823a:	4629      	mov	r1, r5
 800823c:	f7f8 f95c 	bl	80004f8 <__aeabi_dmul>
 8008240:	4602      	mov	r2, r0
 8008242:	460b      	mov	r3, r1
 8008244:	4630      	mov	r0, r6
 8008246:	4639      	mov	r1, r7
 8008248:	f7f8 f956 	bl	80004f8 <__aeabi_dmul>
 800824c:	4604      	mov	r4, r0
 800824e:	460d      	mov	r5, r1
 8008250:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 8008254:	4642      	mov	r2, r8
 8008256:	464b      	mov	r3, r9
 8008258:	f7f7 ff98 	bl	800018c <__adddf3>
 800825c:	4652      	mov	r2, sl
 800825e:	465b      	mov	r3, fp
 8008260:	f7f8 f94a 	bl	80004f8 <__aeabi_dmul>
 8008264:	4622      	mov	r2, r4
 8008266:	462b      	mov	r3, r5
 8008268:	f7f7 ff90 	bl	800018c <__adddf3>
 800826c:	4642      	mov	r2, r8
 800826e:	4606      	mov	r6, r0
 8008270:	460f      	mov	r7, r1
 8008272:	464b      	mov	r3, r9
 8008274:	4640      	mov	r0, r8
 8008276:	4649      	mov	r1, r9
 8008278:	f7f8 f93e 	bl	80004f8 <__aeabi_dmul>
 800827c:	4602      	mov	r2, r0
 800827e:	460b      	mov	r3, r1
 8008280:	e9cd 2308 	strd	r2, r3, [sp, #32]
 8008284:	2200      	movs	r2, #0
 8008286:	4b66      	ldr	r3, [pc, #408]	; (8008420 <__ieee754_pow+0x750>)
 8008288:	f7f7 ff80 	bl	800018c <__adddf3>
 800828c:	4632      	mov	r2, r6
 800828e:	463b      	mov	r3, r7
 8008290:	f7f7 ff7c 	bl	800018c <__adddf3>
 8008294:	2400      	movs	r4, #0
 8008296:	460d      	mov	r5, r1
 8008298:	4622      	mov	r2, r4
 800829a:	460b      	mov	r3, r1
 800829c:	4640      	mov	r0, r8
 800829e:	4649      	mov	r1, r9
 80082a0:	f7f8 f92a 	bl	80004f8 <__aeabi_dmul>
 80082a4:	2200      	movs	r2, #0
 80082a6:	4680      	mov	r8, r0
 80082a8:	4689      	mov	r9, r1
 80082aa:	4620      	mov	r0, r4
 80082ac:	4629      	mov	r1, r5
 80082ae:	4b5c      	ldr	r3, [pc, #368]	; (8008420 <__ieee754_pow+0x750>)
 80082b0:	f7f7 ff6a 	bl	8000188 <__aeabi_dsub>
 80082b4:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 80082b8:	f7f7 ff66 	bl	8000188 <__aeabi_dsub>
 80082bc:	4602      	mov	r2, r0
 80082be:	460b      	mov	r3, r1
 80082c0:	4630      	mov	r0, r6
 80082c2:	4639      	mov	r1, r7
 80082c4:	f7f7 ff60 	bl	8000188 <__aeabi_dsub>
 80082c8:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 80082cc:	f7f8 f914 	bl	80004f8 <__aeabi_dmul>
 80082d0:	4622      	mov	r2, r4
 80082d2:	4606      	mov	r6, r0
 80082d4:	460f      	mov	r7, r1
 80082d6:	462b      	mov	r3, r5
 80082d8:	4650      	mov	r0, sl
 80082da:	4659      	mov	r1, fp
 80082dc:	f7f8 f90c 	bl	80004f8 <__aeabi_dmul>
 80082e0:	4602      	mov	r2, r0
 80082e2:	460b      	mov	r3, r1
 80082e4:	4630      	mov	r0, r6
 80082e6:	4639      	mov	r1, r7
 80082e8:	f7f7 ff50 	bl	800018c <__adddf3>
 80082ec:	2400      	movs	r4, #0
 80082ee:	4606      	mov	r6, r0
 80082f0:	460f      	mov	r7, r1
 80082f2:	4602      	mov	r2, r0
 80082f4:	460b      	mov	r3, r1
 80082f6:	4640      	mov	r0, r8
 80082f8:	4649      	mov	r1, r9
 80082fa:	f7f7 ff47 	bl	800018c <__adddf3>
 80082fe:	a33c      	add	r3, pc, #240	; (adr r3, 80083f0 <__ieee754_pow+0x720>)
 8008300:	e9d3 2300 	ldrd	r2, r3, [r3]
 8008304:	4620      	mov	r0, r4
 8008306:	460d      	mov	r5, r1
 8008308:	f7f8 f8f6 	bl	80004f8 <__aeabi_dmul>
 800830c:	4642      	mov	r2, r8
 800830e:	464b      	mov	r3, r9
 8008310:	e9cd 0106 	strd	r0, r1, [sp, #24]
 8008314:	4620      	mov	r0, r4
 8008316:	4629      	mov	r1, r5
 8008318:	f7f7 ff36 	bl	8000188 <__aeabi_dsub>
 800831c:	4602      	mov	r2, r0
 800831e:	460b      	mov	r3, r1
 8008320:	4630      	mov	r0, r6
 8008322:	4639      	mov	r1, r7
 8008324:	f7f7 ff30 	bl	8000188 <__aeabi_dsub>
 8008328:	a333      	add	r3, pc, #204	; (adr r3, 80083f8 <__ieee754_pow+0x728>)
 800832a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800832e:	f7f8 f8e3 	bl	80004f8 <__aeabi_dmul>
 8008332:	a333      	add	r3, pc, #204	; (adr r3, 8008400 <__ieee754_pow+0x730>)
 8008334:	e9d3 2300 	ldrd	r2, r3, [r3]
 8008338:	4606      	mov	r6, r0
 800833a:	460f      	mov	r7, r1
 800833c:	4620      	mov	r0, r4
 800833e:	4629      	mov	r1, r5
 8008340:	f7f8 f8da 	bl	80004f8 <__aeabi_dmul>
 8008344:	4602      	mov	r2, r0
 8008346:	460b      	mov	r3, r1
 8008348:	4630      	mov	r0, r6
 800834a:	4639      	mov	r1, r7
 800834c:	f7f7 ff1e 	bl	800018c <__adddf3>
 8008350:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8008352:	4b34      	ldr	r3, [pc, #208]	; (8008424 <__ieee754_pow+0x754>)
 8008354:	4413      	add	r3, r2
 8008356:	e9d3 2300 	ldrd	r2, r3, [r3]
 800835a:	f7f7 ff17 	bl	800018c <__adddf3>
 800835e:	4680      	mov	r8, r0
 8008360:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8008362:	4689      	mov	r9, r1
 8008364:	f7f8 f85e 	bl	8000424 <__aeabi_i2d>
 8008368:	4604      	mov	r4, r0
 800836a:	460d      	mov	r5, r1
 800836c:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 8008370:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8008372:	4b2d      	ldr	r3, [pc, #180]	; (8008428 <__ieee754_pow+0x758>)
 8008374:	4413      	add	r3, r2
 8008376:	e9d3 6700 	ldrd	r6, r7, [r3]
 800837a:	4642      	mov	r2, r8
 800837c:	464b      	mov	r3, r9
 800837e:	f7f7 ff05 	bl	800018c <__adddf3>
 8008382:	4632      	mov	r2, r6
 8008384:	463b      	mov	r3, r7
 8008386:	f7f7 ff01 	bl	800018c <__adddf3>
 800838a:	4622      	mov	r2, r4
 800838c:	462b      	mov	r3, r5
 800838e:	f7f7 fefd 	bl	800018c <__adddf3>
 8008392:	2000      	movs	r0, #0
 8008394:	4622      	mov	r2, r4
 8008396:	462b      	mov	r3, r5
 8008398:	4682      	mov	sl, r0
 800839a:	468b      	mov	fp, r1
 800839c:	f7f7 fef4 	bl	8000188 <__aeabi_dsub>
 80083a0:	4632      	mov	r2, r6
 80083a2:	463b      	mov	r3, r7
 80083a4:	f7f7 fef0 	bl	8000188 <__aeabi_dsub>
 80083a8:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 80083ac:	f7f7 feec 	bl	8000188 <__aeabi_dsub>
 80083b0:	4602      	mov	r2, r0
 80083b2:	460b      	mov	r3, r1
 80083b4:	4640      	mov	r0, r8
 80083b6:	4649      	mov	r1, r9
 80083b8:	e60b      	b.n	8007fd2 <__ieee754_pow+0x302>
 80083ba:	2601      	movs	r6, #1
 80083bc:	e69f      	b.n	80080fe <__ieee754_pow+0x42e>
 80083be:	bf00      	nop
 80083c0:	4a454eef 	.word	0x4a454eef
 80083c4:	3fca7e28 	.word	0x3fca7e28
 80083c8:	93c9db65 	.word	0x93c9db65
 80083cc:	3fcd864a 	.word	0x3fcd864a
 80083d0:	a91d4101 	.word	0xa91d4101
 80083d4:	3fd17460 	.word	0x3fd17460
 80083d8:	518f264d 	.word	0x518f264d
 80083dc:	3fd55555 	.word	0x3fd55555
 80083e0:	db6fabff 	.word	0xdb6fabff
 80083e4:	3fdb6db6 	.word	0x3fdb6db6
 80083e8:	33333303 	.word	0x33333303
 80083ec:	3fe33333 	.word	0x3fe33333
 80083f0:	e0000000 	.word	0xe0000000
 80083f4:	3feec709 	.word	0x3feec709
 80083f8:	dc3a03fd 	.word	0xdc3a03fd
 80083fc:	3feec709 	.word	0x3feec709
 8008400:	145b01f5 	.word	0x145b01f5
 8008404:	be3e2fe0 	.word	0xbe3e2fe0
 8008408:	7ff00000 	.word	0x7ff00000
 800840c:	43400000 	.word	0x43400000
 8008410:	0003988e 	.word	0x0003988e
 8008414:	000bb679 	.word	0x000bb679
 8008418:	08009550 	.word	0x08009550
 800841c:	3ff00000 	.word	0x3ff00000
 8008420:	40080000 	.word	0x40080000
 8008424:	08009570 	.word	0x08009570
 8008428:	08009560 	.word	0x08009560
 800842c:	a39c      	add	r3, pc, #624	; (adr r3, 80086a0 <__ieee754_pow+0x9d0>)
 800842e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8008432:	4640      	mov	r0, r8
 8008434:	4649      	mov	r1, r9
 8008436:	f7f7 fea9 	bl	800018c <__adddf3>
 800843a:	4622      	mov	r2, r4
 800843c:	e9cd 0104 	strd	r0, r1, [sp, #16]
 8008440:	462b      	mov	r3, r5
 8008442:	4650      	mov	r0, sl
 8008444:	4639      	mov	r1, r7
 8008446:	f7f7 fe9f 	bl	8000188 <__aeabi_dsub>
 800844a:	4602      	mov	r2, r0
 800844c:	460b      	mov	r3, r1
 800844e:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 8008452:	f7f8 fae1 	bl	8000a18 <__aeabi_dcmpgt>
 8008456:	2800      	cmp	r0, #0
 8008458:	f47f ae06 	bne.w	8008068 <__ieee754_pow+0x398>
 800845c:	4aa2      	ldr	r2, [pc, #648]	; (80086e8 <__ieee754_pow+0xa18>)
 800845e:	f026 4300 	bic.w	r3, r6, #2147483648	; 0x80000000
 8008462:	4293      	cmp	r3, r2
 8008464:	f340 8100 	ble.w	8008668 <__ieee754_pow+0x998>
 8008468:	f44f 1a80 	mov.w	sl, #1048576	; 0x100000
 800846c:	151b      	asrs	r3, r3, #20
 800846e:	f2a3 33fe 	subw	r3, r3, #1022	; 0x3fe
 8008472:	fa4a fa03 	asr.w	sl, sl, r3
 8008476:	44b2      	add	sl, r6
 8008478:	f3ca 510a 	ubfx	r1, sl, #20, #11
 800847c:	489b      	ldr	r0, [pc, #620]	; (80086ec <__ieee754_pow+0xa1c>)
 800847e:	f2a1 31ff 	subw	r1, r1, #1023	; 0x3ff
 8008482:	4108      	asrs	r0, r1
 8008484:	ea00 030a 	and.w	r3, r0, sl
 8008488:	f3ca 0a13 	ubfx	sl, sl, #0, #20
 800848c:	f1c1 0114 	rsb	r1, r1, #20
 8008490:	f44a 1a80 	orr.w	sl, sl, #1048576	; 0x100000
 8008494:	fa4a fa01 	asr.w	sl, sl, r1
 8008498:	2e00      	cmp	r6, #0
 800849a:	f04f 0200 	mov.w	r2, #0
 800849e:	4620      	mov	r0, r4
 80084a0:	4629      	mov	r1, r5
 80084a2:	bfb8      	it	lt
 80084a4:	f1ca 0a00 	rsblt	sl, sl, #0
 80084a8:	f7f7 fe6e 	bl	8000188 <__aeabi_dsub>
 80084ac:	e9cd 0102 	strd	r0, r1, [sp, #8]
 80084b0:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 80084b4:	2400      	movs	r4, #0
 80084b6:	4642      	mov	r2, r8
 80084b8:	464b      	mov	r3, r9
 80084ba:	f7f7 fe67 	bl	800018c <__adddf3>
 80084be:	a37a      	add	r3, pc, #488	; (adr r3, 80086a8 <__ieee754_pow+0x9d8>)
 80084c0:	e9d3 2300 	ldrd	r2, r3, [r3]
 80084c4:	4620      	mov	r0, r4
 80084c6:	460d      	mov	r5, r1
 80084c8:	f7f8 f816 	bl	80004f8 <__aeabi_dmul>
 80084cc:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 80084d0:	4606      	mov	r6, r0
 80084d2:	460f      	mov	r7, r1
 80084d4:	4620      	mov	r0, r4
 80084d6:	4629      	mov	r1, r5
 80084d8:	f7f7 fe56 	bl	8000188 <__aeabi_dsub>
 80084dc:	4602      	mov	r2, r0
 80084de:	460b      	mov	r3, r1
 80084e0:	4640      	mov	r0, r8
 80084e2:	4649      	mov	r1, r9
 80084e4:	f7f7 fe50 	bl	8000188 <__aeabi_dsub>
 80084e8:	a371      	add	r3, pc, #452	; (adr r3, 80086b0 <__ieee754_pow+0x9e0>)
 80084ea:	e9d3 2300 	ldrd	r2, r3, [r3]
 80084ee:	f7f8 f803 	bl	80004f8 <__aeabi_dmul>
 80084f2:	a371      	add	r3, pc, #452	; (adr r3, 80086b8 <__ieee754_pow+0x9e8>)
 80084f4:	e9d3 2300 	ldrd	r2, r3, [r3]
 80084f8:	4680      	mov	r8, r0
 80084fa:	4689      	mov	r9, r1
 80084fc:	4620      	mov	r0, r4
 80084fe:	4629      	mov	r1, r5
 8008500:	f7f7 fffa 	bl	80004f8 <__aeabi_dmul>
 8008504:	4602      	mov	r2, r0
 8008506:	460b      	mov	r3, r1
 8008508:	4640      	mov	r0, r8
 800850a:	4649      	mov	r1, r9
 800850c:	f7f7 fe3e 	bl	800018c <__adddf3>
 8008510:	4604      	mov	r4, r0
 8008512:	460d      	mov	r5, r1
 8008514:	4602      	mov	r2, r0
 8008516:	460b      	mov	r3, r1
 8008518:	4630      	mov	r0, r6
 800851a:	4639      	mov	r1, r7
 800851c:	f7f7 fe36 	bl	800018c <__adddf3>
 8008520:	4632      	mov	r2, r6
 8008522:	463b      	mov	r3, r7
 8008524:	4680      	mov	r8, r0
 8008526:	4689      	mov	r9, r1
 8008528:	f7f7 fe2e 	bl	8000188 <__aeabi_dsub>
 800852c:	4602      	mov	r2, r0
 800852e:	460b      	mov	r3, r1
 8008530:	4620      	mov	r0, r4
 8008532:	4629      	mov	r1, r5
 8008534:	f7f7 fe28 	bl	8000188 <__aeabi_dsub>
 8008538:	4642      	mov	r2, r8
 800853a:	4606      	mov	r6, r0
 800853c:	460f      	mov	r7, r1
 800853e:	464b      	mov	r3, r9
 8008540:	4640      	mov	r0, r8
 8008542:	4649      	mov	r1, r9
 8008544:	f7f7 ffd8 	bl	80004f8 <__aeabi_dmul>
 8008548:	a35d      	add	r3, pc, #372	; (adr r3, 80086c0 <__ieee754_pow+0x9f0>)
 800854a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800854e:	4604      	mov	r4, r0
 8008550:	460d      	mov	r5, r1
 8008552:	f7f7 ffd1 	bl	80004f8 <__aeabi_dmul>
 8008556:	a35c      	add	r3, pc, #368	; (adr r3, 80086c8 <__ieee754_pow+0x9f8>)
 8008558:	e9d3 2300 	ldrd	r2, r3, [r3]
 800855c:	f7f7 fe14 	bl	8000188 <__aeabi_dsub>
 8008560:	4622      	mov	r2, r4
 8008562:	462b      	mov	r3, r5
 8008564:	f7f7 ffc8 	bl	80004f8 <__aeabi_dmul>
 8008568:	a359      	add	r3, pc, #356	; (adr r3, 80086d0 <__ieee754_pow+0xa00>)
 800856a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800856e:	f7f7 fe0d 	bl	800018c <__adddf3>
 8008572:	4622      	mov	r2, r4
 8008574:	462b      	mov	r3, r5
 8008576:	f7f7 ffbf 	bl	80004f8 <__aeabi_dmul>
 800857a:	a357      	add	r3, pc, #348	; (adr r3, 80086d8 <__ieee754_pow+0xa08>)
 800857c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8008580:	f7f7 fe02 	bl	8000188 <__aeabi_dsub>
 8008584:	4622      	mov	r2, r4
 8008586:	462b      	mov	r3, r5
 8008588:	f7f7 ffb6 	bl	80004f8 <__aeabi_dmul>
 800858c:	a354      	add	r3, pc, #336	; (adr r3, 80086e0 <__ieee754_pow+0xa10>)
 800858e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8008592:	f7f7 fdfb 	bl	800018c <__adddf3>
 8008596:	4622      	mov	r2, r4
 8008598:	462b      	mov	r3, r5
 800859a:	f7f7 ffad 	bl	80004f8 <__aeabi_dmul>
 800859e:	4602      	mov	r2, r0
 80085a0:	460b      	mov	r3, r1
 80085a2:	4640      	mov	r0, r8
 80085a4:	4649      	mov	r1, r9
 80085a6:	f7f7 fdef 	bl	8000188 <__aeabi_dsub>
 80085aa:	4604      	mov	r4, r0
 80085ac:	460d      	mov	r5, r1
 80085ae:	4602      	mov	r2, r0
 80085b0:	460b      	mov	r3, r1
 80085b2:	4640      	mov	r0, r8
 80085b4:	4649      	mov	r1, r9
 80085b6:	f7f7 ff9f 	bl	80004f8 <__aeabi_dmul>
 80085ba:	2200      	movs	r2, #0
 80085bc:	e9cd 0102 	strd	r0, r1, [sp, #8]
 80085c0:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 80085c4:	4620      	mov	r0, r4
 80085c6:	4629      	mov	r1, r5
 80085c8:	f7f7 fdde 	bl	8000188 <__aeabi_dsub>
 80085cc:	4602      	mov	r2, r0
 80085ce:	460b      	mov	r3, r1
 80085d0:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 80085d4:	f7f8 f8ba 	bl	800074c <__aeabi_ddiv>
 80085d8:	4632      	mov	r2, r6
 80085da:	4604      	mov	r4, r0
 80085dc:	460d      	mov	r5, r1
 80085de:	463b      	mov	r3, r7
 80085e0:	4640      	mov	r0, r8
 80085e2:	4649      	mov	r1, r9
 80085e4:	f7f7 ff88 	bl	80004f8 <__aeabi_dmul>
 80085e8:	4632      	mov	r2, r6
 80085ea:	463b      	mov	r3, r7
 80085ec:	f7f7 fdce 	bl	800018c <__adddf3>
 80085f0:	4602      	mov	r2, r0
 80085f2:	460b      	mov	r3, r1
 80085f4:	4620      	mov	r0, r4
 80085f6:	4629      	mov	r1, r5
 80085f8:	f7f7 fdc6 	bl	8000188 <__aeabi_dsub>
 80085fc:	4642      	mov	r2, r8
 80085fe:	464b      	mov	r3, r9
 8008600:	f7f7 fdc2 	bl	8000188 <__aeabi_dsub>
 8008604:	4602      	mov	r2, r0
 8008606:	460b      	mov	r3, r1
 8008608:	2000      	movs	r0, #0
 800860a:	4939      	ldr	r1, [pc, #228]	; (80086f0 <__ieee754_pow+0xa20>)
 800860c:	f7f7 fdbc 	bl	8000188 <__aeabi_dsub>
 8008610:	eb01 540a 	add.w	r4, r1, sl, lsl #20
 8008614:	f5b4 1f80 	cmp.w	r4, #1048576	; 0x100000
 8008618:	da29      	bge.n	800866e <__ieee754_pow+0x99e>
 800861a:	4652      	mov	r2, sl
 800861c:	f000 f874 	bl	8008708 <scalbn>
 8008620:	e9dd 2300 	ldrd	r2, r3, [sp]
 8008624:	f7ff bbfd 	b.w	8007e22 <__ieee754_pow+0x152>
 8008628:	4b32      	ldr	r3, [pc, #200]	; (80086f4 <__ieee754_pow+0xa24>)
 800862a:	f021 4700 	bic.w	r7, r1, #2147483648	; 0x80000000
 800862e:	429f      	cmp	r7, r3
 8008630:	f77f af14 	ble.w	800845c <__ieee754_pow+0x78c>
 8008634:	4b30      	ldr	r3, [pc, #192]	; (80086f8 <__ieee754_pow+0xa28>)
 8008636:	440b      	add	r3, r1
 8008638:	4303      	orrs	r3, r0
 800863a:	d009      	beq.n	8008650 <__ieee754_pow+0x980>
 800863c:	e9dd 0100 	ldrd	r0, r1, [sp]
 8008640:	2200      	movs	r2, #0
 8008642:	2300      	movs	r3, #0
 8008644:	f7f8 f9ca 	bl	80009dc <__aeabi_dcmplt>
 8008648:	3800      	subs	r0, #0
 800864a:	bf18      	it	ne
 800864c:	2001      	movne	r0, #1
 800864e:	e452      	b.n	8007ef6 <__ieee754_pow+0x226>
 8008650:	4622      	mov	r2, r4
 8008652:	462b      	mov	r3, r5
 8008654:	f7f7 fd98 	bl	8000188 <__aeabi_dsub>
 8008658:	4642      	mov	r2, r8
 800865a:	464b      	mov	r3, r9
 800865c:	f7f8 f9d2 	bl	8000a04 <__aeabi_dcmpge>
 8008660:	2800      	cmp	r0, #0
 8008662:	f43f aefb 	beq.w	800845c <__ieee754_pow+0x78c>
 8008666:	e7e9      	b.n	800863c <__ieee754_pow+0x96c>
 8008668:	f04f 0a00 	mov.w	sl, #0
 800866c:	e720      	b.n	80084b0 <__ieee754_pow+0x7e0>
 800866e:	4621      	mov	r1, r4
 8008670:	e7d6      	b.n	8008620 <__ieee754_pow+0x950>
 8008672:	f04f 0b00 	mov.w	fp, #0
 8008676:	f8df c078 	ldr.w	ip, [pc, #120]	; 80086f0 <__ieee754_pow+0xa20>
 800867a:	f7ff bbb9 	b.w	8007df0 <__ieee754_pow+0x120>
 800867e:	f04f 0b00 	mov.w	fp, #0
 8008682:	f04f 0c00 	mov.w	ip, #0
 8008686:	f7ff bbb3 	b.w	8007df0 <__ieee754_pow+0x120>
 800868a:	4640      	mov	r0, r8
 800868c:	4649      	mov	r1, r9
 800868e:	f7ff bb3c 	b.w	8007d0a <__ieee754_pow+0x3a>
 8008692:	9200      	str	r2, [sp, #0]
 8008694:	f7ff bb88 	b.w	8007da8 <__ieee754_pow+0xd8>
 8008698:	2300      	movs	r3, #0
 800869a:	f7ff bb72 	b.w	8007d82 <__ieee754_pow+0xb2>
 800869e:	bf00      	nop
 80086a0:	652b82fe 	.word	0x652b82fe
 80086a4:	3c971547 	.word	0x3c971547
 80086a8:	00000000 	.word	0x00000000
 80086ac:	3fe62e43 	.word	0x3fe62e43
 80086b0:	fefa39ef 	.word	0xfefa39ef
 80086b4:	3fe62e42 	.word	0x3fe62e42
 80086b8:	0ca86c39 	.word	0x0ca86c39
 80086bc:	be205c61 	.word	0xbe205c61
 80086c0:	72bea4d0 	.word	0x72bea4d0
 80086c4:	3e663769 	.word	0x3e663769
 80086c8:	c5d26bf1 	.word	0xc5d26bf1
 80086cc:	3ebbbd41 	.word	0x3ebbbd41
 80086d0:	af25de2c 	.word	0xaf25de2c
 80086d4:	3f11566a 	.word	0x3f11566a
 80086d8:	16bebd93 	.word	0x16bebd93
 80086dc:	3f66c16c 	.word	0x3f66c16c
 80086e0:	5555553e 	.word	0x5555553e
 80086e4:	3fc55555 	.word	0x3fc55555
 80086e8:	3fe00000 	.word	0x3fe00000
 80086ec:	fff00000 	.word	0xfff00000
 80086f0:	3ff00000 	.word	0x3ff00000
 80086f4:	4090cbff 	.word	0x4090cbff
 80086f8:	3f6f3400 	.word	0x3f6f3400

080086fc <fabs>:
 80086fc:	f021 4300 	bic.w	r3, r1, #2147483648	; 0x80000000
 8008700:	4619      	mov	r1, r3
 8008702:	4770      	bx	lr
 8008704:	0000      	movs	r0, r0
	...

08008708 <scalbn>:
 8008708:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800870a:	4616      	mov	r6, r2
 800870c:	f3c1 520a 	ubfx	r2, r1, #20, #11
 8008710:	4604      	mov	r4, r0
 8008712:	460d      	mov	r5, r1
 8008714:	460b      	mov	r3, r1
 8008716:	b992      	cbnz	r2, 800873e <scalbn+0x36>
 8008718:	f021 4300 	bic.w	r3, r1, #2147483648	; 0x80000000
 800871c:	4303      	orrs	r3, r0
 800871e:	d03c      	beq.n	800879a <scalbn+0x92>
 8008720:	4b31      	ldr	r3, [pc, #196]	; (80087e8 <scalbn+0xe0>)
 8008722:	2200      	movs	r2, #0
 8008724:	f7f7 fee8 	bl	80004f8 <__aeabi_dmul>
 8008728:	4b30      	ldr	r3, [pc, #192]	; (80087ec <scalbn+0xe4>)
 800872a:	4604      	mov	r4, r0
 800872c:	429e      	cmp	r6, r3
 800872e:	460d      	mov	r5, r1
 8008730:	da0f      	bge.n	8008752 <scalbn+0x4a>
 8008732:	a329      	add	r3, pc, #164	; (adr r3, 80087d8 <scalbn+0xd0>)
 8008734:	e9d3 2300 	ldrd	r2, r3, [r3]
 8008738:	f7f7 fede 	bl	80004f8 <__aeabi_dmul>
 800873c:	e006      	b.n	800874c <scalbn+0x44>
 800873e:	f240 77ff 	movw	r7, #2047	; 0x7ff
 8008742:	42ba      	cmp	r2, r7
 8008744:	d109      	bne.n	800875a <scalbn+0x52>
 8008746:	4602      	mov	r2, r0
 8008748:	f7f7 fd20 	bl	800018c <__adddf3>
 800874c:	4604      	mov	r4, r0
 800874e:	460d      	mov	r5, r1
 8008750:	e023      	b.n	800879a <scalbn+0x92>
 8008752:	460b      	mov	r3, r1
 8008754:	f3c1 520a 	ubfx	r2, r1, #20, #11
 8008758:	3a36      	subs	r2, #54	; 0x36
 800875a:	f24c 3150 	movw	r1, #50000	; 0xc350
 800875e:	428e      	cmp	r6, r1
 8008760:	dd0e      	ble.n	8008780 <scalbn+0x78>
 8008762:	a31f      	add	r3, pc, #124	; (adr r3, 80087e0 <scalbn+0xd8>)
 8008764:	e9d3 2300 	ldrd	r2, r3, [r3]
 8008768:	f005 4400 	and.w	r4, r5, #2147483648	; 0x80000000
 800876c:	f044 41fc 	orr.w	r1, r4, #2113929216	; 0x7e000000
 8008770:	f441 115f 	orr.w	r1, r1, #3653632	; 0x37c000
 8008774:	f441 5110 	orr.w	r1, r1, #9216	; 0x2400
 8008778:	481d      	ldr	r0, [pc, #116]	; (80087f0 <scalbn+0xe8>)
 800877a:	f041 013c 	orr.w	r1, r1, #60	; 0x3c
 800877e:	e7db      	b.n	8008738 <scalbn+0x30>
 8008780:	f240 71fe 	movw	r1, #2046	; 0x7fe
 8008784:	4432      	add	r2, r6
 8008786:	428a      	cmp	r2, r1
 8008788:	dceb      	bgt.n	8008762 <scalbn+0x5a>
 800878a:	2a00      	cmp	r2, #0
 800878c:	dd08      	ble.n	80087a0 <scalbn+0x98>
 800878e:	f023 43ff 	bic.w	r3, r3, #2139095040	; 0x7f800000
 8008792:	f423 03e0 	bic.w	r3, r3, #7340032	; 0x700000
 8008796:	ea43 5502 	orr.w	r5, r3, r2, lsl #20
 800879a:	4620      	mov	r0, r4
 800879c:	4629      	mov	r1, r5
 800879e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80087a0:	f112 0f35 	cmn.w	r2, #53	; 0x35
 80087a4:	da0c      	bge.n	80087c0 <scalbn+0xb8>
 80087a6:	a30c      	add	r3, pc, #48	; (adr r3, 80087d8 <scalbn+0xd0>)
 80087a8:	e9d3 2300 	ldrd	r2, r3, [r3]
 80087ac:	f005 4400 	and.w	r4, r5, #2147483648	; 0x80000000
 80087b0:	f044 71d2 	orr.w	r1, r4, #27525120	; 0x1a40000
 80087b4:	f441 31b7 	orr.w	r1, r1, #93696	; 0x16e00
 80087b8:	480e      	ldr	r0, [pc, #56]	; (80087f4 <scalbn+0xec>)
 80087ba:	f041 011f 	orr.w	r1, r1, #31
 80087be:	e7bb      	b.n	8008738 <scalbn+0x30>
 80087c0:	f023 43ff 	bic.w	r3, r3, #2139095040	; 0x7f800000
 80087c4:	3236      	adds	r2, #54	; 0x36
 80087c6:	f423 03e0 	bic.w	r3, r3, #7340032	; 0x700000
 80087ca:	ea43 5502 	orr.w	r5, r3, r2, lsl #20
 80087ce:	4620      	mov	r0, r4
 80087d0:	4629      	mov	r1, r5
 80087d2:	2200      	movs	r2, #0
 80087d4:	4b08      	ldr	r3, [pc, #32]	; (80087f8 <scalbn+0xf0>)
 80087d6:	e7af      	b.n	8008738 <scalbn+0x30>
 80087d8:	c2f8f359 	.word	0xc2f8f359
 80087dc:	01a56e1f 	.word	0x01a56e1f
 80087e0:	8800759c 	.word	0x8800759c
 80087e4:	7e37e43c 	.word	0x7e37e43c
 80087e8:	43500000 	.word	0x43500000
 80087ec:	ffff3cb0 	.word	0xffff3cb0
 80087f0:	8800759c 	.word	0x8800759c
 80087f4:	c2f8f359 	.word	0xc2f8f359
 80087f8:	3c900000 	.word	0x3c900000

080087fc <with_errno>:
 80087fc:	b570      	push	{r4, r5, r6, lr}
 80087fe:	4604      	mov	r4, r0
 8008800:	460d      	mov	r5, r1
 8008802:	4616      	mov	r6, r2
 8008804:	f7fb fca4 	bl	8004150 <__errno>
 8008808:	4629      	mov	r1, r5
 800880a:	6006      	str	r6, [r0, #0]
 800880c:	4620      	mov	r0, r4
 800880e:	bd70      	pop	{r4, r5, r6, pc}

08008810 <xflow>:
 8008810:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8008812:	4615      	mov	r5, r2
 8008814:	461c      	mov	r4, r3
 8008816:	b180      	cbz	r0, 800883a <xflow+0x2a>
 8008818:	4610      	mov	r0, r2
 800881a:	f103 4100 	add.w	r1, r3, #2147483648	; 0x80000000
 800881e:	e9cd 0100 	strd	r0, r1, [sp]
 8008822:	e9dd 2300 	ldrd	r2, r3, [sp]
 8008826:	4628      	mov	r0, r5
 8008828:	4621      	mov	r1, r4
 800882a:	f7f7 fe65 	bl	80004f8 <__aeabi_dmul>
 800882e:	2222      	movs	r2, #34	; 0x22
 8008830:	b003      	add	sp, #12
 8008832:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 8008836:	f7ff bfe1 	b.w	80087fc <with_errno>
 800883a:	4610      	mov	r0, r2
 800883c:	4619      	mov	r1, r3
 800883e:	e7ee      	b.n	800881e <xflow+0xe>

08008840 <__math_uflow>:
 8008840:	2200      	movs	r2, #0
 8008842:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
 8008846:	f7ff bfe3 	b.w	8008810 <xflow>

0800884a <__math_oflow>:
 800884a:	2200      	movs	r2, #0
 800884c:	f04f 43e0 	mov.w	r3, #1879048192	; 0x70000000
 8008850:	f7ff bfde 	b.w	8008810 <xflow>

08008854 <_init>:
 8008854:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8008856:	bf00      	nop
 8008858:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800885a:	bc08      	pop	{r3}
 800885c:	469e      	mov	lr, r3
 800885e:	4770      	bx	lr

08008860 <_fini>:
 8008860:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8008862:	bf00      	nop
 8008864:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8008866:	bc08      	pop	{r3}
 8008868:	469e      	mov	lr, r3
 800886a:	4770      	bx	lr
